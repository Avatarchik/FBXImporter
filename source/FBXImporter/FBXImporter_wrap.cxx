/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.7
 *
 * This file is not intended to be easily readable and contains a number of
 * coding conventions designed to improve portability and efficiency. Do not make
 * changes to this file unless you know what you are doing--modify the SWIG
 * interface file instead.
 * ----------------------------------------------------------------------------- */

#define SWIGCSHARP


#ifdef __cplusplus
/* SwigValueWrapper is described in swig.swg */
template<typename T> class SwigValueWrapper {
  struct SwigMovePointer {
    T *ptr;
    SwigMovePointer(T *p) : ptr(p) { }
    ~SwigMovePointer() { delete ptr; }
    SwigMovePointer& operator=(SwigMovePointer& rhs) { T* oldptr = ptr; ptr = 0; delete oldptr; ptr = rhs.ptr; rhs.ptr = 0; return *this; }
  } pointer;
  SwigValueWrapper& operator=(const SwigValueWrapper<T>& rhs);
  SwigValueWrapper(const SwigValueWrapper<T>& rhs);
public:
  SwigValueWrapper() : pointer(0) { }
  SwigValueWrapper& operator=(const T& t) { SwigMovePointer tmp(new T(t)); pointer = tmp; return *this; }
  operator T&() const { return *pointer.ptr; }
  T *operator&() { return pointer.ptr; }
};

template <typename T> T SwigValueInit() {
  return T();
}
#endif

/* -----------------------------------------------------------------------------
 *  This section contains generic SWIG labels for method/variable
 *  declarations/attributes, and other compiler dependent labels.
 * ----------------------------------------------------------------------------- */

/* template workaround for compilers that cannot correctly implement the C++ standard */
#ifndef SWIGTEMPLATEDISAMBIGUATOR
# if defined(__SUNPRO_CC) && (__SUNPRO_CC <= 0x560)
#  define SWIGTEMPLATEDISAMBIGUATOR template
# elif defined(__HP_aCC)
/* Needed even with `aCC -AA' when `aCC -V' reports HP ANSI C++ B3910B A.03.55 */
/* If we find a maximum version that requires this, the test would be __HP_aCC <= 35500 for A.03.55 */
#  define SWIGTEMPLATEDISAMBIGUATOR template
# else
#  define SWIGTEMPLATEDISAMBIGUATOR
# endif
#endif

/* inline attribute */
#ifndef SWIGINLINE
# if defined(__cplusplus) || (defined(__GNUC__) && !defined(__STRICT_ANSI__))
#   define SWIGINLINE inline
# else
#   define SWIGINLINE
# endif
#endif

/* attribute recognised by some compilers to avoid 'unused' warnings */
#ifndef SWIGUNUSED
# if defined(__GNUC__)
#   if !(defined(__cplusplus)) || (__GNUC__ > 3 || (__GNUC__ == 3 && __GNUC_MINOR__ >= 4))
#     define SWIGUNUSED __attribute__ ((__unused__))
#   else
#     define SWIGUNUSED
#   endif
# elif defined(__ICC)
#   define SWIGUNUSED __attribute__ ((__unused__))
# else
#   define SWIGUNUSED
# endif
#endif

#ifndef SWIG_MSC_UNSUPPRESS_4505
# if defined(_MSC_VER)
#   pragma warning(disable : 4505) /* unreferenced local function has been removed */
# endif
#endif

#ifndef SWIGUNUSEDPARM
# ifdef __cplusplus
#   define SWIGUNUSEDPARM(p)
# else
#   define SWIGUNUSEDPARM(p) p SWIGUNUSED
# endif
#endif

/* internal SWIG method */
#ifndef SWIGINTERN
# define SWIGINTERN static SWIGUNUSED
#endif

/* internal inline SWIG method */
#ifndef SWIGINTERNINLINE
# define SWIGINTERNINLINE SWIGINTERN SWIGINLINE
#endif

/* exporting methods */
#if (__GNUC__ >= 4) || (__GNUC__ == 3 && __GNUC_MINOR__ >= 4)
#  ifndef GCC_HASCLASSVISIBILITY
#    define GCC_HASCLASSVISIBILITY
#  endif
#endif

#ifndef SWIGEXPORT
# if defined(_WIN32) || defined(__WIN32__) || defined(__CYGWIN__)
#   if defined(STATIC_LINKED)
#     define SWIGEXPORT
#   else
#     define SWIGEXPORT __declspec(dllexport)
#   endif
# else
#   if defined(__GNUC__) && defined(GCC_HASCLASSVISIBILITY)
#     define SWIGEXPORT __attribute__ ((visibility("default")))
#   else
#     define SWIGEXPORT
#   endif
# endif
#endif

/* calling conventions for Windows */
#ifndef SWIGSTDCALL
# if defined(_WIN32) || defined(__WIN32__) || defined(__CYGWIN__)
#   define SWIGSTDCALL __stdcall
# else
#   define SWIGSTDCALL
# endif
#endif

/* Deal with Microsoft's attempt at deprecating C standard runtime functions */
#if !defined(SWIG_NO_CRT_SECURE_NO_DEPRECATE) && defined(_MSC_VER) && !defined(_CRT_SECURE_NO_DEPRECATE)
# define _CRT_SECURE_NO_DEPRECATE
#endif

/* Deal with Microsoft's attempt at deprecating methods in the standard C++ library */
#if !defined(SWIG_NO_SCL_SECURE_NO_DEPRECATE) && defined(_MSC_VER) && !defined(_SCL_SECURE_NO_DEPRECATE)
# define _SCL_SECURE_NO_DEPRECATE
#endif

/* Deal with Apple's deprecated 'AssertMacros.h' from Carbon-framework */
#if defined(__APPLE__) && !defined(__ASSERT_MACROS_DEFINE_VERSIONS_WITHOUT_UNDERSCORES)
# define __ASSERT_MACROS_DEFINE_VERSIONS_WITHOUT_UNDERSCORES 0
#endif

/* Intel's compiler complains if a variable which was never initialised is
 * cast to void, which is a common idiom which we use to indicate that we
 * are aware a variable isn't used.  So we just silence that warning.
 * See: https://github.com/swig/swig/issues/192 for more discussion.
 */
#ifdef __INTEL_COMPILER
# pragma warning disable 592
#endif


#include <stdlib.h>
#include <string.h>
#include <stdio.h>


/* Support for throwing C# exceptions from C/C++. There are two types: 
 * Exceptions that take a message and ArgumentExceptions that take a message and a parameter name. */
typedef enum {
  SWIG_CSharpApplicationException,
  SWIG_CSharpArithmeticException,
  SWIG_CSharpDivideByZeroException,
  SWIG_CSharpIndexOutOfRangeException,
  SWIG_CSharpInvalidCastException,
  SWIG_CSharpInvalidOperationException,
  SWIG_CSharpIOException,
  SWIG_CSharpNullReferenceException,
  SWIG_CSharpOutOfMemoryException,
  SWIG_CSharpOverflowException,
  SWIG_CSharpSystemException
} SWIG_CSharpExceptionCodes;

typedef enum {
  SWIG_CSharpArgumentException,
  SWIG_CSharpArgumentNullException,
  SWIG_CSharpArgumentOutOfRangeException
} SWIG_CSharpExceptionArgumentCodes;

typedef void (SWIGSTDCALL* SWIG_CSharpExceptionCallback_t)(const char *);
typedef void (SWIGSTDCALL* SWIG_CSharpExceptionArgumentCallback_t)(const char *, const char *);

typedef struct {
  SWIG_CSharpExceptionCodes code;
  SWIG_CSharpExceptionCallback_t callback;
} SWIG_CSharpException_t;

typedef struct {
  SWIG_CSharpExceptionArgumentCodes code;
  SWIG_CSharpExceptionArgumentCallback_t callback;
} SWIG_CSharpExceptionArgument_t;

static SWIG_CSharpException_t SWIG_csharp_exceptions[] = {
  { SWIG_CSharpApplicationException, NULL },
  { SWIG_CSharpArithmeticException, NULL },
  { SWIG_CSharpDivideByZeroException, NULL },
  { SWIG_CSharpIndexOutOfRangeException, NULL },
  { SWIG_CSharpInvalidCastException, NULL },
  { SWIG_CSharpInvalidOperationException, NULL },
  { SWIG_CSharpIOException, NULL },
  { SWIG_CSharpNullReferenceException, NULL },
  { SWIG_CSharpOutOfMemoryException, NULL },
  { SWIG_CSharpOverflowException, NULL },
  { SWIG_CSharpSystemException, NULL }
};

static SWIG_CSharpExceptionArgument_t SWIG_csharp_exceptions_argument[] = {
  { SWIG_CSharpArgumentException, NULL },
  { SWIG_CSharpArgumentNullException, NULL },
  { SWIG_CSharpArgumentOutOfRangeException, NULL }
};

static void SWIGUNUSED SWIG_CSharpSetPendingException(SWIG_CSharpExceptionCodes code, const char *msg) {
  SWIG_CSharpExceptionCallback_t callback = SWIG_csharp_exceptions[SWIG_CSharpApplicationException].callback;
  if ((size_t)code < sizeof(SWIG_csharp_exceptions)/sizeof(SWIG_CSharpException_t)) {
    callback = SWIG_csharp_exceptions[code].callback;
  }
  callback(msg);
}

static void SWIGUNUSED SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpExceptionArgumentCodes code, const char *msg, const char *param_name) {
  SWIG_CSharpExceptionArgumentCallback_t callback = SWIG_csharp_exceptions_argument[SWIG_CSharpArgumentException].callback;
  if ((size_t)code < sizeof(SWIG_csharp_exceptions_argument)/sizeof(SWIG_CSharpExceptionArgument_t)) {
    callback = SWIG_csharp_exceptions_argument[code].callback;
  }
  callback(msg, param_name);
}


#ifdef __cplusplus
extern "C" 
#endif
SWIGEXPORT void SWIGSTDCALL SWIGRegisterExceptionCallbacks_FBXImporterUnmanaged(
                                                SWIG_CSharpExceptionCallback_t applicationCallback,
                                                SWIG_CSharpExceptionCallback_t arithmeticCallback,
                                                SWIG_CSharpExceptionCallback_t divideByZeroCallback, 
                                                SWIG_CSharpExceptionCallback_t indexOutOfRangeCallback, 
                                                SWIG_CSharpExceptionCallback_t invalidCastCallback,
                                                SWIG_CSharpExceptionCallback_t invalidOperationCallback,
                                                SWIG_CSharpExceptionCallback_t ioCallback,
                                                SWIG_CSharpExceptionCallback_t nullReferenceCallback,
                                                SWIG_CSharpExceptionCallback_t outOfMemoryCallback, 
                                                SWIG_CSharpExceptionCallback_t overflowCallback, 
                                                SWIG_CSharpExceptionCallback_t systemCallback) {
  SWIG_csharp_exceptions[SWIG_CSharpApplicationException].callback = applicationCallback;
  SWIG_csharp_exceptions[SWIG_CSharpArithmeticException].callback = arithmeticCallback;
  SWIG_csharp_exceptions[SWIG_CSharpDivideByZeroException].callback = divideByZeroCallback;
  SWIG_csharp_exceptions[SWIG_CSharpIndexOutOfRangeException].callback = indexOutOfRangeCallback;
  SWIG_csharp_exceptions[SWIG_CSharpInvalidCastException].callback = invalidCastCallback;
  SWIG_csharp_exceptions[SWIG_CSharpInvalidOperationException].callback = invalidOperationCallback;
  SWIG_csharp_exceptions[SWIG_CSharpIOException].callback = ioCallback;
  SWIG_csharp_exceptions[SWIG_CSharpNullReferenceException].callback = nullReferenceCallback;
  SWIG_csharp_exceptions[SWIG_CSharpOutOfMemoryException].callback = outOfMemoryCallback;
  SWIG_csharp_exceptions[SWIG_CSharpOverflowException].callback = overflowCallback;
  SWIG_csharp_exceptions[SWIG_CSharpSystemException].callback = systemCallback;
}

#ifdef __cplusplus
extern "C" 
#endif
SWIGEXPORT void SWIGSTDCALL SWIGRegisterExceptionArgumentCallbacks_FBXImporterUnmanaged(
                                                SWIG_CSharpExceptionArgumentCallback_t argumentCallback,
                                                SWIG_CSharpExceptionArgumentCallback_t argumentNullCallback,
                                                SWIG_CSharpExceptionArgumentCallback_t argumentOutOfRangeCallback) {
  SWIG_csharp_exceptions_argument[SWIG_CSharpArgumentException].callback = argumentCallback;
  SWIG_csharp_exceptions_argument[SWIG_CSharpArgumentNullException].callback = argumentNullCallback;
  SWIG_csharp_exceptions_argument[SWIG_CSharpArgumentOutOfRangeException].callback = argumentOutOfRangeCallback;
}


/* Callback for returning strings to C# without leaking memory */
typedef char * (SWIGSTDCALL* SWIG_CSharpStringHelperCallback)(const char *);
static SWIG_CSharpStringHelperCallback SWIG_csharp_string_callback = NULL;


#ifdef __cplusplus
extern "C" 
#endif
SWIGEXPORT void SWIGSTDCALL SWIGRegisterStringCallback_FBXImporterUnmanaged(SWIG_CSharpStringHelperCallback callback) {
  SWIG_csharp_string_callback = callback;
}


/* Contract support */

#define SWIG_contract_assert(nullreturn, expr, msg) if (!(expr)) {SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, msg, ""); return nullreturn; } else


#include <string>


	#include "FBXColor.h"
	#include "FBXVector2.h"
	#include "FBXVector3.h"
	#include "FBXVector4.h"
	#include "FBXMatrix4x4.h"

	#include "RCPtr.h"
	#include "FBXScene.h"
	#include "FBXGlobalSettings.h"
	#include "FBXMaterial.h"
	#include "FBXModel.h"
	#include "FBXImporter.h"


#ifdef __cplusplus
extern "C" {
#endif

SWIGEXPORT void SWIGSTDCALL CSharp_FBXColor_black_set(void * jarg1) {
  FBXImporterUnmanaged::FBXColor *arg1 = (FBXImporterUnmanaged::FBXColor *) 0 ;
  
  arg1 = (FBXImporterUnmanaged::FBXColor *)jarg1; 
  FBXImporterUnmanaged::FBXColor::black = *arg1;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_FBXColor_black_get() {
  void * jresult ;
  FBXImporterUnmanaged::FBXColor *result = 0 ;
  
  result = (FBXImporterUnmanaged::FBXColor *)&FBXImporterUnmanaged::FBXColor::black;
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_FBXColor_r_set(void * jarg1, float jarg2) {
  FBXImporterUnmanaged::FBXColor *arg1 = (FBXImporterUnmanaged::FBXColor *) 0 ;
  float arg2 ;
  
  arg1 = (FBXImporterUnmanaged::FBXColor *)jarg1; 
  arg2 = (float)jarg2; 
  if (arg1) (arg1)->r = arg2;
}


SWIGEXPORT float SWIGSTDCALL CSharp_FBXColor_r_get(void * jarg1) {
  float jresult ;
  FBXImporterUnmanaged::FBXColor *arg1 = (FBXImporterUnmanaged::FBXColor *) 0 ;
  float result;
  
  arg1 = (FBXImporterUnmanaged::FBXColor *)jarg1; 
  result = (float) ((arg1)->r);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_FBXColor_g_set(void * jarg1, float jarg2) {
  FBXImporterUnmanaged::FBXColor *arg1 = (FBXImporterUnmanaged::FBXColor *) 0 ;
  float arg2 ;
  
  arg1 = (FBXImporterUnmanaged::FBXColor *)jarg1; 
  arg2 = (float)jarg2; 
  if (arg1) (arg1)->g = arg2;
}


SWIGEXPORT float SWIGSTDCALL CSharp_FBXColor_g_get(void * jarg1) {
  float jresult ;
  FBXImporterUnmanaged::FBXColor *arg1 = (FBXImporterUnmanaged::FBXColor *) 0 ;
  float result;
  
  arg1 = (FBXImporterUnmanaged::FBXColor *)jarg1; 
  result = (float) ((arg1)->g);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_FBXColor_b_set(void * jarg1, float jarg2) {
  FBXImporterUnmanaged::FBXColor *arg1 = (FBXImporterUnmanaged::FBXColor *) 0 ;
  float arg2 ;
  
  arg1 = (FBXImporterUnmanaged::FBXColor *)jarg1; 
  arg2 = (float)jarg2; 
  if (arg1) (arg1)->b = arg2;
}


SWIGEXPORT float SWIGSTDCALL CSharp_FBXColor_b_get(void * jarg1) {
  float jresult ;
  FBXImporterUnmanaged::FBXColor *arg1 = (FBXImporterUnmanaged::FBXColor *) 0 ;
  float result;
  
  arg1 = (FBXImporterUnmanaged::FBXColor *)jarg1; 
  result = (float) ((arg1)->b);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_FBXColor_a_set(void * jarg1, float jarg2) {
  FBXImporterUnmanaged::FBXColor *arg1 = (FBXImporterUnmanaged::FBXColor *) 0 ;
  float arg2 ;
  
  arg1 = (FBXImporterUnmanaged::FBXColor *)jarg1; 
  arg2 = (float)jarg2; 
  if (arg1) (arg1)->a = arg2;
}


SWIGEXPORT float SWIGSTDCALL CSharp_FBXColor_a_get(void * jarg1) {
  float jresult ;
  FBXImporterUnmanaged::FBXColor *arg1 = (FBXImporterUnmanaged::FBXColor *) 0 ;
  float result;
  
  arg1 = (FBXImporterUnmanaged::FBXColor *)jarg1; 
  result = (float) ((arg1)->a);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_FBXColor__SWIG_0() {
  void * jresult ;
  FBXImporterUnmanaged::FBXColor *result = 0 ;
  
  result = (FBXImporterUnmanaged::FBXColor *)new FBXImporterUnmanaged::FBXColor();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_FBXColor__SWIG_1(void * jarg1) {
  void * jresult ;
  FBXImporterUnmanaged::FBXColor *arg1 = 0 ;
  FBXImporterUnmanaged::FBXColor *result = 0 ;
  
  arg1 = (FBXImporterUnmanaged::FBXColor *)jarg1;
  if (!arg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "FBXImporterUnmanaged::FBXColor const & type is null", 0);
    return 0;
  } 
  result = (FBXImporterUnmanaged::FBXColor *)new FBXImporterUnmanaged::FBXColor((FBXImporterUnmanaged::FBXColor const &)*arg1);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_FBXColor__SWIG_2(void * jarg1) {
  void * jresult ;
  FbxColor *arg1 = 0 ;
  FBXImporterUnmanaged::FBXColor *result = 0 ;
  
  arg1 = (FbxColor *)jarg1;
  if (!arg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "FbxColor const & type is null", 0);
    return 0;
  } 
  result = (FBXImporterUnmanaged::FBXColor *)new FBXImporterUnmanaged::FBXColor((FbxColor const &)*arg1);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_FBXColor__SWIG_3(float jarg1, float jarg2, float jarg3, float jarg4) {
  void * jresult ;
  float arg1 ;
  float arg2 ;
  float arg3 ;
  float arg4 ;
  FBXImporterUnmanaged::FBXColor *result = 0 ;
  
  arg1 = (float)jarg1; 
  arg2 = (float)jarg2; 
  arg3 = (float)jarg3; 
  arg4 = (float)jarg4; 
  result = (FBXImporterUnmanaged::FBXColor *)new FBXImporterUnmanaged::FBXColor(arg1,arg2,arg3,arg4);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_FBXColor(void * jarg1) {
  FBXImporterUnmanaged::FBXColor *arg1 = (FBXImporterUnmanaged::FBXColor *) 0 ;
  
  arg1 = (FBXImporterUnmanaged::FBXColor *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_FBXVector2_x_set(void * jarg1, float jarg2) {
  FBXImporterUnmanaged::FBXVector2 *arg1 = (FBXImporterUnmanaged::FBXVector2 *) 0 ;
  float arg2 ;
  
  arg1 = (FBXImporterUnmanaged::FBXVector2 *)jarg1; 
  arg2 = (float)jarg2; 
  if (arg1) (arg1)->x = arg2;
}


SWIGEXPORT float SWIGSTDCALL CSharp_FBXVector2_x_get(void * jarg1) {
  float jresult ;
  FBXImporterUnmanaged::FBXVector2 *arg1 = (FBXImporterUnmanaged::FBXVector2 *) 0 ;
  float result;
  
  arg1 = (FBXImporterUnmanaged::FBXVector2 *)jarg1; 
  result = (float) ((arg1)->x);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_FBXVector2_y_set(void * jarg1, float jarg2) {
  FBXImporterUnmanaged::FBXVector2 *arg1 = (FBXImporterUnmanaged::FBXVector2 *) 0 ;
  float arg2 ;
  
  arg1 = (FBXImporterUnmanaged::FBXVector2 *)jarg1; 
  arg2 = (float)jarg2; 
  if (arg1) (arg1)->y = arg2;
}


SWIGEXPORT float SWIGSTDCALL CSharp_FBXVector2_y_get(void * jarg1) {
  float jresult ;
  FBXImporterUnmanaged::FBXVector2 *arg1 = (FBXImporterUnmanaged::FBXVector2 *) 0 ;
  float result;
  
  arg1 = (FBXImporterUnmanaged::FBXVector2 *)jarg1; 
  result = (float) ((arg1)->y);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_FBXVector2_zero_set(void * jarg1) {
  FBXImporterUnmanaged::FBXVector2 *arg1 = (FBXImporterUnmanaged::FBXVector2 *) 0 ;
  
  arg1 = (FBXImporterUnmanaged::FBXVector2 *)jarg1; 
  FBXImporterUnmanaged::FBXVector2::zero = *arg1;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_FBXVector2_zero_get() {
  void * jresult ;
  FBXImporterUnmanaged::FBXVector2 *result = 0 ;
  
  result = (FBXImporterUnmanaged::FBXVector2 *)&FBXImporterUnmanaged::FBXVector2::zero;
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_FBXVector2__SWIG_0() {
  void * jresult ;
  FBXImporterUnmanaged::FBXVector2 *result = 0 ;
  
  result = (FBXImporterUnmanaged::FBXVector2 *)new FBXImporterUnmanaged::FBXVector2();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_FBXVector2__SWIG_1(float jarg1, float jarg2) {
  void * jresult ;
  float arg1 ;
  float arg2 ;
  FBXImporterUnmanaged::FBXVector2 *result = 0 ;
  
  arg1 = (float)jarg1; 
  arg2 = (float)jarg2; 
  result = (FBXImporterUnmanaged::FBXVector2 *)new FBXImporterUnmanaged::FBXVector2(arg1,arg2);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_FBXVector2__SWIG_2(void * jarg1) {
  void * jresult ;
  FBXImporterUnmanaged::FBXVector2 *arg1 = 0 ;
  FBXImporterUnmanaged::FBXVector2 *result = 0 ;
  
  arg1 = (FBXImporterUnmanaged::FBXVector2 *)jarg1;
  if (!arg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "FBXImporterUnmanaged::FBXVector2 const & type is null", 0);
    return 0;
  } 
  result = (FBXImporterUnmanaged::FBXVector2 *)new FBXImporterUnmanaged::FBXVector2((FBXImporterUnmanaged::FBXVector2 const &)*arg1);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_FBXVector2__SWIG_3(void * jarg1) {
  void * jresult ;
  FbxVector2 *arg1 = 0 ;
  FBXImporterUnmanaged::FBXVector2 *result = 0 ;
  
  arg1 = (FbxVector2 *)jarg1;
  if (!arg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "FbxVector2 const & type is null", 0);
    return 0;
  } 
  result = (FBXImporterUnmanaged::FBXVector2 *)new FBXImporterUnmanaged::FBXVector2((FbxVector2 const &)*arg1);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_FBXVector2__SWIG_4(void * jarg1) {
  void * jresult ;
  FbxDouble2 *arg1 = 0 ;
  FBXImporterUnmanaged::FBXVector2 *result = 0 ;
  
  arg1 = (FbxDouble2 *)jarg1;
  if (!arg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "FbxDouble2 const & type is null", 0);
    return 0;
  } 
  result = (FBXImporterUnmanaged::FBXVector2 *)new FBXImporterUnmanaged::FBXVector2((FbxDouble2 const &)*arg1);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_FBXVector2(void * jarg1) {
  FBXImporterUnmanaged::FBXVector2 *arg1 = (FBXImporterUnmanaged::FBXVector2 *) 0 ;
  
  arg1 = (FBXImporterUnmanaged::FBXVector2 *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_FBXVector3_zero_set(void * jarg1) {
  FBXImporterUnmanaged::FBXVector3 *arg1 = (FBXImporterUnmanaged::FBXVector3 *) 0 ;
  
  arg1 = (FBXImporterUnmanaged::FBXVector3 *)jarg1; 
  FBXImporterUnmanaged::FBXVector3::zero = *arg1;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_FBXVector3_zero_get() {
  void * jresult ;
  FBXImporterUnmanaged::FBXVector3 *result = 0 ;
  
  result = (FBXImporterUnmanaged::FBXVector3 *)&FBXImporterUnmanaged::FBXVector3::zero;
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_FBXVector3_x_set(void * jarg1, float jarg2) {
  FBXImporterUnmanaged::FBXVector3 *arg1 = (FBXImporterUnmanaged::FBXVector3 *) 0 ;
  float arg2 ;
  
  arg1 = (FBXImporterUnmanaged::FBXVector3 *)jarg1; 
  arg2 = (float)jarg2; 
  if (arg1) (arg1)->x = arg2;
}


SWIGEXPORT float SWIGSTDCALL CSharp_FBXVector3_x_get(void * jarg1) {
  float jresult ;
  FBXImporterUnmanaged::FBXVector3 *arg1 = (FBXImporterUnmanaged::FBXVector3 *) 0 ;
  float result;
  
  arg1 = (FBXImporterUnmanaged::FBXVector3 *)jarg1; 
  result = (float) ((arg1)->x);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_FBXVector3_y_set(void * jarg1, float jarg2) {
  FBXImporterUnmanaged::FBXVector3 *arg1 = (FBXImporterUnmanaged::FBXVector3 *) 0 ;
  float arg2 ;
  
  arg1 = (FBXImporterUnmanaged::FBXVector3 *)jarg1; 
  arg2 = (float)jarg2; 
  if (arg1) (arg1)->y = arg2;
}


SWIGEXPORT float SWIGSTDCALL CSharp_FBXVector3_y_get(void * jarg1) {
  float jresult ;
  FBXImporterUnmanaged::FBXVector3 *arg1 = (FBXImporterUnmanaged::FBXVector3 *) 0 ;
  float result;
  
  arg1 = (FBXImporterUnmanaged::FBXVector3 *)jarg1; 
  result = (float) ((arg1)->y);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_FBXVector3_z_set(void * jarg1, float jarg2) {
  FBXImporterUnmanaged::FBXVector3 *arg1 = (FBXImporterUnmanaged::FBXVector3 *) 0 ;
  float arg2 ;
  
  arg1 = (FBXImporterUnmanaged::FBXVector3 *)jarg1; 
  arg2 = (float)jarg2; 
  if (arg1) (arg1)->z = arg2;
}


SWIGEXPORT float SWIGSTDCALL CSharp_FBXVector3_z_get(void * jarg1) {
  float jresult ;
  FBXImporterUnmanaged::FBXVector3 *arg1 = (FBXImporterUnmanaged::FBXVector3 *) 0 ;
  float result;
  
  arg1 = (FBXImporterUnmanaged::FBXVector3 *)jarg1; 
  result = (float) ((arg1)->z);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_FBXVector3__SWIG_0() {
  void * jresult ;
  FBXImporterUnmanaged::FBXVector3 *result = 0 ;
  
  result = (FBXImporterUnmanaged::FBXVector3 *)new FBXImporterUnmanaged::FBXVector3();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_FBXVector3__SWIG_1(float jarg1, float jarg2, float jarg3) {
  void * jresult ;
  float arg1 ;
  float arg2 ;
  float arg3 ;
  FBXImporterUnmanaged::FBXVector3 *result = 0 ;
  
  arg1 = (float)jarg1; 
  arg2 = (float)jarg2; 
  arg3 = (float)jarg3; 
  result = (FBXImporterUnmanaged::FBXVector3 *)new FBXImporterUnmanaged::FBXVector3(arg1,arg2,arg3);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_FBXVector3__SWIG_2(void * jarg1) {
  void * jresult ;
  FBXImporterUnmanaged::FBXVector3 *arg1 = 0 ;
  FBXImporterUnmanaged::FBXVector3 *result = 0 ;
  
  arg1 = (FBXImporterUnmanaged::FBXVector3 *)jarg1;
  if (!arg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "FBXImporterUnmanaged::FBXVector3 const & type is null", 0);
    return 0;
  } 
  result = (FBXImporterUnmanaged::FBXVector3 *)new FBXImporterUnmanaged::FBXVector3((FBXImporterUnmanaged::FBXVector3 const &)*arg1);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_FBXVector3__SWIG_3(void * jarg1) {
  void * jresult ;
  FbxVector4 *arg1 = 0 ;
  FBXImporterUnmanaged::FBXVector3 *result = 0 ;
  
  arg1 = (FbxVector4 *)jarg1;
  if (!arg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "FbxVector4 const & type is null", 0);
    return 0;
  } 
  result = (FBXImporterUnmanaged::FBXVector3 *)new FBXImporterUnmanaged::FBXVector3((FbxVector4 const &)*arg1);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_FBXVector3__SWIG_4(void * jarg1) {
  void * jresult ;
  FbxDouble3 *arg1 = 0 ;
  FBXImporterUnmanaged::FBXVector3 *result = 0 ;
  
  arg1 = (FbxDouble3 *)jarg1;
  if (!arg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "FbxDouble3 const & type is null", 0);
    return 0;
  } 
  result = (FBXImporterUnmanaged::FBXVector3 *)new FBXImporterUnmanaged::FBXVector3((FbxDouble3 const &)*arg1);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_FBXVector3(void * jarg1) {
  FBXImporterUnmanaged::FBXVector3 *arg1 = (FBXImporterUnmanaged::FBXVector3 *) 0 ;
  
  arg1 = (FBXImporterUnmanaged::FBXVector3 *)jarg1; 
  delete arg1;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_FBXVector3_Normalize(void * jarg1) {
  void * jresult ;
  FBXImporterUnmanaged::FBXVector3 *arg1 = (FBXImporterUnmanaged::FBXVector3 *) 0 ;
  FBXImporterUnmanaged::FBXVector3 *result = 0 ;
  
  arg1 = (FBXImporterUnmanaged::FBXVector3 *)jarg1; 
  result = (FBXImporterUnmanaged::FBXVector3 *) &(arg1)->Normalize();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_FBXVector4_x_set(void * jarg1, float jarg2) {
  FBXImporterUnmanaged::FBXVector4 *arg1 = (FBXImporterUnmanaged::FBXVector4 *) 0 ;
  float arg2 ;
  
  arg1 = (FBXImporterUnmanaged::FBXVector4 *)jarg1; 
  arg2 = (float)jarg2; 
  if (arg1) (arg1)->x = arg2;
}


SWIGEXPORT float SWIGSTDCALL CSharp_FBXVector4_x_get(void * jarg1) {
  float jresult ;
  FBXImporterUnmanaged::FBXVector4 *arg1 = (FBXImporterUnmanaged::FBXVector4 *) 0 ;
  float result;
  
  arg1 = (FBXImporterUnmanaged::FBXVector4 *)jarg1; 
  result = (float) ((arg1)->x);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_FBXVector4_y_set(void * jarg1, float jarg2) {
  FBXImporterUnmanaged::FBXVector4 *arg1 = (FBXImporterUnmanaged::FBXVector4 *) 0 ;
  float arg2 ;
  
  arg1 = (FBXImporterUnmanaged::FBXVector4 *)jarg1; 
  arg2 = (float)jarg2; 
  if (arg1) (arg1)->y = arg2;
}


SWIGEXPORT float SWIGSTDCALL CSharp_FBXVector4_y_get(void * jarg1) {
  float jresult ;
  FBXImporterUnmanaged::FBXVector4 *arg1 = (FBXImporterUnmanaged::FBXVector4 *) 0 ;
  float result;
  
  arg1 = (FBXImporterUnmanaged::FBXVector4 *)jarg1; 
  result = (float) ((arg1)->y);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_FBXVector4_z_set(void * jarg1, float jarg2) {
  FBXImporterUnmanaged::FBXVector4 *arg1 = (FBXImporterUnmanaged::FBXVector4 *) 0 ;
  float arg2 ;
  
  arg1 = (FBXImporterUnmanaged::FBXVector4 *)jarg1; 
  arg2 = (float)jarg2; 
  if (arg1) (arg1)->z = arg2;
}


SWIGEXPORT float SWIGSTDCALL CSharp_FBXVector4_z_get(void * jarg1) {
  float jresult ;
  FBXImporterUnmanaged::FBXVector4 *arg1 = (FBXImporterUnmanaged::FBXVector4 *) 0 ;
  float result;
  
  arg1 = (FBXImporterUnmanaged::FBXVector4 *)jarg1; 
  result = (float) ((arg1)->z);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_FBXVector4_w_set(void * jarg1, float jarg2) {
  FBXImporterUnmanaged::FBXVector4 *arg1 = (FBXImporterUnmanaged::FBXVector4 *) 0 ;
  float arg2 ;
  
  arg1 = (FBXImporterUnmanaged::FBXVector4 *)jarg1; 
  arg2 = (float)jarg2; 
  if (arg1) (arg1)->w = arg2;
}


SWIGEXPORT float SWIGSTDCALL CSharp_FBXVector4_w_get(void * jarg1) {
  float jresult ;
  FBXImporterUnmanaged::FBXVector4 *arg1 = (FBXImporterUnmanaged::FBXVector4 *) 0 ;
  float result;
  
  arg1 = (FBXImporterUnmanaged::FBXVector4 *)jarg1; 
  result = (float) ((arg1)->w);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_FBXVector4_zero_set(void * jarg1) {
  FBXImporterUnmanaged::FBXVector4 *arg1 = (FBXImporterUnmanaged::FBXVector4 *) 0 ;
  
  arg1 = (FBXImporterUnmanaged::FBXVector4 *)jarg1; 
  FBXImporterUnmanaged::FBXVector4::zero = *arg1;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_FBXVector4_zero_get() {
  void * jresult ;
  FBXImporterUnmanaged::FBXVector4 *result = 0 ;
  
  result = (FBXImporterUnmanaged::FBXVector4 *)&FBXImporterUnmanaged::FBXVector4::zero;
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_FBXVector4__SWIG_0() {
  void * jresult ;
  FBXImporterUnmanaged::FBXVector4 *result = 0 ;
  
  result = (FBXImporterUnmanaged::FBXVector4 *)new FBXImporterUnmanaged::FBXVector4();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_FBXVector4__SWIG_1(float jarg1, float jarg2, float jarg3, float jarg4) {
  void * jresult ;
  float arg1 ;
  float arg2 ;
  float arg3 ;
  float arg4 ;
  FBXImporterUnmanaged::FBXVector4 *result = 0 ;
  
  arg1 = (float)jarg1; 
  arg2 = (float)jarg2; 
  arg3 = (float)jarg3; 
  arg4 = (float)jarg4; 
  result = (FBXImporterUnmanaged::FBXVector4 *)new FBXImporterUnmanaged::FBXVector4(arg1,arg2,arg3,arg4);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_FBXVector4__SWIG_2(void * jarg1) {
  void * jresult ;
  FBXImporterUnmanaged::FBXVector4 *arg1 = 0 ;
  FBXImporterUnmanaged::FBXVector4 *result = 0 ;
  
  arg1 = (FBXImporterUnmanaged::FBXVector4 *)jarg1;
  if (!arg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "FBXImporterUnmanaged::FBXVector4 const & type is null", 0);
    return 0;
  } 
  result = (FBXImporterUnmanaged::FBXVector4 *)new FBXImporterUnmanaged::FBXVector4((FBXImporterUnmanaged::FBXVector4 const &)*arg1);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_FBXVector4__SWIG_3(void * jarg1) {
  void * jresult ;
  FbxVector4 *arg1 = 0 ;
  FBXImporterUnmanaged::FBXVector4 *result = 0 ;
  
  arg1 = (FbxVector4 *)jarg1;
  if (!arg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "FbxVector4 const & type is null", 0);
    return 0;
  } 
  result = (FBXImporterUnmanaged::FBXVector4 *)new FBXImporterUnmanaged::FBXVector4((FbxVector4 const &)*arg1);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_FBXVector4__SWIG_4(void * jarg1) {
  void * jresult ;
  FbxDouble4 *arg1 = 0 ;
  FBXImporterUnmanaged::FBXVector4 *result = 0 ;
  
  arg1 = (FbxDouble4 *)jarg1;
  if (!arg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "FbxDouble4 const & type is null", 0);
    return 0;
  } 
  result = (FBXImporterUnmanaged::FBXVector4 *)new FBXImporterUnmanaged::FBXVector4((FbxDouble4 const &)*arg1);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_FBXVector4(void * jarg1) {
  FBXImporterUnmanaged::FBXVector4 *arg1 = (FBXImporterUnmanaged::FBXVector4 *) 0 ;
  
  arg1 = (FBXImporterUnmanaged::FBXVector4 *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_FBXMatrix4x4_zero_set(void * jarg1) {
  FBXImporterUnmanaged::FBXMatrix4x4 *arg1 = (FBXImporterUnmanaged::FBXMatrix4x4 *) 0 ;
  
  arg1 = (FBXImporterUnmanaged::FBXMatrix4x4 *)jarg1; 
  FBXImporterUnmanaged::FBXMatrix4x4::zero = *arg1;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_FBXMatrix4x4_zero_get() {
  void * jresult ;
  FBXImporterUnmanaged::FBXMatrix4x4 *result = 0 ;
  
  result = (FBXImporterUnmanaged::FBXMatrix4x4 *)&FBXImporterUnmanaged::FBXMatrix4x4::zero;
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_FBXMatrix4x4_identity_set(void * jarg1) {
  FBXImporterUnmanaged::FBXMatrix4x4 *arg1 = (FBXImporterUnmanaged::FBXMatrix4x4 *) 0 ;
  
  arg1 = (FBXImporterUnmanaged::FBXMatrix4x4 *)jarg1; 
  FBXImporterUnmanaged::FBXMatrix4x4::identity = *arg1;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_FBXMatrix4x4_identity_get() {
  void * jresult ;
  FBXImporterUnmanaged::FBXMatrix4x4 *result = 0 ;
  
  result = (FBXImporterUnmanaged::FBXMatrix4x4 *)&FBXImporterUnmanaged::FBXMatrix4x4::identity;
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_FBXMatrix4x4_m00_set(void * jarg1, float jarg2) {
  FBXImporterUnmanaged::FBXMatrix4x4 *arg1 = (FBXImporterUnmanaged::FBXMatrix4x4 *) 0 ;
  float arg2 ;
  
  arg1 = (FBXImporterUnmanaged::FBXMatrix4x4 *)jarg1; 
  arg2 = (float)jarg2; 
  if (arg1) (arg1)->m00 = arg2;
}


SWIGEXPORT float SWIGSTDCALL CSharp_FBXMatrix4x4_m00_get(void * jarg1) {
  float jresult ;
  FBXImporterUnmanaged::FBXMatrix4x4 *arg1 = (FBXImporterUnmanaged::FBXMatrix4x4 *) 0 ;
  float result;
  
  arg1 = (FBXImporterUnmanaged::FBXMatrix4x4 *)jarg1; 
  result = (float) ((arg1)->m00);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_FBXMatrix4x4_m01_set(void * jarg1, float jarg2) {
  FBXImporterUnmanaged::FBXMatrix4x4 *arg1 = (FBXImporterUnmanaged::FBXMatrix4x4 *) 0 ;
  float arg2 ;
  
  arg1 = (FBXImporterUnmanaged::FBXMatrix4x4 *)jarg1; 
  arg2 = (float)jarg2; 
  if (arg1) (arg1)->m01 = arg2;
}


SWIGEXPORT float SWIGSTDCALL CSharp_FBXMatrix4x4_m01_get(void * jarg1) {
  float jresult ;
  FBXImporterUnmanaged::FBXMatrix4x4 *arg1 = (FBXImporterUnmanaged::FBXMatrix4x4 *) 0 ;
  float result;
  
  arg1 = (FBXImporterUnmanaged::FBXMatrix4x4 *)jarg1; 
  result = (float) ((arg1)->m01);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_FBXMatrix4x4_m02_set(void * jarg1, float jarg2) {
  FBXImporterUnmanaged::FBXMatrix4x4 *arg1 = (FBXImporterUnmanaged::FBXMatrix4x4 *) 0 ;
  float arg2 ;
  
  arg1 = (FBXImporterUnmanaged::FBXMatrix4x4 *)jarg1; 
  arg2 = (float)jarg2; 
  if (arg1) (arg1)->m02 = arg2;
}


SWIGEXPORT float SWIGSTDCALL CSharp_FBXMatrix4x4_m02_get(void * jarg1) {
  float jresult ;
  FBXImporterUnmanaged::FBXMatrix4x4 *arg1 = (FBXImporterUnmanaged::FBXMatrix4x4 *) 0 ;
  float result;
  
  arg1 = (FBXImporterUnmanaged::FBXMatrix4x4 *)jarg1; 
  result = (float) ((arg1)->m02);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_FBXMatrix4x4_m03_set(void * jarg1, float jarg2) {
  FBXImporterUnmanaged::FBXMatrix4x4 *arg1 = (FBXImporterUnmanaged::FBXMatrix4x4 *) 0 ;
  float arg2 ;
  
  arg1 = (FBXImporterUnmanaged::FBXMatrix4x4 *)jarg1; 
  arg2 = (float)jarg2; 
  if (arg1) (arg1)->m03 = arg2;
}


SWIGEXPORT float SWIGSTDCALL CSharp_FBXMatrix4x4_m03_get(void * jarg1) {
  float jresult ;
  FBXImporterUnmanaged::FBXMatrix4x4 *arg1 = (FBXImporterUnmanaged::FBXMatrix4x4 *) 0 ;
  float result;
  
  arg1 = (FBXImporterUnmanaged::FBXMatrix4x4 *)jarg1; 
  result = (float) ((arg1)->m03);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_FBXMatrix4x4_m10_set(void * jarg1, float jarg2) {
  FBXImporterUnmanaged::FBXMatrix4x4 *arg1 = (FBXImporterUnmanaged::FBXMatrix4x4 *) 0 ;
  float arg2 ;
  
  arg1 = (FBXImporterUnmanaged::FBXMatrix4x4 *)jarg1; 
  arg2 = (float)jarg2; 
  if (arg1) (arg1)->m10 = arg2;
}


SWIGEXPORT float SWIGSTDCALL CSharp_FBXMatrix4x4_m10_get(void * jarg1) {
  float jresult ;
  FBXImporterUnmanaged::FBXMatrix4x4 *arg1 = (FBXImporterUnmanaged::FBXMatrix4x4 *) 0 ;
  float result;
  
  arg1 = (FBXImporterUnmanaged::FBXMatrix4x4 *)jarg1; 
  result = (float) ((arg1)->m10);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_FBXMatrix4x4_m11_set(void * jarg1, float jarg2) {
  FBXImporterUnmanaged::FBXMatrix4x4 *arg1 = (FBXImporterUnmanaged::FBXMatrix4x4 *) 0 ;
  float arg2 ;
  
  arg1 = (FBXImporterUnmanaged::FBXMatrix4x4 *)jarg1; 
  arg2 = (float)jarg2; 
  if (arg1) (arg1)->m11 = arg2;
}


SWIGEXPORT float SWIGSTDCALL CSharp_FBXMatrix4x4_m11_get(void * jarg1) {
  float jresult ;
  FBXImporterUnmanaged::FBXMatrix4x4 *arg1 = (FBXImporterUnmanaged::FBXMatrix4x4 *) 0 ;
  float result;
  
  arg1 = (FBXImporterUnmanaged::FBXMatrix4x4 *)jarg1; 
  result = (float) ((arg1)->m11);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_FBXMatrix4x4_m12_set(void * jarg1, float jarg2) {
  FBXImporterUnmanaged::FBXMatrix4x4 *arg1 = (FBXImporterUnmanaged::FBXMatrix4x4 *) 0 ;
  float arg2 ;
  
  arg1 = (FBXImporterUnmanaged::FBXMatrix4x4 *)jarg1; 
  arg2 = (float)jarg2; 
  if (arg1) (arg1)->m12 = arg2;
}


SWIGEXPORT float SWIGSTDCALL CSharp_FBXMatrix4x4_m12_get(void * jarg1) {
  float jresult ;
  FBXImporterUnmanaged::FBXMatrix4x4 *arg1 = (FBXImporterUnmanaged::FBXMatrix4x4 *) 0 ;
  float result;
  
  arg1 = (FBXImporterUnmanaged::FBXMatrix4x4 *)jarg1; 
  result = (float) ((arg1)->m12);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_FBXMatrix4x4_m13_set(void * jarg1, float jarg2) {
  FBXImporterUnmanaged::FBXMatrix4x4 *arg1 = (FBXImporterUnmanaged::FBXMatrix4x4 *) 0 ;
  float arg2 ;
  
  arg1 = (FBXImporterUnmanaged::FBXMatrix4x4 *)jarg1; 
  arg2 = (float)jarg2; 
  if (arg1) (arg1)->m13 = arg2;
}


SWIGEXPORT float SWIGSTDCALL CSharp_FBXMatrix4x4_m13_get(void * jarg1) {
  float jresult ;
  FBXImporterUnmanaged::FBXMatrix4x4 *arg1 = (FBXImporterUnmanaged::FBXMatrix4x4 *) 0 ;
  float result;
  
  arg1 = (FBXImporterUnmanaged::FBXMatrix4x4 *)jarg1; 
  result = (float) ((arg1)->m13);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_FBXMatrix4x4_m20_set(void * jarg1, float jarg2) {
  FBXImporterUnmanaged::FBXMatrix4x4 *arg1 = (FBXImporterUnmanaged::FBXMatrix4x4 *) 0 ;
  float arg2 ;
  
  arg1 = (FBXImporterUnmanaged::FBXMatrix4x4 *)jarg1; 
  arg2 = (float)jarg2; 
  if (arg1) (arg1)->m20 = arg2;
}


SWIGEXPORT float SWIGSTDCALL CSharp_FBXMatrix4x4_m20_get(void * jarg1) {
  float jresult ;
  FBXImporterUnmanaged::FBXMatrix4x4 *arg1 = (FBXImporterUnmanaged::FBXMatrix4x4 *) 0 ;
  float result;
  
  arg1 = (FBXImporterUnmanaged::FBXMatrix4x4 *)jarg1; 
  result = (float) ((arg1)->m20);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_FBXMatrix4x4_m21_set(void * jarg1, float jarg2) {
  FBXImporterUnmanaged::FBXMatrix4x4 *arg1 = (FBXImporterUnmanaged::FBXMatrix4x4 *) 0 ;
  float arg2 ;
  
  arg1 = (FBXImporterUnmanaged::FBXMatrix4x4 *)jarg1; 
  arg2 = (float)jarg2; 
  if (arg1) (arg1)->m21 = arg2;
}


SWIGEXPORT float SWIGSTDCALL CSharp_FBXMatrix4x4_m21_get(void * jarg1) {
  float jresult ;
  FBXImporterUnmanaged::FBXMatrix4x4 *arg1 = (FBXImporterUnmanaged::FBXMatrix4x4 *) 0 ;
  float result;
  
  arg1 = (FBXImporterUnmanaged::FBXMatrix4x4 *)jarg1; 
  result = (float) ((arg1)->m21);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_FBXMatrix4x4_m22_set(void * jarg1, float jarg2) {
  FBXImporterUnmanaged::FBXMatrix4x4 *arg1 = (FBXImporterUnmanaged::FBXMatrix4x4 *) 0 ;
  float arg2 ;
  
  arg1 = (FBXImporterUnmanaged::FBXMatrix4x4 *)jarg1; 
  arg2 = (float)jarg2; 
  if (arg1) (arg1)->m22 = arg2;
}


SWIGEXPORT float SWIGSTDCALL CSharp_FBXMatrix4x4_m22_get(void * jarg1) {
  float jresult ;
  FBXImporterUnmanaged::FBXMatrix4x4 *arg1 = (FBXImporterUnmanaged::FBXMatrix4x4 *) 0 ;
  float result;
  
  arg1 = (FBXImporterUnmanaged::FBXMatrix4x4 *)jarg1; 
  result = (float) ((arg1)->m22);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_FBXMatrix4x4_m23_set(void * jarg1, float jarg2) {
  FBXImporterUnmanaged::FBXMatrix4x4 *arg1 = (FBXImporterUnmanaged::FBXMatrix4x4 *) 0 ;
  float arg2 ;
  
  arg1 = (FBXImporterUnmanaged::FBXMatrix4x4 *)jarg1; 
  arg2 = (float)jarg2; 
  if (arg1) (arg1)->m23 = arg2;
}


SWIGEXPORT float SWIGSTDCALL CSharp_FBXMatrix4x4_m23_get(void * jarg1) {
  float jresult ;
  FBXImporterUnmanaged::FBXMatrix4x4 *arg1 = (FBXImporterUnmanaged::FBXMatrix4x4 *) 0 ;
  float result;
  
  arg1 = (FBXImporterUnmanaged::FBXMatrix4x4 *)jarg1; 
  result = (float) ((arg1)->m23);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_FBXMatrix4x4_m30_set(void * jarg1, float jarg2) {
  FBXImporterUnmanaged::FBXMatrix4x4 *arg1 = (FBXImporterUnmanaged::FBXMatrix4x4 *) 0 ;
  float arg2 ;
  
  arg1 = (FBXImporterUnmanaged::FBXMatrix4x4 *)jarg1; 
  arg2 = (float)jarg2; 
  if (arg1) (arg1)->m30 = arg2;
}


SWIGEXPORT float SWIGSTDCALL CSharp_FBXMatrix4x4_m30_get(void * jarg1) {
  float jresult ;
  FBXImporterUnmanaged::FBXMatrix4x4 *arg1 = (FBXImporterUnmanaged::FBXMatrix4x4 *) 0 ;
  float result;
  
  arg1 = (FBXImporterUnmanaged::FBXMatrix4x4 *)jarg1; 
  result = (float) ((arg1)->m30);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_FBXMatrix4x4_m31_set(void * jarg1, float jarg2) {
  FBXImporterUnmanaged::FBXMatrix4x4 *arg1 = (FBXImporterUnmanaged::FBXMatrix4x4 *) 0 ;
  float arg2 ;
  
  arg1 = (FBXImporterUnmanaged::FBXMatrix4x4 *)jarg1; 
  arg2 = (float)jarg2; 
  if (arg1) (arg1)->m31 = arg2;
}


SWIGEXPORT float SWIGSTDCALL CSharp_FBXMatrix4x4_m31_get(void * jarg1) {
  float jresult ;
  FBXImporterUnmanaged::FBXMatrix4x4 *arg1 = (FBXImporterUnmanaged::FBXMatrix4x4 *) 0 ;
  float result;
  
  arg1 = (FBXImporterUnmanaged::FBXMatrix4x4 *)jarg1; 
  result = (float) ((arg1)->m31);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_FBXMatrix4x4_m32_set(void * jarg1, float jarg2) {
  FBXImporterUnmanaged::FBXMatrix4x4 *arg1 = (FBXImporterUnmanaged::FBXMatrix4x4 *) 0 ;
  float arg2 ;
  
  arg1 = (FBXImporterUnmanaged::FBXMatrix4x4 *)jarg1; 
  arg2 = (float)jarg2; 
  if (arg1) (arg1)->m32 = arg2;
}


SWIGEXPORT float SWIGSTDCALL CSharp_FBXMatrix4x4_m32_get(void * jarg1) {
  float jresult ;
  FBXImporterUnmanaged::FBXMatrix4x4 *arg1 = (FBXImporterUnmanaged::FBXMatrix4x4 *) 0 ;
  float result;
  
  arg1 = (FBXImporterUnmanaged::FBXMatrix4x4 *)jarg1; 
  result = (float) ((arg1)->m32);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_FBXMatrix4x4_m33_set(void * jarg1, float jarg2) {
  FBXImporterUnmanaged::FBXMatrix4x4 *arg1 = (FBXImporterUnmanaged::FBXMatrix4x4 *) 0 ;
  float arg2 ;
  
  arg1 = (FBXImporterUnmanaged::FBXMatrix4x4 *)jarg1; 
  arg2 = (float)jarg2; 
  if (arg1) (arg1)->m33 = arg2;
}


SWIGEXPORT float SWIGSTDCALL CSharp_FBXMatrix4x4_m33_get(void * jarg1) {
  float jresult ;
  FBXImporterUnmanaged::FBXMatrix4x4 *arg1 = (FBXImporterUnmanaged::FBXMatrix4x4 *) 0 ;
  float result;
  
  arg1 = (FBXImporterUnmanaged::FBXMatrix4x4 *)jarg1; 
  result = (float) ((arg1)->m33);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_FBXMatrix4x4__SWIG_0() {
  void * jresult ;
  FBXImporterUnmanaged::FBXMatrix4x4 *result = 0 ;
  
  result = (FBXImporterUnmanaged::FBXMatrix4x4 *)new FBXImporterUnmanaged::FBXMatrix4x4();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_FBXMatrix4x4__SWIG_1(float jarg1, float jarg2, float jarg3, float jarg4, float jarg5, float jarg6, float jarg7, float jarg8, float jarg9, float jarg10, float jarg11, float jarg12, float jarg13, float jarg14, float jarg15, float jarg16) {
  void * jresult ;
  float arg1 ;
  float arg2 ;
  float arg3 ;
  float arg4 ;
  float arg5 ;
  float arg6 ;
  float arg7 ;
  float arg8 ;
  float arg9 ;
  float arg10 ;
  float arg11 ;
  float arg12 ;
  float arg13 ;
  float arg14 ;
  float arg15 ;
  float arg16 ;
  FBXImporterUnmanaged::FBXMatrix4x4 *result = 0 ;
  
  arg1 = (float)jarg1; 
  arg2 = (float)jarg2; 
  arg3 = (float)jarg3; 
  arg4 = (float)jarg4; 
  arg5 = (float)jarg5; 
  arg6 = (float)jarg6; 
  arg7 = (float)jarg7; 
  arg8 = (float)jarg8; 
  arg9 = (float)jarg9; 
  arg10 = (float)jarg10; 
  arg11 = (float)jarg11; 
  arg12 = (float)jarg12; 
  arg13 = (float)jarg13; 
  arg14 = (float)jarg14; 
  arg15 = (float)jarg15; 
  arg16 = (float)jarg16; 
  result = (FBXImporterUnmanaged::FBXMatrix4x4 *)new FBXImporterUnmanaged::FBXMatrix4x4(arg1,arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9,arg10,arg11,arg12,arg13,arg14,arg15,arg16);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_FBXMatrix4x4__SWIG_2(void * jarg1) {
  void * jresult ;
  FBXImporterUnmanaged::FBXMatrix4x4 *arg1 = 0 ;
  FBXImporterUnmanaged::FBXMatrix4x4 *result = 0 ;
  
  arg1 = (FBXImporterUnmanaged::FBXMatrix4x4 *)jarg1;
  if (!arg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "FBXImporterUnmanaged::FBXMatrix4x4 const & type is null", 0);
    return 0;
  } 
  result = (FBXImporterUnmanaged::FBXMatrix4x4 *)new FBXImporterUnmanaged::FBXMatrix4x4((FBXImporterUnmanaged::FBXMatrix4x4 const &)*arg1);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_FBXMatrix4x4__SWIG_3(void * jarg1) {
  void * jresult ;
  FbxDouble4x4 *arg1 = 0 ;
  FBXImporterUnmanaged::FBXMatrix4x4 *result = 0 ;
  
  arg1 = (FbxDouble4x4 *)jarg1;
  if (!arg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "FbxDouble4x4 const & type is null", 0);
    return 0;
  } 
  result = (FBXImporterUnmanaged::FBXMatrix4x4 *)new FBXImporterUnmanaged::FBXMatrix4x4((FbxDouble4x4 const &)*arg1);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_FBXMatrix4x4(void * jarg1) {
  FBXImporterUnmanaged::FBXMatrix4x4 *arg1 = (FBXImporterUnmanaged::FBXMatrix4x4 *) 0 ;
  
  arg1 = (FBXImporterUnmanaged::FBXMatrix4x4 *)jarg1; 
  delete arg1;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_RCObject() {
  void * jresult ;
  FBXImporterUnmanaged::RCObject *result = 0 ;
  
  result = (FBXImporterUnmanaged::RCObject *)new FBXImporterUnmanaged::RCObject();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_RCObject(void * jarg1) {
  FBXImporterUnmanaged::RCObject *arg1 = (FBXImporterUnmanaged::RCObject *) 0 ;
  
  arg1 = (FBXImporterUnmanaged::RCObject *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_RCObject_addReference(void * jarg1) {
  FBXImporterUnmanaged::RCObject *arg1 = (FBXImporterUnmanaged::RCObject *) 0 ;
  
  arg1 = (FBXImporterUnmanaged::RCObject *)jarg1; 
  (arg1)->addReference();
}


SWIGEXPORT void SWIGSTDCALL CSharp_RCObject_removeReference(void * jarg1) {
  FBXImporterUnmanaged::RCObject *arg1 = (FBXImporterUnmanaged::RCObject *) 0 ;
  
  arg1 = (FBXImporterUnmanaged::RCObject *)jarg1; 
  (arg1)->removeReference();
}


SWIGEXPORT int SWIGSTDCALL CSharp_RCObject_getReferenceCount(void * jarg1) {
  int jresult ;
  FBXImporterUnmanaged::RCObject *arg1 = (FBXImporterUnmanaged::RCObject *) 0 ;
  int result;
  
  arg1 = (FBXImporterUnmanaged::RCObject *)jarg1; 
  result = (int)(arg1)->getReferenceCount();
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_FBXMaterial_Create() {
  void * jresult ;
  FBXImporterUnmanaged::FBXMaterialPtr result;
  
  result = FBXImporterUnmanaged::FBXMaterial::Create();
  jresult = new FBXImporterUnmanaged::FBXMaterialPtr((const FBXImporterUnmanaged::FBXMaterialPtr &)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_FBXMaterial() {
  void * jresult ;
  FBXImporterUnmanaged::FBXMaterial *result = 0 ;
  
  result = (FBXImporterUnmanaged::FBXMaterial *)new FBXImporterUnmanaged::FBXMaterial();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_FBXMaterial(void * jarg1) {
  FBXImporterUnmanaged::FBXMaterial *arg1 = (FBXImporterUnmanaged::FBXMaterial *) 0 ;
  
  arg1 = (FBXImporterUnmanaged::FBXMaterial *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_FBXMaterial_SetName(void * jarg1, char * jarg2) {
  FBXImporterUnmanaged::FBXMaterial *arg1 = (FBXImporterUnmanaged::FBXMaterial *) 0 ;
  char *arg2 = (char *) 0 ;
  
  arg1 = (FBXImporterUnmanaged::FBXMaterial *)jarg1; 
  arg2 = (char *)jarg2; 
  (arg1)->SetName((char const *)arg2);
}


SWIGEXPORT void SWIGSTDCALL CSharp_FBXMaterial_SetBool(void * jarg1, char * jarg2, unsigned int jarg3) {
  FBXImporterUnmanaged::FBXMaterial *arg1 = (FBXImporterUnmanaged::FBXMaterial *) 0 ;
  char *arg2 = (char *) 0 ;
  bool *arg3 = 0 ;
  bool temp3 ;
  
  arg1 = (FBXImporterUnmanaged::FBXMaterial *)jarg1; 
  arg2 = (char *)jarg2; 
  temp3 = jarg3 ? true : false; 
  arg3 = &temp3; 
  (arg1)->SetBool((char const *)arg2,(bool const &)*arg3);
}


SWIGEXPORT void SWIGSTDCALL CSharp_FBXMaterial_SetInt(void * jarg1, char * jarg2, int jarg3) {
  FBXImporterUnmanaged::FBXMaterial *arg1 = (FBXImporterUnmanaged::FBXMaterial *) 0 ;
  char *arg2 = (char *) 0 ;
  int *arg3 = 0 ;
  int temp3 ;
  
  arg1 = (FBXImporterUnmanaged::FBXMaterial *)jarg1; 
  arg2 = (char *)jarg2; 
  temp3 = (int)jarg3; 
  arg3 = &temp3; 
  (arg1)->SetInt((char const *)arg2,(int const &)*arg3);
}


SWIGEXPORT void SWIGSTDCALL CSharp_FBXMaterial_SetFloat(void * jarg1, char * jarg2, float jarg3) {
  FBXImporterUnmanaged::FBXMaterial *arg1 = (FBXImporterUnmanaged::FBXMaterial *) 0 ;
  char *arg2 = (char *) 0 ;
  float *arg3 = 0 ;
  float temp3 ;
  
  arg1 = (FBXImporterUnmanaged::FBXMaterial *)jarg1; 
  arg2 = (char *)jarg2; 
  temp3 = (float)jarg3; 
  arg3 = &temp3; 
  (arg1)->SetFloat((char const *)arg2,(float const &)*arg3);
}


SWIGEXPORT void SWIGSTDCALL CSharp_FBXMaterial_SetDouble(void * jarg1, char * jarg2, double jarg3) {
  FBXImporterUnmanaged::FBXMaterial *arg1 = (FBXImporterUnmanaged::FBXMaterial *) 0 ;
  char *arg2 = (char *) 0 ;
  double *arg3 = 0 ;
  double temp3 ;
  
  arg1 = (FBXImporterUnmanaged::FBXMaterial *)jarg1; 
  arg2 = (char *)jarg2; 
  temp3 = (double)jarg3; 
  arg3 = &temp3; 
  (arg1)->SetDouble((char const *)arg2,(double const &)*arg3);
}


SWIGEXPORT void SWIGSTDCALL CSharp_FBXMaterial_SetVector2(void * jarg1, char * jarg2, void * jarg3) {
  FBXImporterUnmanaged::FBXMaterial *arg1 = (FBXImporterUnmanaged::FBXMaterial *) 0 ;
  char *arg2 = (char *) 0 ;
  FBXImporterUnmanaged::FBXVector2 *arg3 = 0 ;
  
  arg1 = (FBXImporterUnmanaged::FBXMaterial *)jarg1; 
  arg2 = (char *)jarg2; 
  arg3 = (FBXImporterUnmanaged::FBXVector2 *)jarg3;
  if (!arg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "FBXImporterUnmanaged::FBXVector2 const & type is null", 0);
    return ;
  } 
  (arg1)->SetVector2((char const *)arg2,(FBXImporterUnmanaged::FBXVector2 const &)*arg3);
}


SWIGEXPORT void SWIGSTDCALL CSharp_FBXMaterial_SetVector3(void * jarg1, char * jarg2, void * jarg3) {
  FBXImporterUnmanaged::FBXMaterial *arg1 = (FBXImporterUnmanaged::FBXMaterial *) 0 ;
  char *arg2 = (char *) 0 ;
  FBXImporterUnmanaged::FBXVector3 *arg3 = 0 ;
  
  arg1 = (FBXImporterUnmanaged::FBXMaterial *)jarg1; 
  arg2 = (char *)jarg2; 
  arg3 = (FBXImporterUnmanaged::FBXVector3 *)jarg3;
  if (!arg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "FBXImporterUnmanaged::FBXVector3 const & type is null", 0);
    return ;
  } 
  (arg1)->SetVector3((char const *)arg2,(FBXImporterUnmanaged::FBXVector3 const &)*arg3);
}


SWIGEXPORT void SWIGSTDCALL CSharp_FBXMaterial_SetVector4(void * jarg1, char * jarg2, void * jarg3) {
  FBXImporterUnmanaged::FBXMaterial *arg1 = (FBXImporterUnmanaged::FBXMaterial *) 0 ;
  char *arg2 = (char *) 0 ;
  FBXImporterUnmanaged::FBXVector4 *arg3 = 0 ;
  
  arg1 = (FBXImporterUnmanaged::FBXMaterial *)jarg1; 
  arg2 = (char *)jarg2; 
  arg3 = (FBXImporterUnmanaged::FBXVector4 *)jarg3;
  if (!arg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "FBXImporterUnmanaged::FBXVector4 const & type is null", 0);
    return ;
  } 
  (arg1)->SetVector4((char const *)arg2,(FBXImporterUnmanaged::FBXVector4 const &)*arg3);
}


SWIGEXPORT void SWIGSTDCALL CSharp_FBXMaterial_SetString(void * jarg1, char * jarg2, char * jarg3) {
  FBXImporterUnmanaged::FBXMaterial *arg1 = (FBXImporterUnmanaged::FBXMaterial *) 0 ;
  char *arg2 = (char *) 0 ;
  char *arg3 = (char *) 0 ;
  
  arg1 = (FBXImporterUnmanaged::FBXMaterial *)jarg1; 
  arg2 = (char *)jarg2; 
  arg3 = (char *)jarg3; 
  (arg1)->SetString((char const *)arg2,(char const *)arg3);
}


SWIGEXPORT void SWIGSTDCALL CSharp_FBXMaterial_SetColor(void * jarg1, char * jarg2, void * jarg3) {
  FBXImporterUnmanaged::FBXMaterial *arg1 = (FBXImporterUnmanaged::FBXMaterial *) 0 ;
  char *arg2 = (char *) 0 ;
  FBXImporterUnmanaged::FBXColor *arg3 = 0 ;
  
  arg1 = (FBXImporterUnmanaged::FBXMaterial *)jarg1; 
  arg2 = (char *)jarg2; 
  arg3 = (FBXImporterUnmanaged::FBXColor *)jarg3;
  if (!arg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "FBXImporterUnmanaged::FBXColor const & type is null", 0);
    return ;
  } 
  (arg1)->SetColor((char const *)arg2,(FBXImporterUnmanaged::FBXColor const &)*arg3);
}


SWIGEXPORT void SWIGSTDCALL CSharp_FBXMaterial_SetMatrix4x4(void * jarg1, char * jarg2, void * jarg3) {
  FBXImporterUnmanaged::FBXMaterial *arg1 = (FBXImporterUnmanaged::FBXMaterial *) 0 ;
  char *arg2 = (char *) 0 ;
  FBXImporterUnmanaged::FBXMatrix4x4 *arg3 = 0 ;
  
  arg1 = (FBXImporterUnmanaged::FBXMaterial *)jarg1; 
  arg2 = (char *)jarg2; 
  arg3 = (FBXImporterUnmanaged::FBXMatrix4x4 *)jarg3;
  if (!arg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "FBXImporterUnmanaged::FBXMatrix4x4 const & type is null", 0);
    return ;
  } 
  (arg1)->SetMatrix4x4((char const *)arg2,(FBXImporterUnmanaged::FBXMatrix4x4 const &)*arg3);
}


SWIGEXPORT char * SWIGSTDCALL CSharp_FBXMaterial_GetName(void * jarg1) {
  char * jresult ;
  FBXImporterUnmanaged::FBXMaterial *arg1 = (FBXImporterUnmanaged::FBXMaterial *) 0 ;
  char *result = 0 ;
  
  arg1 = (FBXImporterUnmanaged::FBXMaterial *)jarg1; 
  result = (char *)((FBXImporterUnmanaged::FBXMaterial const *)arg1)->GetName();
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_FBXMaterial_GetBool__SWIG_0(void * jarg1, char * jarg2, unsigned int jarg3) {
  unsigned int jresult ;
  FBXImporterUnmanaged::FBXMaterial *arg1 = (FBXImporterUnmanaged::FBXMaterial *) 0 ;
  char *arg2 = (char *) 0 ;
  bool *arg3 = 0 ;
  bool temp3 ;
  bool result;
  
  arg1 = (FBXImporterUnmanaged::FBXMaterial *)jarg1; 
  arg2 = (char *)jarg2; 
  temp3 = jarg3 ? true : false; 
  arg3 = &temp3; 
  result = (bool)(arg1)->GetBool((char const *)arg2,(bool const &)*arg3);
  jresult = result; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_FBXMaterial_GetBool__SWIG_1(void * jarg1, char * jarg2) {
  unsigned int jresult ;
  FBXImporterUnmanaged::FBXMaterial *arg1 = (FBXImporterUnmanaged::FBXMaterial *) 0 ;
  char *arg2 = (char *) 0 ;
  bool result;
  
  arg1 = (FBXImporterUnmanaged::FBXMaterial *)jarg1; 
  arg2 = (char *)jarg2; 
  result = (bool)(arg1)->GetBool((char const *)arg2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_FBXMaterial_GetInt__SWIG_0(void * jarg1, char * jarg2, int jarg3) {
  int jresult ;
  FBXImporterUnmanaged::FBXMaterial *arg1 = (FBXImporterUnmanaged::FBXMaterial *) 0 ;
  char *arg2 = (char *) 0 ;
  int *arg3 = 0 ;
  int temp3 ;
  int result;
  
  arg1 = (FBXImporterUnmanaged::FBXMaterial *)jarg1; 
  arg2 = (char *)jarg2; 
  temp3 = (int)jarg3; 
  arg3 = &temp3; 
  result = (int)(arg1)->GetInt((char const *)arg2,(int const &)*arg3);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_FBXMaterial_GetInt__SWIG_1(void * jarg1, char * jarg2) {
  int jresult ;
  FBXImporterUnmanaged::FBXMaterial *arg1 = (FBXImporterUnmanaged::FBXMaterial *) 0 ;
  char *arg2 = (char *) 0 ;
  int result;
  
  arg1 = (FBXImporterUnmanaged::FBXMaterial *)jarg1; 
  arg2 = (char *)jarg2; 
  result = (int)(arg1)->GetInt((char const *)arg2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT float SWIGSTDCALL CSharp_FBXMaterial_GetFloat__SWIG_0(void * jarg1, char * jarg2, float jarg3) {
  float jresult ;
  FBXImporterUnmanaged::FBXMaterial *arg1 = (FBXImporterUnmanaged::FBXMaterial *) 0 ;
  char *arg2 = (char *) 0 ;
  float *arg3 = 0 ;
  float temp3 ;
  float result;
  
  arg1 = (FBXImporterUnmanaged::FBXMaterial *)jarg1; 
  arg2 = (char *)jarg2; 
  temp3 = (float)jarg3; 
  arg3 = &temp3; 
  result = (float)(arg1)->GetFloat((char const *)arg2,(float const &)*arg3);
  jresult = result; 
  return jresult;
}


SWIGEXPORT float SWIGSTDCALL CSharp_FBXMaterial_GetFloat__SWIG_1(void * jarg1, char * jarg2) {
  float jresult ;
  FBXImporterUnmanaged::FBXMaterial *arg1 = (FBXImporterUnmanaged::FBXMaterial *) 0 ;
  char *arg2 = (char *) 0 ;
  float result;
  
  arg1 = (FBXImporterUnmanaged::FBXMaterial *)jarg1; 
  arg2 = (char *)jarg2; 
  result = (float)(arg1)->GetFloat((char const *)arg2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT double SWIGSTDCALL CSharp_FBXMaterial_GetDouble__SWIG_0(void * jarg1, char * jarg2, double jarg3) {
  double jresult ;
  FBXImporterUnmanaged::FBXMaterial *arg1 = (FBXImporterUnmanaged::FBXMaterial *) 0 ;
  char *arg2 = (char *) 0 ;
  double *arg3 = 0 ;
  double temp3 ;
  double result;
  
  arg1 = (FBXImporterUnmanaged::FBXMaterial *)jarg1; 
  arg2 = (char *)jarg2; 
  temp3 = (double)jarg3; 
  arg3 = &temp3; 
  result = (double)(arg1)->GetDouble((char const *)arg2,(double const &)*arg3);
  jresult = result; 
  return jresult;
}


SWIGEXPORT double SWIGSTDCALL CSharp_FBXMaterial_GetDouble__SWIG_1(void * jarg1, char * jarg2) {
  double jresult ;
  FBXImporterUnmanaged::FBXMaterial *arg1 = (FBXImporterUnmanaged::FBXMaterial *) 0 ;
  char *arg2 = (char *) 0 ;
  double result;
  
  arg1 = (FBXImporterUnmanaged::FBXMaterial *)jarg1; 
  arg2 = (char *)jarg2; 
  result = (double)(arg1)->GetDouble((char const *)arg2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_FBXMaterial_GetVector2__SWIG_0(void * jarg1, char * jarg2, void * jarg3) {
  void * jresult ;
  FBXImporterUnmanaged::FBXMaterial *arg1 = (FBXImporterUnmanaged::FBXMaterial *) 0 ;
  char *arg2 = (char *) 0 ;
  FBXImporterUnmanaged::FBXVector2 *arg3 = 0 ;
  FBXImporterUnmanaged::FBXVector2 result;
  
  arg1 = (FBXImporterUnmanaged::FBXMaterial *)jarg1; 
  arg2 = (char *)jarg2; 
  arg3 = (FBXImporterUnmanaged::FBXVector2 *)jarg3;
  if (!arg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "FBXImporterUnmanaged::FBXVector2 const & type is null", 0);
    return 0;
  } 
  result = (arg1)->GetVector2((char const *)arg2,(FBXImporterUnmanaged::FBXVector2 const &)*arg3);
  jresult = new FBXImporterUnmanaged::FBXVector2((const FBXImporterUnmanaged::FBXVector2 &)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_FBXMaterial_GetVector2__SWIG_1(void * jarg1, char * jarg2) {
  void * jresult ;
  FBXImporterUnmanaged::FBXMaterial *arg1 = (FBXImporterUnmanaged::FBXMaterial *) 0 ;
  char *arg2 = (char *) 0 ;
  FBXImporterUnmanaged::FBXVector2 result;
  
  arg1 = (FBXImporterUnmanaged::FBXMaterial *)jarg1; 
  arg2 = (char *)jarg2; 
  result = (arg1)->GetVector2((char const *)arg2);
  jresult = new FBXImporterUnmanaged::FBXVector2((const FBXImporterUnmanaged::FBXVector2 &)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_FBXMaterial_GetVector3__SWIG_0(void * jarg1, char * jarg2, void * jarg3) {
  void * jresult ;
  FBXImporterUnmanaged::FBXMaterial *arg1 = (FBXImporterUnmanaged::FBXMaterial *) 0 ;
  char *arg2 = (char *) 0 ;
  FBXImporterUnmanaged::FBXVector3 *arg3 = 0 ;
  FBXImporterUnmanaged::FBXVector3 result;
  
  arg1 = (FBXImporterUnmanaged::FBXMaterial *)jarg1; 
  arg2 = (char *)jarg2; 
  arg3 = (FBXImporterUnmanaged::FBXVector3 *)jarg3;
  if (!arg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "FBXImporterUnmanaged::FBXVector3 const & type is null", 0);
    return 0;
  } 
  result = (arg1)->GetVector3((char const *)arg2,(FBXImporterUnmanaged::FBXVector3 const &)*arg3);
  jresult = new FBXImporterUnmanaged::FBXVector3((const FBXImporterUnmanaged::FBXVector3 &)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_FBXMaterial_GetVector3__SWIG_1(void * jarg1, char * jarg2) {
  void * jresult ;
  FBXImporterUnmanaged::FBXMaterial *arg1 = (FBXImporterUnmanaged::FBXMaterial *) 0 ;
  char *arg2 = (char *) 0 ;
  FBXImporterUnmanaged::FBXVector3 result;
  
  arg1 = (FBXImporterUnmanaged::FBXMaterial *)jarg1; 
  arg2 = (char *)jarg2; 
  result = (arg1)->GetVector3((char const *)arg2);
  jresult = new FBXImporterUnmanaged::FBXVector3((const FBXImporterUnmanaged::FBXVector3 &)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_FBXMaterial_GetVector4__SWIG_0(void * jarg1, char * jarg2, void * jarg3) {
  void * jresult ;
  FBXImporterUnmanaged::FBXMaterial *arg1 = (FBXImporterUnmanaged::FBXMaterial *) 0 ;
  char *arg2 = (char *) 0 ;
  FBXImporterUnmanaged::FBXVector4 *arg3 = 0 ;
  FBXImporterUnmanaged::FBXVector4 result;
  
  arg1 = (FBXImporterUnmanaged::FBXMaterial *)jarg1; 
  arg2 = (char *)jarg2; 
  arg3 = (FBXImporterUnmanaged::FBXVector4 *)jarg3;
  if (!arg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "FBXImporterUnmanaged::FBXVector4 const & type is null", 0);
    return 0;
  } 
  result = (arg1)->GetVector4((char const *)arg2,(FBXImporterUnmanaged::FBXVector4 const &)*arg3);
  jresult = new FBXImporterUnmanaged::FBXVector4((const FBXImporterUnmanaged::FBXVector4 &)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_FBXMaterial_GetVector4__SWIG_1(void * jarg1, char * jarg2) {
  void * jresult ;
  FBXImporterUnmanaged::FBXMaterial *arg1 = (FBXImporterUnmanaged::FBXMaterial *) 0 ;
  char *arg2 = (char *) 0 ;
  FBXImporterUnmanaged::FBXVector4 result;
  
  arg1 = (FBXImporterUnmanaged::FBXMaterial *)jarg1; 
  arg2 = (char *)jarg2; 
  result = (arg1)->GetVector4((char const *)arg2);
  jresult = new FBXImporterUnmanaged::FBXVector4((const FBXImporterUnmanaged::FBXVector4 &)result); 
  return jresult;
}


SWIGEXPORT char * SWIGSTDCALL CSharp_FBXMaterial_GetString__SWIG_0(void * jarg1, char * jarg2, char * jarg3) {
  char * jresult ;
  FBXImporterUnmanaged::FBXMaterial *arg1 = (FBXImporterUnmanaged::FBXMaterial *) 0 ;
  char *arg2 = (char *) 0 ;
  char *arg3 = (char *) 0 ;
  char *result = 0 ;
  
  arg1 = (FBXImporterUnmanaged::FBXMaterial *)jarg1; 
  arg2 = (char *)jarg2; 
  arg3 = (char *)jarg3; 
  result = (char *)(arg1)->GetString((char const *)arg2,(char const *)arg3);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT char * SWIGSTDCALL CSharp_FBXMaterial_GetString__SWIG_1(void * jarg1, char * jarg2) {
  char * jresult ;
  FBXImporterUnmanaged::FBXMaterial *arg1 = (FBXImporterUnmanaged::FBXMaterial *) 0 ;
  char *arg2 = (char *) 0 ;
  char *result = 0 ;
  
  arg1 = (FBXImporterUnmanaged::FBXMaterial *)jarg1; 
  arg2 = (char *)jarg2; 
  result = (char *)(arg1)->GetString((char const *)arg2);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_FBXMaterial_GetColor__SWIG_0(void * jarg1, char * jarg2, void * jarg3) {
  void * jresult ;
  FBXImporterUnmanaged::FBXMaterial *arg1 = (FBXImporterUnmanaged::FBXMaterial *) 0 ;
  char *arg2 = (char *) 0 ;
  FBXImporterUnmanaged::FBXColor *arg3 = 0 ;
  FBXImporterUnmanaged::FBXColor result;
  
  arg1 = (FBXImporterUnmanaged::FBXMaterial *)jarg1; 
  arg2 = (char *)jarg2; 
  arg3 = (FBXImporterUnmanaged::FBXColor *)jarg3;
  if (!arg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "FBXImporterUnmanaged::FBXColor const & type is null", 0);
    return 0;
  } 
  result = (arg1)->GetColor((char const *)arg2,(FBXImporterUnmanaged::FBXColor const &)*arg3);
  jresult = new FBXImporterUnmanaged::FBXColor((const FBXImporterUnmanaged::FBXColor &)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_FBXMaterial_GetColor__SWIG_1(void * jarg1, char * jarg2) {
  void * jresult ;
  FBXImporterUnmanaged::FBXMaterial *arg1 = (FBXImporterUnmanaged::FBXMaterial *) 0 ;
  char *arg2 = (char *) 0 ;
  FBXImporterUnmanaged::FBXColor result;
  
  arg1 = (FBXImporterUnmanaged::FBXMaterial *)jarg1; 
  arg2 = (char *)jarg2; 
  result = (arg1)->GetColor((char const *)arg2);
  jresult = new FBXImporterUnmanaged::FBXColor((const FBXImporterUnmanaged::FBXColor &)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_FBXMaterial_GetMatrix4x4__SWIG_0(void * jarg1, char * jarg2, void * jarg3) {
  void * jresult ;
  FBXImporterUnmanaged::FBXMaterial *arg1 = (FBXImporterUnmanaged::FBXMaterial *) 0 ;
  char *arg2 = (char *) 0 ;
  FBXImporterUnmanaged::FBXMatrix4x4 *arg3 = 0 ;
  FBXImporterUnmanaged::FBXMatrix4x4 result;
  
  arg1 = (FBXImporterUnmanaged::FBXMaterial *)jarg1; 
  arg2 = (char *)jarg2; 
  arg3 = (FBXImporterUnmanaged::FBXMatrix4x4 *)jarg3;
  if (!arg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "FBXImporterUnmanaged::FBXMatrix4x4 const & type is null", 0);
    return 0;
  } 
  result = (arg1)->GetMatrix4x4((char const *)arg2,(FBXImporterUnmanaged::FBXMatrix4x4 const &)*arg3);
  jresult = new FBXImporterUnmanaged::FBXMatrix4x4((const FBXImporterUnmanaged::FBXMatrix4x4 &)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_FBXMaterial_GetMatrix4x4__SWIG_1(void * jarg1, char * jarg2) {
  void * jresult ;
  FBXImporterUnmanaged::FBXMaterial *arg1 = (FBXImporterUnmanaged::FBXMaterial *) 0 ;
  char *arg2 = (char *) 0 ;
  FBXImporterUnmanaged::FBXMatrix4x4 result;
  
  arg1 = (FBXImporterUnmanaged::FBXMaterial *)jarg1; 
  arg2 = (char *)jarg2; 
  result = (arg1)->GetMatrix4x4((char const *)arg2);
  jresult = new FBXImporterUnmanaged::FBXMatrix4x4((const FBXImporterUnmanaged::FBXMatrix4x4 &)result); 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_FBXMaterial_Exist(void * jarg1, char * jarg2) {
  unsigned int jresult ;
  FBXImporterUnmanaged::FBXMaterial *arg1 = (FBXImporterUnmanaged::FBXMaterial *) 0 ;
  char *arg2 = (char *) 0 ;
  bool result;
  
  arg1 = (FBXImporterUnmanaged::FBXMaterial *)jarg1; 
  arg2 = (char *)jarg2; 
  result = (bool)((FBXImporterUnmanaged::FBXMaterial const *)arg1)->Exist((char const *)arg2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_FBXMaterialPtr__SWIG_0() {
  void * jresult ;
  FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXMaterial > *result = 0 ;
  
  result = (FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXMaterial > *)new FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXMaterial >();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_FBXMaterialPtr__SWIG_1(void * jarg1) {
  void * jresult ;
  FBXImporterUnmanaged::FBXMaterial *arg1 = (FBXImporterUnmanaged::FBXMaterial *) 0 ;
  FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXMaterial > *result = 0 ;
  
  arg1 = (FBXImporterUnmanaged::FBXMaterial *)jarg1; 
  result = (FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXMaterial > *)new FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXMaterial >(arg1);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_FBXMaterialPtr__SWIG_2(void * jarg1) {
  void * jresult ;
  FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXMaterial > *arg1 = 0 ;
  FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXMaterial > *result = 0 ;
  
  arg1 = (FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXMaterial > *)jarg1;
  if (!arg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXMaterial > const & type is null", 0);
    return 0;
  } 
  result = (FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXMaterial > *)new FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXMaterial >((FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXMaterial > const &)*arg1);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_FBXMaterialPtr(void * jarg1) {
  FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXMaterial > *arg1 = (FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXMaterial > *) 0 ;
  
  arg1 = (FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXMaterial > *)jarg1; 
  delete arg1;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_FBXMaterialPtr_get(void * jarg1) {
  void * jresult ;
  FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXMaterial > *arg1 = (FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXMaterial > *) 0 ;
  FBXImporterUnmanaged::FBXMaterial *result = 0 ;
  
  arg1 = (FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXMaterial > *)jarg1; 
  result = (FBXImporterUnmanaged::FBXMaterial *)((FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXMaterial > const *)arg1)->get();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_FBXMaterialPtr___deref__(void * jarg1) {
  void * jresult ;
  FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXMaterial > *arg1 = (FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXMaterial > *) 0 ;
  FBXImporterUnmanaged::FBXMaterial *result = 0 ;
  
  arg1 = (FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXMaterial > *)jarg1; 
  result = (FBXImporterUnmanaged::FBXMaterial *)((FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXMaterial > const *)arg1)->operator ->();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_FBXMaterialPtr___ref__(void * jarg1) {
  void * jresult ;
  FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXMaterial > *arg1 = (FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXMaterial > *) 0 ;
  FBXImporterUnmanaged::FBXMaterial *result = 0 ;
  
  arg1 = (FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXMaterial > *)jarg1; 
  result = (FBXImporterUnmanaged::FBXMaterial *) &((FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXMaterial > const *)arg1)->operator *();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_FBXMaterialPtr_IsNull(void * jarg1) {
  unsigned int jresult ;
  FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXMaterial > *arg1 = (FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXMaterial > *) 0 ;
  bool result;
  
  arg1 = (FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXMaterial > *)jarg1; 
  result = (bool)((FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXMaterial > const *)arg1)->IsNull();
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_FBXMaterialPtr_Null_set(void * jarg1) {
  FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXMaterial > *arg1 = (FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXMaterial > *) 0 ;
  
  arg1 = (FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXMaterial > *)jarg1; 
  FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXMaterial >::Null = *arg1;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_FBXMaterialPtr_Null_get() {
  void * jresult ;
  FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXMaterial > *result = 0 ;
  
  result = (FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXMaterial > *)&FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXMaterial >::Null;
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_FBXMaterialPtr_Create(void * jarg1) {
  void * jresult ;
  FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXMaterial > *arg1 = (FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXMaterial > *) 0 ;
  FBXImporterUnmanaged::FBXMaterialPtr result;
  
  arg1 = (FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXMaterial > *)jarg1; 
  result = (*arg1)->Create();
  jresult = new FBXImporterUnmanaged::FBXMaterialPtr((const FBXImporterUnmanaged::FBXMaterialPtr &)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_FBXMaterialPtr_SetName(void * jarg1, char * jarg2) {
  FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXMaterial > *arg1 = (FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXMaterial > *) 0 ;
  char *arg2 = (char *) 0 ;
  
  arg1 = (FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXMaterial > *)jarg1; 
  arg2 = (char *)jarg2; 
  (*arg1)->SetName((char const *)arg2);
}


SWIGEXPORT void SWIGSTDCALL CSharp_FBXMaterialPtr_SetBool(void * jarg1, char * jarg2, unsigned int jarg3) {
  FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXMaterial > *arg1 = (FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXMaterial > *) 0 ;
  char *arg2 = (char *) 0 ;
  bool *arg3 = 0 ;
  bool temp3 ;
  
  arg1 = (FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXMaterial > *)jarg1; 
  arg2 = (char *)jarg2; 
  temp3 = jarg3 ? true : false; 
  arg3 = &temp3; 
  (*arg1)->SetBool((char const *)arg2,(bool const &)*arg3);
}


SWIGEXPORT void SWIGSTDCALL CSharp_FBXMaterialPtr_SetInt(void * jarg1, char * jarg2, int jarg3) {
  FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXMaterial > *arg1 = (FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXMaterial > *) 0 ;
  char *arg2 = (char *) 0 ;
  int *arg3 = 0 ;
  int temp3 ;
  
  arg1 = (FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXMaterial > *)jarg1; 
  arg2 = (char *)jarg2; 
  temp3 = (int)jarg3; 
  arg3 = &temp3; 
  (*arg1)->SetInt((char const *)arg2,(int const &)*arg3);
}


SWIGEXPORT void SWIGSTDCALL CSharp_FBXMaterialPtr_SetFloat(void * jarg1, char * jarg2, float jarg3) {
  FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXMaterial > *arg1 = (FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXMaterial > *) 0 ;
  char *arg2 = (char *) 0 ;
  float *arg3 = 0 ;
  float temp3 ;
  
  arg1 = (FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXMaterial > *)jarg1; 
  arg2 = (char *)jarg2; 
  temp3 = (float)jarg3; 
  arg3 = &temp3; 
  (*arg1)->SetFloat((char const *)arg2,(float const &)*arg3);
}


SWIGEXPORT void SWIGSTDCALL CSharp_FBXMaterialPtr_SetDouble(void * jarg1, char * jarg2, double jarg3) {
  FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXMaterial > *arg1 = (FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXMaterial > *) 0 ;
  char *arg2 = (char *) 0 ;
  double *arg3 = 0 ;
  double temp3 ;
  
  arg1 = (FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXMaterial > *)jarg1; 
  arg2 = (char *)jarg2; 
  temp3 = (double)jarg3; 
  arg3 = &temp3; 
  (*arg1)->SetDouble((char const *)arg2,(double const &)*arg3);
}


SWIGEXPORT void SWIGSTDCALL CSharp_FBXMaterialPtr_SetVector2(void * jarg1, char * jarg2, void * jarg3) {
  FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXMaterial > *arg1 = (FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXMaterial > *) 0 ;
  char *arg2 = (char *) 0 ;
  FBXImporterUnmanaged::FBXVector2 *arg3 = 0 ;
  
  arg1 = (FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXMaterial > *)jarg1; 
  arg2 = (char *)jarg2; 
  arg3 = (FBXImporterUnmanaged::FBXVector2 *)jarg3;
  if (!arg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "FBXImporterUnmanaged::FBXVector2 const & type is null", 0);
    return ;
  } 
  (*arg1)->SetVector2((char const *)arg2,(FBXImporterUnmanaged::FBXVector2 const &)*arg3);
}


SWIGEXPORT void SWIGSTDCALL CSharp_FBXMaterialPtr_SetVector3(void * jarg1, char * jarg2, void * jarg3) {
  FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXMaterial > *arg1 = (FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXMaterial > *) 0 ;
  char *arg2 = (char *) 0 ;
  FBXImporterUnmanaged::FBXVector3 *arg3 = 0 ;
  
  arg1 = (FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXMaterial > *)jarg1; 
  arg2 = (char *)jarg2; 
  arg3 = (FBXImporterUnmanaged::FBXVector3 *)jarg3;
  if (!arg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "FBXImporterUnmanaged::FBXVector3 const & type is null", 0);
    return ;
  } 
  (*arg1)->SetVector3((char const *)arg2,(FBXImporterUnmanaged::FBXVector3 const &)*arg3);
}


SWIGEXPORT void SWIGSTDCALL CSharp_FBXMaterialPtr_SetVector4(void * jarg1, char * jarg2, void * jarg3) {
  FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXMaterial > *arg1 = (FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXMaterial > *) 0 ;
  char *arg2 = (char *) 0 ;
  FBXImporterUnmanaged::FBXVector4 *arg3 = 0 ;
  
  arg1 = (FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXMaterial > *)jarg1; 
  arg2 = (char *)jarg2; 
  arg3 = (FBXImporterUnmanaged::FBXVector4 *)jarg3;
  if (!arg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "FBXImporterUnmanaged::FBXVector4 const & type is null", 0);
    return ;
  } 
  (*arg1)->SetVector4((char const *)arg2,(FBXImporterUnmanaged::FBXVector4 const &)*arg3);
}


SWIGEXPORT void SWIGSTDCALL CSharp_FBXMaterialPtr_SetString(void * jarg1, char * jarg2, char * jarg3) {
  FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXMaterial > *arg1 = (FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXMaterial > *) 0 ;
  char *arg2 = (char *) 0 ;
  char *arg3 = (char *) 0 ;
  
  arg1 = (FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXMaterial > *)jarg1; 
  arg2 = (char *)jarg2; 
  arg3 = (char *)jarg3; 
  (*arg1)->SetString((char const *)arg2,(char const *)arg3);
}


SWIGEXPORT void SWIGSTDCALL CSharp_FBXMaterialPtr_SetColor(void * jarg1, char * jarg2, void * jarg3) {
  FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXMaterial > *arg1 = (FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXMaterial > *) 0 ;
  char *arg2 = (char *) 0 ;
  FBXImporterUnmanaged::FBXColor *arg3 = 0 ;
  
  arg1 = (FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXMaterial > *)jarg1; 
  arg2 = (char *)jarg2; 
  arg3 = (FBXImporterUnmanaged::FBXColor *)jarg3;
  if (!arg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "FBXImporterUnmanaged::FBXColor const & type is null", 0);
    return ;
  } 
  (*arg1)->SetColor((char const *)arg2,(FBXImporterUnmanaged::FBXColor const &)*arg3);
}


SWIGEXPORT void SWIGSTDCALL CSharp_FBXMaterialPtr_SetMatrix4x4(void * jarg1, char * jarg2, void * jarg3) {
  FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXMaterial > *arg1 = (FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXMaterial > *) 0 ;
  char *arg2 = (char *) 0 ;
  FBXImporterUnmanaged::FBXMatrix4x4 *arg3 = 0 ;
  
  arg1 = (FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXMaterial > *)jarg1; 
  arg2 = (char *)jarg2; 
  arg3 = (FBXImporterUnmanaged::FBXMatrix4x4 *)jarg3;
  if (!arg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "FBXImporterUnmanaged::FBXMatrix4x4 const & type is null", 0);
    return ;
  } 
  (*arg1)->SetMatrix4x4((char const *)arg2,(FBXImporterUnmanaged::FBXMatrix4x4 const &)*arg3);
}


SWIGEXPORT char * SWIGSTDCALL CSharp_FBXMaterialPtr_GetName(void * jarg1) {
  char * jresult ;
  FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXMaterial > *arg1 = (FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXMaterial > *) 0 ;
  char *result = 0 ;
  
  arg1 = (FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXMaterial > *)jarg1; 
  result = (char *)(*arg1)->GetName();
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_FBXMaterialPtr_GetBool__SWIG_0(void * jarg1, char * jarg2, unsigned int jarg3) {
  unsigned int jresult ;
  FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXMaterial > *arg1 = (FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXMaterial > *) 0 ;
  char *arg2 = (char *) 0 ;
  bool *arg3 = 0 ;
  bool temp3 ;
  bool result;
  
  arg1 = (FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXMaterial > *)jarg1; 
  arg2 = (char *)jarg2; 
  temp3 = jarg3 ? true : false; 
  arg3 = &temp3; 
  result = (bool)(*arg1)->GetBool((char const *)arg2,(bool const &)*arg3);
  jresult = result; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_FBXMaterialPtr_GetBool__SWIG_1(void * jarg1, char * jarg2) {
  unsigned int jresult ;
  FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXMaterial > *arg1 = (FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXMaterial > *) 0 ;
  char *arg2 = (char *) 0 ;
  bool result;
  
  arg1 = (FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXMaterial > *)jarg1; 
  arg2 = (char *)jarg2; 
  result = (bool)(*arg1)->GetBool((char const *)arg2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_FBXMaterialPtr_GetInt__SWIG_0(void * jarg1, char * jarg2, int jarg3) {
  int jresult ;
  FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXMaterial > *arg1 = (FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXMaterial > *) 0 ;
  char *arg2 = (char *) 0 ;
  int *arg3 = 0 ;
  int temp3 ;
  int result;
  
  arg1 = (FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXMaterial > *)jarg1; 
  arg2 = (char *)jarg2; 
  temp3 = (int)jarg3; 
  arg3 = &temp3; 
  result = (int)(*arg1)->GetInt((char const *)arg2,(int const &)*arg3);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_FBXMaterialPtr_GetInt__SWIG_1(void * jarg1, char * jarg2) {
  int jresult ;
  FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXMaterial > *arg1 = (FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXMaterial > *) 0 ;
  char *arg2 = (char *) 0 ;
  int result;
  
  arg1 = (FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXMaterial > *)jarg1; 
  arg2 = (char *)jarg2; 
  result = (int)(*arg1)->GetInt((char const *)arg2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT float SWIGSTDCALL CSharp_FBXMaterialPtr_GetFloat__SWIG_0(void * jarg1, char * jarg2, float jarg3) {
  float jresult ;
  FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXMaterial > *arg1 = (FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXMaterial > *) 0 ;
  char *arg2 = (char *) 0 ;
  float *arg3 = 0 ;
  float temp3 ;
  float result;
  
  arg1 = (FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXMaterial > *)jarg1; 
  arg2 = (char *)jarg2; 
  temp3 = (float)jarg3; 
  arg3 = &temp3; 
  result = (float)(*arg1)->GetFloat((char const *)arg2,(float const &)*arg3);
  jresult = result; 
  return jresult;
}


SWIGEXPORT float SWIGSTDCALL CSharp_FBXMaterialPtr_GetFloat__SWIG_1(void * jarg1, char * jarg2) {
  float jresult ;
  FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXMaterial > *arg1 = (FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXMaterial > *) 0 ;
  char *arg2 = (char *) 0 ;
  float result;
  
  arg1 = (FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXMaterial > *)jarg1; 
  arg2 = (char *)jarg2; 
  result = (float)(*arg1)->GetFloat((char const *)arg2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT double SWIGSTDCALL CSharp_FBXMaterialPtr_GetDouble__SWIG_0(void * jarg1, char * jarg2, double jarg3) {
  double jresult ;
  FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXMaterial > *arg1 = (FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXMaterial > *) 0 ;
  char *arg2 = (char *) 0 ;
  double *arg3 = 0 ;
  double temp3 ;
  double result;
  
  arg1 = (FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXMaterial > *)jarg1; 
  arg2 = (char *)jarg2; 
  temp3 = (double)jarg3; 
  arg3 = &temp3; 
  result = (double)(*arg1)->GetDouble((char const *)arg2,(double const &)*arg3);
  jresult = result; 
  return jresult;
}


SWIGEXPORT double SWIGSTDCALL CSharp_FBXMaterialPtr_GetDouble__SWIG_1(void * jarg1, char * jarg2) {
  double jresult ;
  FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXMaterial > *arg1 = (FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXMaterial > *) 0 ;
  char *arg2 = (char *) 0 ;
  double result;
  
  arg1 = (FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXMaterial > *)jarg1; 
  arg2 = (char *)jarg2; 
  result = (double)(*arg1)->GetDouble((char const *)arg2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_FBXMaterialPtr_GetVector2__SWIG_0(void * jarg1, char * jarg2, void * jarg3) {
  void * jresult ;
  FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXMaterial > *arg1 = (FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXMaterial > *) 0 ;
  char *arg2 = (char *) 0 ;
  FBXImporterUnmanaged::FBXVector2 *arg3 = 0 ;
  FBXImporterUnmanaged::FBXVector2 result;
  
  arg1 = (FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXMaterial > *)jarg1; 
  arg2 = (char *)jarg2; 
  arg3 = (FBXImporterUnmanaged::FBXVector2 *)jarg3;
  if (!arg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "FBXImporterUnmanaged::FBXVector2 const & type is null", 0);
    return 0;
  } 
  result = (*arg1)->GetVector2((char const *)arg2,(FBXImporterUnmanaged::FBXVector2 const &)*arg3);
  jresult = new FBXImporterUnmanaged::FBXVector2((const FBXImporterUnmanaged::FBXVector2 &)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_FBXMaterialPtr_GetVector2__SWIG_1(void * jarg1, char * jarg2) {
  void * jresult ;
  FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXMaterial > *arg1 = (FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXMaterial > *) 0 ;
  char *arg2 = (char *) 0 ;
  FBXImporterUnmanaged::FBXVector2 result;
  
  arg1 = (FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXMaterial > *)jarg1; 
  arg2 = (char *)jarg2; 
  result = (*arg1)->GetVector2((char const *)arg2);
  jresult = new FBXImporterUnmanaged::FBXVector2((const FBXImporterUnmanaged::FBXVector2 &)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_FBXMaterialPtr_GetVector3__SWIG_0(void * jarg1, char * jarg2, void * jarg3) {
  void * jresult ;
  FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXMaterial > *arg1 = (FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXMaterial > *) 0 ;
  char *arg2 = (char *) 0 ;
  FBXImporterUnmanaged::FBXVector3 *arg3 = 0 ;
  FBXImporterUnmanaged::FBXVector3 result;
  
  arg1 = (FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXMaterial > *)jarg1; 
  arg2 = (char *)jarg2; 
  arg3 = (FBXImporterUnmanaged::FBXVector3 *)jarg3;
  if (!arg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "FBXImporterUnmanaged::FBXVector3 const & type is null", 0);
    return 0;
  } 
  result = (*arg1)->GetVector3((char const *)arg2,(FBXImporterUnmanaged::FBXVector3 const &)*arg3);
  jresult = new FBXImporterUnmanaged::FBXVector3((const FBXImporterUnmanaged::FBXVector3 &)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_FBXMaterialPtr_GetVector3__SWIG_1(void * jarg1, char * jarg2) {
  void * jresult ;
  FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXMaterial > *arg1 = (FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXMaterial > *) 0 ;
  char *arg2 = (char *) 0 ;
  FBXImporterUnmanaged::FBXVector3 result;
  
  arg1 = (FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXMaterial > *)jarg1; 
  arg2 = (char *)jarg2; 
  result = (*arg1)->GetVector3((char const *)arg2);
  jresult = new FBXImporterUnmanaged::FBXVector3((const FBXImporterUnmanaged::FBXVector3 &)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_FBXMaterialPtr_GetVector4__SWIG_0(void * jarg1, char * jarg2, void * jarg3) {
  void * jresult ;
  FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXMaterial > *arg1 = (FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXMaterial > *) 0 ;
  char *arg2 = (char *) 0 ;
  FBXImporterUnmanaged::FBXVector4 *arg3 = 0 ;
  FBXImporterUnmanaged::FBXVector4 result;
  
  arg1 = (FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXMaterial > *)jarg1; 
  arg2 = (char *)jarg2; 
  arg3 = (FBXImporterUnmanaged::FBXVector4 *)jarg3;
  if (!arg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "FBXImporterUnmanaged::FBXVector4 const & type is null", 0);
    return 0;
  } 
  result = (*arg1)->GetVector4((char const *)arg2,(FBXImporterUnmanaged::FBXVector4 const &)*arg3);
  jresult = new FBXImporterUnmanaged::FBXVector4((const FBXImporterUnmanaged::FBXVector4 &)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_FBXMaterialPtr_GetVector4__SWIG_1(void * jarg1, char * jarg2) {
  void * jresult ;
  FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXMaterial > *arg1 = (FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXMaterial > *) 0 ;
  char *arg2 = (char *) 0 ;
  FBXImporterUnmanaged::FBXVector4 result;
  
  arg1 = (FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXMaterial > *)jarg1; 
  arg2 = (char *)jarg2; 
  result = (*arg1)->GetVector4((char const *)arg2);
  jresult = new FBXImporterUnmanaged::FBXVector4((const FBXImporterUnmanaged::FBXVector4 &)result); 
  return jresult;
}


SWIGEXPORT char * SWIGSTDCALL CSharp_FBXMaterialPtr_GetString__SWIG_0(void * jarg1, char * jarg2, char * jarg3) {
  char * jresult ;
  FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXMaterial > *arg1 = (FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXMaterial > *) 0 ;
  char *arg2 = (char *) 0 ;
  char *arg3 = (char *) 0 ;
  char *result = 0 ;
  
  arg1 = (FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXMaterial > *)jarg1; 
  arg2 = (char *)jarg2; 
  arg3 = (char *)jarg3; 
  result = (char *)(*arg1)->GetString((char const *)arg2,(char const *)arg3);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT char * SWIGSTDCALL CSharp_FBXMaterialPtr_GetString__SWIG_1(void * jarg1, char * jarg2) {
  char * jresult ;
  FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXMaterial > *arg1 = (FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXMaterial > *) 0 ;
  char *arg2 = (char *) 0 ;
  char *result = 0 ;
  
  arg1 = (FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXMaterial > *)jarg1; 
  arg2 = (char *)jarg2; 
  result = (char *)(*arg1)->GetString((char const *)arg2);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_FBXMaterialPtr_GetColor__SWIG_0(void * jarg1, char * jarg2, void * jarg3) {
  void * jresult ;
  FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXMaterial > *arg1 = (FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXMaterial > *) 0 ;
  char *arg2 = (char *) 0 ;
  FBXImporterUnmanaged::FBXColor *arg3 = 0 ;
  FBXImporterUnmanaged::FBXColor result;
  
  arg1 = (FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXMaterial > *)jarg1; 
  arg2 = (char *)jarg2; 
  arg3 = (FBXImporterUnmanaged::FBXColor *)jarg3;
  if (!arg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "FBXImporterUnmanaged::FBXColor const & type is null", 0);
    return 0;
  } 
  result = (*arg1)->GetColor((char const *)arg2,(FBXImporterUnmanaged::FBXColor const &)*arg3);
  jresult = new FBXImporterUnmanaged::FBXColor((const FBXImporterUnmanaged::FBXColor &)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_FBXMaterialPtr_GetColor__SWIG_1(void * jarg1, char * jarg2) {
  void * jresult ;
  FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXMaterial > *arg1 = (FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXMaterial > *) 0 ;
  char *arg2 = (char *) 0 ;
  FBXImporterUnmanaged::FBXColor result;
  
  arg1 = (FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXMaterial > *)jarg1; 
  arg2 = (char *)jarg2; 
  result = (*arg1)->GetColor((char const *)arg2);
  jresult = new FBXImporterUnmanaged::FBXColor((const FBXImporterUnmanaged::FBXColor &)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_FBXMaterialPtr_GetMatrix4x4__SWIG_0(void * jarg1, char * jarg2, void * jarg3) {
  void * jresult ;
  FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXMaterial > *arg1 = (FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXMaterial > *) 0 ;
  char *arg2 = (char *) 0 ;
  FBXImporterUnmanaged::FBXMatrix4x4 *arg3 = 0 ;
  FBXImporterUnmanaged::FBXMatrix4x4 result;
  
  arg1 = (FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXMaterial > *)jarg1; 
  arg2 = (char *)jarg2; 
  arg3 = (FBXImporterUnmanaged::FBXMatrix4x4 *)jarg3;
  if (!arg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "FBXImporterUnmanaged::FBXMatrix4x4 const & type is null", 0);
    return 0;
  } 
  result = (*arg1)->GetMatrix4x4((char const *)arg2,(FBXImporterUnmanaged::FBXMatrix4x4 const &)*arg3);
  jresult = new FBXImporterUnmanaged::FBXMatrix4x4((const FBXImporterUnmanaged::FBXMatrix4x4 &)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_FBXMaterialPtr_GetMatrix4x4__SWIG_1(void * jarg1, char * jarg2) {
  void * jresult ;
  FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXMaterial > *arg1 = (FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXMaterial > *) 0 ;
  char *arg2 = (char *) 0 ;
  FBXImporterUnmanaged::FBXMatrix4x4 result;
  
  arg1 = (FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXMaterial > *)jarg1; 
  arg2 = (char *)jarg2; 
  result = (*arg1)->GetMatrix4x4((char const *)arg2);
  jresult = new FBXImporterUnmanaged::FBXMatrix4x4((const FBXImporterUnmanaged::FBXMatrix4x4 &)result); 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_FBXMaterialPtr_Exist(void * jarg1, char * jarg2) {
  unsigned int jresult ;
  FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXMaterial > *arg1 = (FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXMaterial > *) 0 ;
  char *arg2 = (char *) 0 ;
  bool result;
  
  arg1 = (FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXMaterial > *)jarg1; 
  arg2 = (char *)jarg2; 
  result = (bool)(*arg1)->Exist((char const *)arg2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_FBXMaterialPtr_addReference(void * jarg1) {
  FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXMaterial > *arg1 = (FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXMaterial > *) 0 ;
  
  arg1 = (FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXMaterial > *)jarg1; 
  (*arg1)->addReference();
}


SWIGEXPORT void SWIGSTDCALL CSharp_FBXMaterialPtr_removeReference(void * jarg1) {
  FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXMaterial > *arg1 = (FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXMaterial > *) 0 ;
  
  arg1 = (FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXMaterial > *)jarg1; 
  (*arg1)->removeReference();
}


SWIGEXPORT int SWIGSTDCALL CSharp_FBXMaterialPtr_getReferenceCount(void * jarg1) {
  int jresult ;
  FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXMaterial > *arg1 = (FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXMaterial > *) 0 ;
  int result;
  
  arg1 = (FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXMaterial > *)jarg1; 
  result = (int)(*arg1)->getReferenceCount();
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_FBXModel_Create() {
  void * jresult ;
  FBXImporterUnmanaged::FBXModelPtr result;
  
  result = FBXImporterUnmanaged::FBXModel::Create();
  jresult = new FBXImporterUnmanaged::FBXModelPtr((const FBXImporterUnmanaged::FBXModelPtr &)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_FBXModel() {
  void * jresult ;
  FBXImporterUnmanaged::FBXModel *result = 0 ;
  
  result = (FBXImporterUnmanaged::FBXModel *)new FBXImporterUnmanaged::FBXModel();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_FBXModel(void * jarg1) {
  FBXImporterUnmanaged::FBXModel *arg1 = (FBXImporterUnmanaged::FBXModel *) 0 ;
  
  arg1 = (FBXImporterUnmanaged::FBXModel *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_FBXModel_SetName(void * jarg1, char * jarg2) {
  FBXImporterUnmanaged::FBXModel *arg1 = (FBXImporterUnmanaged::FBXModel *) 0 ;
  char *arg2 = (char *) 0 ;
  
  arg1 = (FBXImporterUnmanaged::FBXModel *)jarg1; 
  arg2 = (char *)jarg2; 
  (arg1)->SetName((char const *)arg2);
}


SWIGEXPORT char * SWIGSTDCALL CSharp_FBXModel_GetName(void * jarg1) {
  char * jresult ;
  FBXImporterUnmanaged::FBXModel *arg1 = (FBXImporterUnmanaged::FBXModel *) 0 ;
  char *result = 0 ;
  
  arg1 = (FBXImporterUnmanaged::FBXModel *)jarg1; 
  result = (char *)((FBXImporterUnmanaged::FBXModel const *)arg1)->GetName();
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_FBXModel_GetChildCount(void * jarg1) {
  int jresult ;
  FBXImporterUnmanaged::FBXModel *arg1 = (FBXImporterUnmanaged::FBXModel *) 0 ;
  int result;
  
  arg1 = (FBXImporterUnmanaged::FBXModel *)jarg1; 
  result = (int)((FBXImporterUnmanaged::FBXModel const *)arg1)->GetChildCount();
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_FBXModel_GetChild(void * jarg1, int jarg2) {
  void * jresult ;
  FBXImporterUnmanaged::FBXModel *arg1 = (FBXImporterUnmanaged::FBXModel *) 0 ;
  int arg2 ;
  FBXImporterUnmanaged::FBXModelPtr result;
  
  arg1 = (FBXImporterUnmanaged::FBXModel *)jarg1; 
  arg2 = (int)jarg2; 
  result = (arg1)->GetChild(arg2);
  jresult = new FBXImporterUnmanaged::FBXModelPtr((const FBXImporterUnmanaged::FBXModelPtr &)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_FBXModel_AddChild(void * jarg1, void * jarg2) {
  FBXImporterUnmanaged::FBXModel *arg1 = (FBXImporterUnmanaged::FBXModel *) 0 ;
  FBXImporterUnmanaged::FBXModelPtr arg2 ;
  FBXImporterUnmanaged::FBXModelPtr *argp2 ;
  
  arg1 = (FBXImporterUnmanaged::FBXModel *)jarg1; 
  argp2 = (FBXImporterUnmanaged::FBXModelPtr *)jarg2; 
  if (!argp2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "Attempt to dereference null FBXImporterUnmanaged::FBXModelPtr", 0);
    return ;
  }
  arg2 = *argp2; 
  (arg1)->AddChild(arg2);
}


SWIGEXPORT void SWIGSTDCALL CSharp_FBXModel_ResizeVertex(void * jarg1, int jarg2) {
  FBXImporterUnmanaged::FBXModel *arg1 = (FBXImporterUnmanaged::FBXModel *) 0 ;
  int arg2 ;
  
  arg1 = (FBXImporterUnmanaged::FBXModel *)jarg1; 
  arg2 = (int)jarg2; 
  (arg1)->ResizeVertex(arg2);
}


SWIGEXPORT void SWIGSTDCALL CSharp_FBXModel_ResizeColor(void * jarg1, int jarg2) {
  FBXImporterUnmanaged::FBXModel *arg1 = (FBXImporterUnmanaged::FBXModel *) 0 ;
  int arg2 ;
  
  arg1 = (FBXImporterUnmanaged::FBXModel *)jarg1; 
  arg2 = (int)jarg2; 
  (arg1)->ResizeColor(arg2);
}


SWIGEXPORT void SWIGSTDCALL CSharp_FBXModel_ResizeUV(void * jarg1, int jarg2, int jarg3) {
  FBXImporterUnmanaged::FBXModel *arg1 = (FBXImporterUnmanaged::FBXModel *) 0 ;
  int arg2 ;
  int arg3 ;
  
  arg1 = (FBXImporterUnmanaged::FBXModel *)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  (arg1)->ResizeUV(arg2,arg3);
}


SWIGEXPORT void SWIGSTDCALL CSharp_FBXModel_ResizeNormal(void * jarg1, int jarg2) {
  FBXImporterUnmanaged::FBXModel *arg1 = (FBXImporterUnmanaged::FBXModel *) 0 ;
  int arg2 ;
  
  arg1 = (FBXImporterUnmanaged::FBXModel *)jarg1; 
  arg2 = (int)jarg2; 
  (arg1)->ResizeNormal(arg2);
}


SWIGEXPORT void SWIGSTDCALL CSharp_FBXModel_ResizeTangent(void * jarg1, int jarg2) {
  FBXImporterUnmanaged::FBXModel *arg1 = (FBXImporterUnmanaged::FBXModel *) 0 ;
  int arg2 ;
  
  arg1 = (FBXImporterUnmanaged::FBXModel *)jarg1; 
  arg2 = (int)jarg2; 
  (arg1)->ResizeTangent(arg2);
}


SWIGEXPORT void SWIGSTDCALL CSharp_FBXModel_ResizeBinormal(void * jarg1, int jarg2) {
  FBXImporterUnmanaged::FBXModel *arg1 = (FBXImporterUnmanaged::FBXModel *) 0 ;
  int arg2 ;
  
  arg1 = (FBXImporterUnmanaged::FBXModel *)jarg1; 
  arg2 = (int)jarg2; 
  (arg1)->ResizeBinormal(arg2);
}


SWIGEXPORT void SWIGSTDCALL CSharp_FBXModel_ResizeMaterial(void * jarg1, int jarg2) {
  FBXImporterUnmanaged::FBXModel *arg1 = (FBXImporterUnmanaged::FBXModel *) 0 ;
  int arg2 ;
  
  arg1 = (FBXImporterUnmanaged::FBXModel *)jarg1; 
  arg2 = (int)jarg2; 
  (arg1)->ResizeMaterial(arg2);
}


SWIGEXPORT void SWIGSTDCALL CSharp_FBXModel_SetPivotRotation(void * jarg1, void * jarg2) {
  FBXImporterUnmanaged::FBXModel *arg1 = (FBXImporterUnmanaged::FBXModel *) 0 ;
  FBXImporterUnmanaged::FBXVector3 *arg2 = 0 ;
  
  arg1 = (FBXImporterUnmanaged::FBXModel *)jarg1; 
  arg2 = (FBXImporterUnmanaged::FBXVector3 *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "FBXImporterUnmanaged::FBXVector3 const & type is null", 0);
    return ;
  } 
  (arg1)->SetPivotRotation((FBXImporterUnmanaged::FBXVector3 const &)*arg2);
}


SWIGEXPORT void SWIGSTDCALL CSharp_FBXModel_SetRotationOffset(void * jarg1, void * jarg2) {
  FBXImporterUnmanaged::FBXModel *arg1 = (FBXImporterUnmanaged::FBXModel *) 0 ;
  FBXImporterUnmanaged::FBXVector3 *arg2 = 0 ;
  
  arg1 = (FBXImporterUnmanaged::FBXModel *)jarg1; 
  arg2 = (FBXImporterUnmanaged::FBXVector3 *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "FBXImporterUnmanaged::FBXVector3 const & type is null", 0);
    return ;
  } 
  (arg1)->SetRotationOffset((FBXImporterUnmanaged::FBXVector3 const &)*arg2);
}


SWIGEXPORT void SWIGSTDCALL CSharp_FBXModel_SetPreRotation(void * jarg1, void * jarg2) {
  FBXImporterUnmanaged::FBXModel *arg1 = (FBXImporterUnmanaged::FBXModel *) 0 ;
  FBXImporterUnmanaged::FBXVector3 *arg2 = 0 ;
  
  arg1 = (FBXImporterUnmanaged::FBXModel *)jarg1; 
  arg2 = (FBXImporterUnmanaged::FBXVector3 *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "FBXImporterUnmanaged::FBXVector3 const & type is null", 0);
    return ;
  } 
  (arg1)->SetPreRotation((FBXImporterUnmanaged::FBXVector3 const &)*arg2);
}


SWIGEXPORT void SWIGSTDCALL CSharp_FBXModel_SetPostRotation(void * jarg1, void * jarg2) {
  FBXImporterUnmanaged::FBXModel *arg1 = (FBXImporterUnmanaged::FBXModel *) 0 ;
  FBXImporterUnmanaged::FBXVector3 *arg2 = 0 ;
  
  arg1 = (FBXImporterUnmanaged::FBXModel *)jarg1; 
  arg2 = (FBXImporterUnmanaged::FBXVector3 *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "FBXImporterUnmanaged::FBXVector3 const & type is null", 0);
    return ;
  } 
  (arg1)->SetPostRotation((FBXImporterUnmanaged::FBXVector3 const &)*arg2);
}


SWIGEXPORT void SWIGSTDCALL CSharp_FBXModel_SetPivotScale(void * jarg1, void * jarg2) {
  FBXImporterUnmanaged::FBXModel *arg1 = (FBXImporterUnmanaged::FBXModel *) 0 ;
  FBXImporterUnmanaged::FBXVector3 *arg2 = 0 ;
  
  arg1 = (FBXImporterUnmanaged::FBXModel *)jarg1; 
  arg2 = (FBXImporterUnmanaged::FBXVector3 *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "FBXImporterUnmanaged::FBXVector3 const & type is null", 0);
    return ;
  } 
  (arg1)->SetPivotScale((FBXImporterUnmanaged::FBXVector3 const &)*arg2);
}


SWIGEXPORT void SWIGSTDCALL CSharp_FBXModel_SetScalingOffset(void * jarg1, void * jarg2) {
  FBXImporterUnmanaged::FBXModel *arg1 = (FBXImporterUnmanaged::FBXModel *) 0 ;
  FBXImporterUnmanaged::FBXVector3 *arg2 = 0 ;
  
  arg1 = (FBXImporterUnmanaged::FBXModel *)jarg1; 
  arg2 = (FBXImporterUnmanaged::FBXVector3 *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "FBXImporterUnmanaged::FBXVector3 const & type is null", 0);
    return ;
  } 
  (arg1)->SetScalingOffset((FBXImporterUnmanaged::FBXVector3 const &)*arg2);
}


SWIGEXPORT void SWIGSTDCALL CSharp_FBXModel_SetTranslation(void * jarg1, void * jarg2) {
  FBXImporterUnmanaged::FBXModel *arg1 = (FBXImporterUnmanaged::FBXModel *) 0 ;
  FBXImporterUnmanaged::FBXVector3 *arg2 = 0 ;
  
  arg1 = (FBXImporterUnmanaged::FBXModel *)jarg1; 
  arg2 = (FBXImporterUnmanaged::FBXVector3 *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "FBXImporterUnmanaged::FBXVector3 const & type is null", 0);
    return ;
  } 
  (arg1)->SetTranslation((FBXImporterUnmanaged::FBXVector3 const &)*arg2);
}


SWIGEXPORT void SWIGSTDCALL CSharp_FBXModel_SetRotation(void * jarg1, void * jarg2) {
  FBXImporterUnmanaged::FBXModel *arg1 = (FBXImporterUnmanaged::FBXModel *) 0 ;
  FBXImporterUnmanaged::FBXVector3 *arg2 = 0 ;
  
  arg1 = (FBXImporterUnmanaged::FBXModel *)jarg1; 
  arg2 = (FBXImporterUnmanaged::FBXVector3 *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "FBXImporterUnmanaged::FBXVector3 const & type is null", 0);
    return ;
  } 
  (arg1)->SetRotation((FBXImporterUnmanaged::FBXVector3 const &)*arg2);
}


SWIGEXPORT void SWIGSTDCALL CSharp_FBXModel_SetScale(void * jarg1, void * jarg2) {
  FBXImporterUnmanaged::FBXModel *arg1 = (FBXImporterUnmanaged::FBXModel *) 0 ;
  FBXImporterUnmanaged::FBXVector3 *arg2 = 0 ;
  
  arg1 = (FBXImporterUnmanaged::FBXModel *)jarg1; 
  arg2 = (FBXImporterUnmanaged::FBXVector3 *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "FBXImporterUnmanaged::FBXVector3 const & type is null", 0);
    return ;
  } 
  (arg1)->SetScale((FBXImporterUnmanaged::FBXVector3 const &)*arg2);
}


SWIGEXPORT void SWIGSTDCALL CSharp_FBXModel_SetGeometryTranslation(void * jarg1, void * jarg2) {
  FBXImporterUnmanaged::FBXModel *arg1 = (FBXImporterUnmanaged::FBXModel *) 0 ;
  FBXImporterUnmanaged::FBXVector3 *arg2 = 0 ;
  
  arg1 = (FBXImporterUnmanaged::FBXModel *)jarg1; 
  arg2 = (FBXImporterUnmanaged::FBXVector3 *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "FBXImporterUnmanaged::FBXVector3 const & type is null", 0);
    return ;
  } 
  (arg1)->SetGeometryTranslation((FBXImporterUnmanaged::FBXVector3 const &)*arg2);
}


SWIGEXPORT void SWIGSTDCALL CSharp_FBXModel_SetGeometryRotation(void * jarg1, void * jarg2) {
  FBXImporterUnmanaged::FBXModel *arg1 = (FBXImporterUnmanaged::FBXModel *) 0 ;
  FBXImporterUnmanaged::FBXVector3 *arg2 = 0 ;
  
  arg1 = (FBXImporterUnmanaged::FBXModel *)jarg1; 
  arg2 = (FBXImporterUnmanaged::FBXVector3 *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "FBXImporterUnmanaged::FBXVector3 const & type is null", 0);
    return ;
  } 
  (arg1)->SetGeometryRotation((FBXImporterUnmanaged::FBXVector3 const &)*arg2);
}


SWIGEXPORT void SWIGSTDCALL CSharp_FBXModel_SetGeometryScale(void * jarg1, void * jarg2) {
  FBXImporterUnmanaged::FBXModel *arg1 = (FBXImporterUnmanaged::FBXModel *) 0 ;
  FBXImporterUnmanaged::FBXVector3 *arg2 = 0 ;
  
  arg1 = (FBXImporterUnmanaged::FBXModel *)jarg1; 
  arg2 = (FBXImporterUnmanaged::FBXVector3 *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "FBXImporterUnmanaged::FBXVector3 const & type is null", 0);
    return ;
  } 
  (arg1)->SetGeometryScale((FBXImporterUnmanaged::FBXVector3 const &)*arg2);
}


SWIGEXPORT void SWIGSTDCALL CSharp_FBXModel_AddVertex(void * jarg1, void * jarg2) {
  FBXImporterUnmanaged::FBXModel *arg1 = (FBXImporterUnmanaged::FBXModel *) 0 ;
  FBXImporterUnmanaged::FBXVector3 *arg2 = 0 ;
  
  arg1 = (FBXImporterUnmanaged::FBXModel *)jarg1; 
  arg2 = (FBXImporterUnmanaged::FBXVector3 *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "FBXImporterUnmanaged::FBXVector3 const & type is null", 0);
    return ;
  } 
  (arg1)->AddVertex((FBXImporterUnmanaged::FBXVector3 const &)*arg2);
}


SWIGEXPORT void SWIGSTDCALL CSharp_FBXModel_AddIndex(void * jarg1, int jarg2, int jarg3) {
  FBXImporterUnmanaged::FBXModel *arg1 = (FBXImporterUnmanaged::FBXModel *) 0 ;
  int arg2 ;
  int arg3 ;
  
  arg1 = (FBXImporterUnmanaged::FBXModel *)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  (arg1)->AddIndex(arg2,arg3);
}


SWIGEXPORT void SWIGSTDCALL CSharp_FBXModel_AddColor(void * jarg1, void * jarg2) {
  FBXImporterUnmanaged::FBXModel *arg1 = (FBXImporterUnmanaged::FBXModel *) 0 ;
  FBXImporterUnmanaged::FBXColor *arg2 = 0 ;
  
  arg1 = (FBXImporterUnmanaged::FBXModel *)jarg1; 
  arg2 = (FBXImporterUnmanaged::FBXColor *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "FBXImporterUnmanaged::FBXColor const & type is null", 0);
    return ;
  } 
  (arg1)->AddColor((FBXImporterUnmanaged::FBXColor const &)*arg2);
}


SWIGEXPORT void SWIGSTDCALL CSharp_FBXModel_AddUV(void * jarg1, int jarg2, void * jarg3) {
  FBXImporterUnmanaged::FBXModel *arg1 = (FBXImporterUnmanaged::FBXModel *) 0 ;
  int arg2 ;
  FBXImporterUnmanaged::FBXVector2 *arg3 = 0 ;
  
  arg1 = (FBXImporterUnmanaged::FBXModel *)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (FBXImporterUnmanaged::FBXVector2 *)jarg3;
  if (!arg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "FBXImporterUnmanaged::FBXVector2 const & type is null", 0);
    return ;
  } 
  (arg1)->AddUV(arg2,(FBXImporterUnmanaged::FBXVector2 const &)*arg3);
}


SWIGEXPORT void SWIGSTDCALL CSharp_FBXModel_AddNormal(void * jarg1, void * jarg2) {
  FBXImporterUnmanaged::FBXModel *arg1 = (FBXImporterUnmanaged::FBXModel *) 0 ;
  FBXImporterUnmanaged::FBXVector3 *arg2 = 0 ;
  
  arg1 = (FBXImporterUnmanaged::FBXModel *)jarg1; 
  arg2 = (FBXImporterUnmanaged::FBXVector3 *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "FBXImporterUnmanaged::FBXVector3 const & type is null", 0);
    return ;
  } 
  (arg1)->AddNormal((FBXImporterUnmanaged::FBXVector3 const &)*arg2);
}


SWIGEXPORT void SWIGSTDCALL CSharp_FBXModel_AddTangent(void * jarg1, void * jarg2) {
  FBXImporterUnmanaged::FBXModel *arg1 = (FBXImporterUnmanaged::FBXModel *) 0 ;
  FBXImporterUnmanaged::FBXVector4 *arg2 = 0 ;
  
  arg1 = (FBXImporterUnmanaged::FBXModel *)jarg1; 
  arg2 = (FBXImporterUnmanaged::FBXVector4 *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "FBXImporterUnmanaged::FBXVector4 const & type is null", 0);
    return ;
  } 
  (arg1)->AddTangent((FBXImporterUnmanaged::FBXVector4 const &)*arg2);
}


SWIGEXPORT void SWIGSTDCALL CSharp_FBXModel_AddBinormal(void * jarg1, void * jarg2) {
  FBXImporterUnmanaged::FBXModel *arg1 = (FBXImporterUnmanaged::FBXModel *) 0 ;
  FBXImporterUnmanaged::FBXVector4 *arg2 = 0 ;
  
  arg1 = (FBXImporterUnmanaged::FBXModel *)jarg1; 
  arg2 = (FBXImporterUnmanaged::FBXVector4 *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "FBXImporterUnmanaged::FBXVector4 const & type is null", 0);
    return ;
  } 
  (arg1)->AddBinormal((FBXImporterUnmanaged::FBXVector4 const &)*arg2);
}


SWIGEXPORT void SWIGSTDCALL CSharp_FBXModel_AddMaterial(void * jarg1, void * jarg2) {
  FBXImporterUnmanaged::FBXModel *arg1 = (FBXImporterUnmanaged::FBXModel *) 0 ;
  FBXImporterUnmanaged::FBXMaterialPtr *arg2 = 0 ;
  
  arg1 = (FBXImporterUnmanaged::FBXModel *)jarg1; 
  arg2 = (FBXImporterUnmanaged::FBXMaterialPtr *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "FBXImporterUnmanaged::FBXMaterialPtr const & type is null", 0);
    return ;
  } 
  (arg1)->AddMaterial((FBXImporterUnmanaged::FBXMaterialPtr const &)*arg2);
}


SWIGEXPORT void SWIGSTDCALL CSharp_FBXModel_SetVertex(void * jarg1, int jarg2, void * jarg3) {
  FBXImporterUnmanaged::FBXModel *arg1 = (FBXImporterUnmanaged::FBXModel *) 0 ;
  int arg2 ;
  FBXImporterUnmanaged::FBXVector3 *arg3 = 0 ;
  
  arg1 = (FBXImporterUnmanaged::FBXModel *)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (FBXImporterUnmanaged::FBXVector3 *)jarg3;
  if (!arg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "FBXImporterUnmanaged::FBXVector3 const & type is null", 0);
    return ;
  } 
  (arg1)->SetVertex(arg2,(FBXImporterUnmanaged::FBXVector3 const &)*arg3);
}


SWIGEXPORT void SWIGSTDCALL CSharp_FBXModel_SetColor(void * jarg1, int jarg2, void * jarg3) {
  FBXImporterUnmanaged::FBXModel *arg1 = (FBXImporterUnmanaged::FBXModel *) 0 ;
  int arg2 ;
  FBXImporterUnmanaged::FBXColor *arg3 = 0 ;
  
  arg1 = (FBXImporterUnmanaged::FBXModel *)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (FBXImporterUnmanaged::FBXColor *)jarg3;
  if (!arg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "FBXImporterUnmanaged::FBXColor const & type is null", 0);
    return ;
  } 
  (arg1)->SetColor(arg2,(FBXImporterUnmanaged::FBXColor const &)*arg3);
}


SWIGEXPORT void SWIGSTDCALL CSharp_FBXModel_SetUVLayer(void * jarg1, int jarg2) {
  FBXImporterUnmanaged::FBXModel *arg1 = (FBXImporterUnmanaged::FBXModel *) 0 ;
  int arg2 ;
  
  arg1 = (FBXImporterUnmanaged::FBXModel *)jarg1; 
  arg2 = (int)jarg2; 
  (arg1)->SetUVLayer(arg2);
}


SWIGEXPORT void SWIGSTDCALL CSharp_FBXModel_SetUV(void * jarg1, int jarg2, int jarg3, void * jarg4) {
  FBXImporterUnmanaged::FBXModel *arg1 = (FBXImporterUnmanaged::FBXModel *) 0 ;
  int arg2 ;
  int arg3 ;
  FBXImporterUnmanaged::FBXVector2 arg4 ;
  FBXImporterUnmanaged::FBXVector2 const *argp4 ;
  
  arg1 = (FBXImporterUnmanaged::FBXModel *)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  argp4 = (FBXImporterUnmanaged::FBXVector2 *)jarg4; 
  if (!argp4) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "Attempt to dereference null FBXImporterUnmanaged::FBXVector2 const", 0);
    return ;
  }
  arg4 = *argp4; 
  (arg1)->SetUV(arg2,arg3,arg4);
}


SWIGEXPORT void SWIGSTDCALL CSharp_FBXModel_SetNormal(void * jarg1, int jarg2, void * jarg3) {
  FBXImporterUnmanaged::FBXModel *arg1 = (FBXImporterUnmanaged::FBXModel *) 0 ;
  int arg2 ;
  FBXImporterUnmanaged::FBXVector3 *arg3 = 0 ;
  
  arg1 = (FBXImporterUnmanaged::FBXModel *)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (FBXImporterUnmanaged::FBXVector3 *)jarg3;
  if (!arg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "FBXImporterUnmanaged::FBXVector3 const & type is null", 0);
    return ;
  } 
  (arg1)->SetNormal(arg2,(FBXImporterUnmanaged::FBXVector3 const &)*arg3);
}


SWIGEXPORT void SWIGSTDCALL CSharp_FBXModel_SetTangent(void * jarg1, int jarg2, void * jarg3) {
  FBXImporterUnmanaged::FBXModel *arg1 = (FBXImporterUnmanaged::FBXModel *) 0 ;
  int arg2 ;
  FBXImporterUnmanaged::FBXVector4 *arg3 = 0 ;
  
  arg1 = (FBXImporterUnmanaged::FBXModel *)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (FBXImporterUnmanaged::FBXVector4 *)jarg3;
  if (!arg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "FBXImporterUnmanaged::FBXVector4 const & type is null", 0);
    return ;
  } 
  (arg1)->SetTangent(arg2,(FBXImporterUnmanaged::FBXVector4 const &)*arg3);
}


SWIGEXPORT void SWIGSTDCALL CSharp_FBXModel_SetBinormal(void * jarg1, int jarg2, void * jarg3) {
  FBXImporterUnmanaged::FBXModel *arg1 = (FBXImporterUnmanaged::FBXModel *) 0 ;
  int arg2 ;
  FBXImporterUnmanaged::FBXVector4 *arg3 = 0 ;
  
  arg1 = (FBXImporterUnmanaged::FBXModel *)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (FBXImporterUnmanaged::FBXVector4 *)jarg3;
  if (!arg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "FBXImporterUnmanaged::FBXVector4 const & type is null", 0);
    return ;
  } 
  (arg1)->SetBinormal(arg2,(FBXImporterUnmanaged::FBXVector4 const &)*arg3);
}


SWIGEXPORT void SWIGSTDCALL CSharp_FBXModel_SetIndexMap(void * jarg1, int jarg2, int jarg3) {
  FBXImporterUnmanaged::FBXModel *arg1 = (FBXImporterUnmanaged::FBXModel *) 0 ;
  int arg2 ;
  int arg3 ;
  
  arg1 = (FBXImporterUnmanaged::FBXModel *)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  (arg1)->SetIndexMap(arg2,arg3);
}


SWIGEXPORT void SWIGSTDCALL CSharp_FBXModel_SetMaterial(void * jarg1, int jarg2, void * jarg3) {
  FBXImporterUnmanaged::FBXModel *arg1 = (FBXImporterUnmanaged::FBXModel *) 0 ;
  int arg2 ;
  FBXImporterUnmanaged::FBXMaterialPtr arg3 ;
  FBXImporterUnmanaged::FBXMaterialPtr *argp3 ;
  
  arg1 = (FBXImporterUnmanaged::FBXModel *)jarg1; 
  arg2 = (int)jarg2; 
  argp3 = (FBXImporterUnmanaged::FBXMaterialPtr *)jarg3; 
  if (!argp3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "Attempt to dereference null FBXImporterUnmanaged::FBXMaterialPtr", 0);
    return ;
  }
  arg3 = *argp3; 
  (arg1)->SetMaterial(arg2,arg3);
}


SWIGEXPORT void SWIGSTDCALL CSharp_FBXModel_AddMaterialPolygons(void * jarg1, int jarg2, int jarg3) {
  FBXImporterUnmanaged::FBXModel *arg1 = (FBXImporterUnmanaged::FBXModel *) 0 ;
  int arg2 ;
  int arg3 ;
  
  arg1 = (FBXImporterUnmanaged::FBXModel *)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  (arg1)->AddMaterialPolygons(arg2,arg3);
}


SWIGEXPORT void * SWIGSTDCALL CSharp_FBXModel_GetPivotRotation(void * jarg1) {
  void * jresult ;
  FBXImporterUnmanaged::FBXModel *arg1 = (FBXImporterUnmanaged::FBXModel *) 0 ;
  FBXImporterUnmanaged::FBXVector3 result;
  
  arg1 = (FBXImporterUnmanaged::FBXModel *)jarg1; 
  result = ((FBXImporterUnmanaged::FBXModel const *)arg1)->GetPivotRotation();
  jresult = new FBXImporterUnmanaged::FBXVector3((const FBXImporterUnmanaged::FBXVector3 &)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_FBXModel_GetRotationOffset(void * jarg1) {
  void * jresult ;
  FBXImporterUnmanaged::FBXModel *arg1 = (FBXImporterUnmanaged::FBXModel *) 0 ;
  FBXImporterUnmanaged::FBXVector3 result;
  
  arg1 = (FBXImporterUnmanaged::FBXModel *)jarg1; 
  result = ((FBXImporterUnmanaged::FBXModel const *)arg1)->GetRotationOffset();
  jresult = new FBXImporterUnmanaged::FBXVector3((const FBXImporterUnmanaged::FBXVector3 &)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_FBXModel_GetPreRotation(void * jarg1) {
  void * jresult ;
  FBXImporterUnmanaged::FBXModel *arg1 = (FBXImporterUnmanaged::FBXModel *) 0 ;
  FBXImporterUnmanaged::FBXVector3 result;
  
  arg1 = (FBXImporterUnmanaged::FBXModel *)jarg1; 
  result = ((FBXImporterUnmanaged::FBXModel const *)arg1)->GetPreRotation();
  jresult = new FBXImporterUnmanaged::FBXVector3((const FBXImporterUnmanaged::FBXVector3 &)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_FBXModel_GetPostRotation(void * jarg1) {
  void * jresult ;
  FBXImporterUnmanaged::FBXModel *arg1 = (FBXImporterUnmanaged::FBXModel *) 0 ;
  FBXImporterUnmanaged::FBXVector3 result;
  
  arg1 = (FBXImporterUnmanaged::FBXModel *)jarg1; 
  result = ((FBXImporterUnmanaged::FBXModel const *)arg1)->GetPostRotation();
  jresult = new FBXImporterUnmanaged::FBXVector3((const FBXImporterUnmanaged::FBXVector3 &)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_FBXModel_GetPivotScale(void * jarg1) {
  void * jresult ;
  FBXImporterUnmanaged::FBXModel *arg1 = (FBXImporterUnmanaged::FBXModel *) 0 ;
  FBXImporterUnmanaged::FBXVector3 result;
  
  arg1 = (FBXImporterUnmanaged::FBXModel *)jarg1; 
  result = ((FBXImporterUnmanaged::FBXModel const *)arg1)->GetPivotScale();
  jresult = new FBXImporterUnmanaged::FBXVector3((const FBXImporterUnmanaged::FBXVector3 &)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_FBXModel_GetScalingOffset(void * jarg1) {
  void * jresult ;
  FBXImporterUnmanaged::FBXModel *arg1 = (FBXImporterUnmanaged::FBXModel *) 0 ;
  FBXImporterUnmanaged::FBXVector3 result;
  
  arg1 = (FBXImporterUnmanaged::FBXModel *)jarg1; 
  result = ((FBXImporterUnmanaged::FBXModel const *)arg1)->GetScalingOffset();
  jresult = new FBXImporterUnmanaged::FBXVector3((const FBXImporterUnmanaged::FBXVector3 &)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_FBXModel_GetTranslation(void * jarg1) {
  void * jresult ;
  FBXImporterUnmanaged::FBXModel *arg1 = (FBXImporterUnmanaged::FBXModel *) 0 ;
  FBXImporterUnmanaged::FBXVector3 result;
  
  arg1 = (FBXImporterUnmanaged::FBXModel *)jarg1; 
  result = ((FBXImporterUnmanaged::FBXModel const *)arg1)->GetTranslation();
  jresult = new FBXImporterUnmanaged::FBXVector3((const FBXImporterUnmanaged::FBXVector3 &)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_FBXModel_GetRotation(void * jarg1) {
  void * jresult ;
  FBXImporterUnmanaged::FBXModel *arg1 = (FBXImporterUnmanaged::FBXModel *) 0 ;
  FBXImporterUnmanaged::FBXVector3 result;
  
  arg1 = (FBXImporterUnmanaged::FBXModel *)jarg1; 
  result = ((FBXImporterUnmanaged::FBXModel const *)arg1)->GetRotation();
  jresult = new FBXImporterUnmanaged::FBXVector3((const FBXImporterUnmanaged::FBXVector3 &)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_FBXModel_GetScale(void * jarg1) {
  void * jresult ;
  FBXImporterUnmanaged::FBXModel *arg1 = (FBXImporterUnmanaged::FBXModel *) 0 ;
  FBXImporterUnmanaged::FBXVector3 result;
  
  arg1 = (FBXImporterUnmanaged::FBXModel *)jarg1; 
  result = ((FBXImporterUnmanaged::FBXModel const *)arg1)->GetScale();
  jresult = new FBXImporterUnmanaged::FBXVector3((const FBXImporterUnmanaged::FBXVector3 &)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_FBXModel_GetGeometryTranslation(void * jarg1) {
  void * jresult ;
  FBXImporterUnmanaged::FBXModel *arg1 = (FBXImporterUnmanaged::FBXModel *) 0 ;
  FBXImporterUnmanaged::FBXVector3 result;
  
  arg1 = (FBXImporterUnmanaged::FBXModel *)jarg1; 
  result = ((FBXImporterUnmanaged::FBXModel const *)arg1)->GetGeometryTranslation();
  jresult = new FBXImporterUnmanaged::FBXVector3((const FBXImporterUnmanaged::FBXVector3 &)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_FBXModel_GetGeometryRotation(void * jarg1) {
  void * jresult ;
  FBXImporterUnmanaged::FBXModel *arg1 = (FBXImporterUnmanaged::FBXModel *) 0 ;
  FBXImporterUnmanaged::FBXVector3 result;
  
  arg1 = (FBXImporterUnmanaged::FBXModel *)jarg1; 
  result = ((FBXImporterUnmanaged::FBXModel const *)arg1)->GetGeometryRotation();
  jresult = new FBXImporterUnmanaged::FBXVector3((const FBXImporterUnmanaged::FBXVector3 &)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_FBXModel_GetGeometryScale(void * jarg1) {
  void * jresult ;
  FBXImporterUnmanaged::FBXModel *arg1 = (FBXImporterUnmanaged::FBXModel *) 0 ;
  FBXImporterUnmanaged::FBXVector3 result;
  
  arg1 = (FBXImporterUnmanaged::FBXModel *)jarg1; 
  result = ((FBXImporterUnmanaged::FBXModel const *)arg1)->GetGeometryScale();
  jresult = new FBXImporterUnmanaged::FBXVector3((const FBXImporterUnmanaged::FBXVector3 &)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_FBXModel_GetVertex(void * jarg1, int jarg2) {
  void * jresult ;
  FBXImporterUnmanaged::FBXModel *arg1 = (FBXImporterUnmanaged::FBXModel *) 0 ;
  int arg2 ;
  FBXImporterUnmanaged::FBXVector3 result;
  
  arg1 = (FBXImporterUnmanaged::FBXModel *)jarg1; 
  arg2 = (int)jarg2; 
  result = (arg1)->GetVertex(arg2);
  jresult = new FBXImporterUnmanaged::FBXVector3((const FBXImporterUnmanaged::FBXVector3 &)result); 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_FBXModel_GetIndex(void * jarg1, int jarg2, int jarg3) {
  int jresult ;
  FBXImporterUnmanaged::FBXModel *arg1 = (FBXImporterUnmanaged::FBXModel *) 0 ;
  int arg2 ;
  int arg3 ;
  int result;
  
  arg1 = (FBXImporterUnmanaged::FBXModel *)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  result = (int)(arg1)->GetIndex(arg2,arg3);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_FBXModel_GetColor(void * jarg1, int jarg2) {
  void * jresult ;
  FBXImporterUnmanaged::FBXModel *arg1 = (FBXImporterUnmanaged::FBXModel *) 0 ;
  int arg2 ;
  FBXImporterUnmanaged::FBXColor result;
  
  arg1 = (FBXImporterUnmanaged::FBXModel *)jarg1; 
  arg2 = (int)jarg2; 
  result = (arg1)->GetColor(arg2);
  jresult = new FBXImporterUnmanaged::FBXColor((const FBXImporterUnmanaged::FBXColor &)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_FBXModel_GetUV(void * jarg1, int jarg2, int jarg3) {
  void * jresult ;
  FBXImporterUnmanaged::FBXModel *arg1 = (FBXImporterUnmanaged::FBXModel *) 0 ;
  int arg2 ;
  int arg3 ;
  FBXImporterUnmanaged::FBXVector2 result;
  
  arg1 = (FBXImporterUnmanaged::FBXModel *)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  result = (arg1)->GetUV(arg2,arg3);
  jresult = new FBXImporterUnmanaged::FBXVector2((const FBXImporterUnmanaged::FBXVector2 &)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_FBXModel_GetNormal(void * jarg1, int jarg2) {
  void * jresult ;
  FBXImporterUnmanaged::FBXModel *arg1 = (FBXImporterUnmanaged::FBXModel *) 0 ;
  int arg2 ;
  FBXImporterUnmanaged::FBXVector3 result;
  
  arg1 = (FBXImporterUnmanaged::FBXModel *)jarg1; 
  arg2 = (int)jarg2; 
  result = (arg1)->GetNormal(arg2);
  jresult = new FBXImporterUnmanaged::FBXVector3((const FBXImporterUnmanaged::FBXVector3 &)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_FBXModel_GetTangent(void * jarg1, int jarg2) {
  void * jresult ;
  FBXImporterUnmanaged::FBXModel *arg1 = (FBXImporterUnmanaged::FBXModel *) 0 ;
  int arg2 ;
  FBXImporterUnmanaged::FBXVector4 result;
  
  arg1 = (FBXImporterUnmanaged::FBXModel *)jarg1; 
  arg2 = (int)jarg2; 
  result = (arg1)->GetTangent(arg2);
  jresult = new FBXImporterUnmanaged::FBXVector4((const FBXImporterUnmanaged::FBXVector4 &)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_FBXModel_GetBinormal(void * jarg1, int jarg2) {
  void * jresult ;
  FBXImporterUnmanaged::FBXModel *arg1 = (FBXImporterUnmanaged::FBXModel *) 0 ;
  int arg2 ;
  FBXImporterUnmanaged::FBXVector4 result;
  
  arg1 = (FBXImporterUnmanaged::FBXModel *)jarg1; 
  arg2 = (int)jarg2; 
  result = (arg1)->GetBinormal(arg2);
  jresult = new FBXImporterUnmanaged::FBXVector4((const FBXImporterUnmanaged::FBXVector4 &)result); 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_FBXModel_GetIndexMapCount(void * jarg1, int jarg2) {
  int jresult ;
  FBXImporterUnmanaged::FBXModel *arg1 = (FBXImporterUnmanaged::FBXModel *) 0 ;
  int arg2 ;
  int result;
  
  arg1 = (FBXImporterUnmanaged::FBXModel *)jarg1; 
  arg2 = (int)jarg2; 
  result = (int)(arg1)->GetIndexMapCount(arg2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_FBXModel_GetIndexMap(void * jarg1, int jarg2, int jarg3) {
  int jresult ;
  FBXImporterUnmanaged::FBXModel *arg1 = (FBXImporterUnmanaged::FBXModel *) 0 ;
  int arg2 ;
  int arg3 ;
  int result;
  
  arg1 = (FBXImporterUnmanaged::FBXModel *)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  result = (int)(arg1)->GetIndexMap(arg2,arg3);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_FBXModel_GetMaterial(void * jarg1, int jarg2) {
  void * jresult ;
  FBXImporterUnmanaged::FBXModel *arg1 = (FBXImporterUnmanaged::FBXModel *) 0 ;
  int arg2 ;
  FBXImporterUnmanaged::FBXMaterialPtr result;
  
  arg1 = (FBXImporterUnmanaged::FBXModel *)jarg1; 
  arg2 = (int)jarg2; 
  result = (arg1)->GetMaterial(arg2);
  jresult = new FBXImporterUnmanaged::FBXMaterialPtr((const FBXImporterUnmanaged::FBXMaterialPtr &)result); 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_FBXModel_GetMaterialPolygonCount(void * jarg1, int jarg2) {
  int jresult ;
  FBXImporterUnmanaged::FBXModel *arg1 = (FBXImporterUnmanaged::FBXModel *) 0 ;
  int arg2 ;
  int result;
  
  arg1 = (FBXImporterUnmanaged::FBXModel *)jarg1; 
  arg2 = (int)jarg2; 
  result = (int)(arg1)->GetMaterialPolygonCount(arg2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_FBXModel_GetMaterialPolygon(void * jarg1, int jarg2, int jarg3) {
  int jresult ;
  FBXImporterUnmanaged::FBXModel *arg1 = (FBXImporterUnmanaged::FBXModel *) 0 ;
  int arg2 ;
  int arg3 ;
  int result;
  
  arg1 = (FBXImporterUnmanaged::FBXModel *)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  result = (int)(arg1)->GetMaterialPolygon(arg2,arg3);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_FBXModel_GetVertexCount(void * jarg1) {
  int jresult ;
  FBXImporterUnmanaged::FBXModel *arg1 = (FBXImporterUnmanaged::FBXModel *) 0 ;
  int result;
  
  arg1 = (FBXImporterUnmanaged::FBXModel *)jarg1; 
  result = (int)((FBXImporterUnmanaged::FBXModel const *)arg1)->GetVertexCount();
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_FBXModel_GetIndiceCount(void * jarg1, int jarg2) {
  int jresult ;
  FBXImporterUnmanaged::FBXModel *arg1 = (FBXImporterUnmanaged::FBXModel *) 0 ;
  int arg2 ;
  int result;
  
  arg1 = (FBXImporterUnmanaged::FBXModel *)jarg1; 
  arg2 = (int)jarg2; 
  result = (int)((FBXImporterUnmanaged::FBXModel const *)arg1)->GetIndiceCount(arg2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_FBXModel_GetColorCount(void * jarg1) {
  int jresult ;
  FBXImporterUnmanaged::FBXModel *arg1 = (FBXImporterUnmanaged::FBXModel *) 0 ;
  int result;
  
  arg1 = (FBXImporterUnmanaged::FBXModel *)jarg1; 
  result = (int)((FBXImporterUnmanaged::FBXModel const *)arg1)->GetColorCount();
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_FBXModel_GetUVLayerCount(void * jarg1) {
  int jresult ;
  FBXImporterUnmanaged::FBXModel *arg1 = (FBXImporterUnmanaged::FBXModel *) 0 ;
  int result;
  
  arg1 = (FBXImporterUnmanaged::FBXModel *)jarg1; 
  result = (int)((FBXImporterUnmanaged::FBXModel const *)arg1)->GetUVLayerCount();
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_FBXModel_GetUVCount(void * jarg1, int jarg2) {
  int jresult ;
  FBXImporterUnmanaged::FBXModel *arg1 = (FBXImporterUnmanaged::FBXModel *) 0 ;
  int arg2 ;
  int result;
  
  arg1 = (FBXImporterUnmanaged::FBXModel *)jarg1; 
  arg2 = (int)jarg2; 
  result = (int)((FBXImporterUnmanaged::FBXModel const *)arg1)->GetUVCount(arg2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_FBXModel_GetNormalCount(void * jarg1) {
  int jresult ;
  FBXImporterUnmanaged::FBXModel *arg1 = (FBXImporterUnmanaged::FBXModel *) 0 ;
  int result;
  
  arg1 = (FBXImporterUnmanaged::FBXModel *)jarg1; 
  result = (int)((FBXImporterUnmanaged::FBXModel const *)arg1)->GetNormalCount();
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_FBXModel_GetTangentCount(void * jarg1) {
  int jresult ;
  FBXImporterUnmanaged::FBXModel *arg1 = (FBXImporterUnmanaged::FBXModel *) 0 ;
  int result;
  
  arg1 = (FBXImporterUnmanaged::FBXModel *)jarg1; 
  result = (int)((FBXImporterUnmanaged::FBXModel const *)arg1)->GetTangentCount();
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_FBXModel_GetBinormalCount(void * jarg1) {
  int jresult ;
  FBXImporterUnmanaged::FBXModel *arg1 = (FBXImporterUnmanaged::FBXModel *) 0 ;
  int result;
  
  arg1 = (FBXImporterUnmanaged::FBXModel *)jarg1; 
  result = (int)((FBXImporterUnmanaged::FBXModel const *)arg1)->GetBinormalCount();
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_FBXModel_GetMaterialCount(void * jarg1) {
  int jresult ;
  FBXImporterUnmanaged::FBXModel *arg1 = (FBXImporterUnmanaged::FBXModel *) 0 ;
  int result;
  
  arg1 = (FBXImporterUnmanaged::FBXModel *)jarg1; 
  result = (int)((FBXImporterUnmanaged::FBXModel const *)arg1)->GetMaterialCount();
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_FBXModelPtr__SWIG_0() {
  void * jresult ;
  FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXModel > *result = 0 ;
  
  result = (FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXModel > *)new FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXModel >();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_FBXModelPtr__SWIG_1(void * jarg1) {
  void * jresult ;
  FBXImporterUnmanaged::FBXModel *arg1 = (FBXImporterUnmanaged::FBXModel *) 0 ;
  FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXModel > *result = 0 ;
  
  arg1 = (FBXImporterUnmanaged::FBXModel *)jarg1; 
  result = (FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXModel > *)new FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXModel >(arg1);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_FBXModelPtr__SWIG_2(void * jarg1) {
  void * jresult ;
  FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXModel > *arg1 = 0 ;
  FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXModel > *result = 0 ;
  
  arg1 = (FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXModel > *)jarg1;
  if (!arg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXModel > const & type is null", 0);
    return 0;
  } 
  result = (FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXModel > *)new FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXModel >((FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXModel > const &)*arg1);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_FBXModelPtr(void * jarg1) {
  FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXModel > *arg1 = (FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXModel > *) 0 ;
  
  arg1 = (FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXModel > *)jarg1; 
  delete arg1;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_FBXModelPtr_get(void * jarg1) {
  void * jresult ;
  FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXModel > *arg1 = (FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXModel > *) 0 ;
  FBXImporterUnmanaged::FBXModel *result = 0 ;
  
  arg1 = (FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXModel > *)jarg1; 
  result = (FBXImporterUnmanaged::FBXModel *)((FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXModel > const *)arg1)->get();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_FBXModelPtr___deref__(void * jarg1) {
  void * jresult ;
  FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXModel > *arg1 = (FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXModel > *) 0 ;
  FBXImporterUnmanaged::FBXModel *result = 0 ;
  
  arg1 = (FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXModel > *)jarg1; 
  result = (FBXImporterUnmanaged::FBXModel *)((FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXModel > const *)arg1)->operator ->();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_FBXModelPtr___ref__(void * jarg1) {
  void * jresult ;
  FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXModel > *arg1 = (FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXModel > *) 0 ;
  FBXImporterUnmanaged::FBXModel *result = 0 ;
  
  arg1 = (FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXModel > *)jarg1; 
  result = (FBXImporterUnmanaged::FBXModel *) &((FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXModel > const *)arg1)->operator *();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_FBXModelPtr_IsNull(void * jarg1) {
  unsigned int jresult ;
  FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXModel > *arg1 = (FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXModel > *) 0 ;
  bool result;
  
  arg1 = (FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXModel > *)jarg1; 
  result = (bool)((FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXModel > const *)arg1)->IsNull();
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_FBXModelPtr_Null_set(void * jarg1) {
  FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXModel > *arg1 = (FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXModel > *) 0 ;
  
  arg1 = (FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXModel > *)jarg1; 
  FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXModel >::Null = *arg1;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_FBXModelPtr_Null_get() {
  void * jresult ;
  FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXModel > *result = 0 ;
  
  result = (FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXModel > *)&FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXModel >::Null;
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_FBXModelPtr_Create(void * jarg1) {
  void * jresult ;
  FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXModel > *arg1 = (FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXModel > *) 0 ;
  FBXImporterUnmanaged::FBXModelPtr result;
  
  arg1 = (FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXModel > *)jarg1; 
  result = (*arg1)->Create();
  jresult = new FBXImporterUnmanaged::FBXModelPtr((const FBXImporterUnmanaged::FBXModelPtr &)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_FBXModelPtr_SetName(void * jarg1, char * jarg2) {
  FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXModel > *arg1 = (FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXModel > *) 0 ;
  char *arg2 = (char *) 0 ;
  
  arg1 = (FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXModel > *)jarg1; 
  arg2 = (char *)jarg2; 
  (*arg1)->SetName((char const *)arg2);
}


SWIGEXPORT char * SWIGSTDCALL CSharp_FBXModelPtr_GetName(void * jarg1) {
  char * jresult ;
  FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXModel > *arg1 = (FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXModel > *) 0 ;
  char *result = 0 ;
  
  arg1 = (FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXModel > *)jarg1; 
  result = (char *)(*arg1)->GetName();
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_FBXModelPtr_GetChildCount(void * jarg1) {
  int jresult ;
  FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXModel > *arg1 = (FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXModel > *) 0 ;
  int result;
  
  arg1 = (FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXModel > *)jarg1; 
  result = (int)(*arg1)->GetChildCount();
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_FBXModelPtr_GetChild(void * jarg1, int jarg2) {
  void * jresult ;
  FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXModel > *arg1 = (FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXModel > *) 0 ;
  int arg2 ;
  FBXImporterUnmanaged::FBXModelPtr result;
  
  arg1 = (FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXModel > *)jarg1; 
  arg2 = (int)jarg2; 
  result = (*arg1)->GetChild(arg2);
  jresult = new FBXImporterUnmanaged::FBXModelPtr((const FBXImporterUnmanaged::FBXModelPtr &)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_FBXModelPtr_AddChild(void * jarg1, void * jarg2) {
  FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXModel > *arg1 = (FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXModel > *) 0 ;
  FBXImporterUnmanaged::FBXModelPtr arg2 ;
  FBXImporterUnmanaged::FBXModelPtr *argp2 ;
  
  arg1 = (FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXModel > *)jarg1; 
  argp2 = (FBXImporterUnmanaged::FBXModelPtr *)jarg2; 
  if (!argp2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "Attempt to dereference null FBXImporterUnmanaged::FBXModelPtr", 0);
    return ;
  }
  arg2 = *argp2; 
  (*arg1)->AddChild(arg2);
}


SWIGEXPORT void SWIGSTDCALL CSharp_FBXModelPtr_ResizeVertex(void * jarg1, int jarg2) {
  FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXModel > *arg1 = (FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXModel > *) 0 ;
  int arg2 ;
  
  arg1 = (FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXModel > *)jarg1; 
  arg2 = (int)jarg2; 
  (*arg1)->ResizeVertex(arg2);
}


SWIGEXPORT void SWIGSTDCALL CSharp_FBXModelPtr_ResizeColor(void * jarg1, int jarg2) {
  FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXModel > *arg1 = (FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXModel > *) 0 ;
  int arg2 ;
  
  arg1 = (FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXModel > *)jarg1; 
  arg2 = (int)jarg2; 
  (*arg1)->ResizeColor(arg2);
}


SWIGEXPORT void SWIGSTDCALL CSharp_FBXModelPtr_ResizeUV(void * jarg1, int jarg2, int jarg3) {
  FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXModel > *arg1 = (FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXModel > *) 0 ;
  int arg2 ;
  int arg3 ;
  
  arg1 = (FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXModel > *)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  (*arg1)->ResizeUV(arg2,arg3);
}


SWIGEXPORT void SWIGSTDCALL CSharp_FBXModelPtr_ResizeNormal(void * jarg1, int jarg2) {
  FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXModel > *arg1 = (FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXModel > *) 0 ;
  int arg2 ;
  
  arg1 = (FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXModel > *)jarg1; 
  arg2 = (int)jarg2; 
  (*arg1)->ResizeNormal(arg2);
}


SWIGEXPORT void SWIGSTDCALL CSharp_FBXModelPtr_ResizeTangent(void * jarg1, int jarg2) {
  FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXModel > *arg1 = (FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXModel > *) 0 ;
  int arg2 ;
  
  arg1 = (FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXModel > *)jarg1; 
  arg2 = (int)jarg2; 
  (*arg1)->ResizeTangent(arg2);
}


SWIGEXPORT void SWIGSTDCALL CSharp_FBXModelPtr_ResizeBinormal(void * jarg1, int jarg2) {
  FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXModel > *arg1 = (FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXModel > *) 0 ;
  int arg2 ;
  
  arg1 = (FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXModel > *)jarg1; 
  arg2 = (int)jarg2; 
  (*arg1)->ResizeBinormal(arg2);
}


SWIGEXPORT void SWIGSTDCALL CSharp_FBXModelPtr_ResizeMaterial(void * jarg1, int jarg2) {
  FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXModel > *arg1 = (FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXModel > *) 0 ;
  int arg2 ;
  
  arg1 = (FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXModel > *)jarg1; 
  arg2 = (int)jarg2; 
  (*arg1)->ResizeMaterial(arg2);
}


SWIGEXPORT void SWIGSTDCALL CSharp_FBXModelPtr_SetPivotRotation(void * jarg1, void * jarg2) {
  FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXModel > *arg1 = (FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXModel > *) 0 ;
  FBXImporterUnmanaged::FBXVector3 *arg2 = 0 ;
  
  arg1 = (FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXModel > *)jarg1; 
  arg2 = (FBXImporterUnmanaged::FBXVector3 *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "FBXImporterUnmanaged::FBXVector3 const & type is null", 0);
    return ;
  } 
  (*arg1)->SetPivotRotation((FBXImporterUnmanaged::FBXVector3 const &)*arg2);
}


SWIGEXPORT void SWIGSTDCALL CSharp_FBXModelPtr_SetRotationOffset(void * jarg1, void * jarg2) {
  FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXModel > *arg1 = (FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXModel > *) 0 ;
  FBXImporterUnmanaged::FBXVector3 *arg2 = 0 ;
  
  arg1 = (FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXModel > *)jarg1; 
  arg2 = (FBXImporterUnmanaged::FBXVector3 *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "FBXImporterUnmanaged::FBXVector3 const & type is null", 0);
    return ;
  } 
  (*arg1)->SetRotationOffset((FBXImporterUnmanaged::FBXVector3 const &)*arg2);
}


SWIGEXPORT void SWIGSTDCALL CSharp_FBXModelPtr_SetPreRotation(void * jarg1, void * jarg2) {
  FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXModel > *arg1 = (FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXModel > *) 0 ;
  FBXImporterUnmanaged::FBXVector3 *arg2 = 0 ;
  
  arg1 = (FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXModel > *)jarg1; 
  arg2 = (FBXImporterUnmanaged::FBXVector3 *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "FBXImporterUnmanaged::FBXVector3 const & type is null", 0);
    return ;
  } 
  (*arg1)->SetPreRotation((FBXImporterUnmanaged::FBXVector3 const &)*arg2);
}


SWIGEXPORT void SWIGSTDCALL CSharp_FBXModelPtr_SetPostRotation(void * jarg1, void * jarg2) {
  FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXModel > *arg1 = (FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXModel > *) 0 ;
  FBXImporterUnmanaged::FBXVector3 *arg2 = 0 ;
  
  arg1 = (FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXModel > *)jarg1; 
  arg2 = (FBXImporterUnmanaged::FBXVector3 *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "FBXImporterUnmanaged::FBXVector3 const & type is null", 0);
    return ;
  } 
  (*arg1)->SetPostRotation((FBXImporterUnmanaged::FBXVector3 const &)*arg2);
}


SWIGEXPORT void SWIGSTDCALL CSharp_FBXModelPtr_SetPivotScale(void * jarg1, void * jarg2) {
  FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXModel > *arg1 = (FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXModel > *) 0 ;
  FBXImporterUnmanaged::FBXVector3 *arg2 = 0 ;
  
  arg1 = (FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXModel > *)jarg1; 
  arg2 = (FBXImporterUnmanaged::FBXVector3 *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "FBXImporterUnmanaged::FBXVector3 const & type is null", 0);
    return ;
  } 
  (*arg1)->SetPivotScale((FBXImporterUnmanaged::FBXVector3 const &)*arg2);
}


SWIGEXPORT void SWIGSTDCALL CSharp_FBXModelPtr_SetScalingOffset(void * jarg1, void * jarg2) {
  FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXModel > *arg1 = (FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXModel > *) 0 ;
  FBXImporterUnmanaged::FBXVector3 *arg2 = 0 ;
  
  arg1 = (FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXModel > *)jarg1; 
  arg2 = (FBXImporterUnmanaged::FBXVector3 *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "FBXImporterUnmanaged::FBXVector3 const & type is null", 0);
    return ;
  } 
  (*arg1)->SetScalingOffset((FBXImporterUnmanaged::FBXVector3 const &)*arg2);
}


SWIGEXPORT void SWIGSTDCALL CSharp_FBXModelPtr_SetTranslation(void * jarg1, void * jarg2) {
  FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXModel > *arg1 = (FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXModel > *) 0 ;
  FBXImporterUnmanaged::FBXVector3 *arg2 = 0 ;
  
  arg1 = (FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXModel > *)jarg1; 
  arg2 = (FBXImporterUnmanaged::FBXVector3 *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "FBXImporterUnmanaged::FBXVector3 const & type is null", 0);
    return ;
  } 
  (*arg1)->SetTranslation((FBXImporterUnmanaged::FBXVector3 const &)*arg2);
}


SWIGEXPORT void SWIGSTDCALL CSharp_FBXModelPtr_SetRotation(void * jarg1, void * jarg2) {
  FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXModel > *arg1 = (FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXModel > *) 0 ;
  FBXImporterUnmanaged::FBXVector3 *arg2 = 0 ;
  
  arg1 = (FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXModel > *)jarg1; 
  arg2 = (FBXImporterUnmanaged::FBXVector3 *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "FBXImporterUnmanaged::FBXVector3 const & type is null", 0);
    return ;
  } 
  (*arg1)->SetRotation((FBXImporterUnmanaged::FBXVector3 const &)*arg2);
}


SWIGEXPORT void SWIGSTDCALL CSharp_FBXModelPtr_SetScale(void * jarg1, void * jarg2) {
  FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXModel > *arg1 = (FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXModel > *) 0 ;
  FBXImporterUnmanaged::FBXVector3 *arg2 = 0 ;
  
  arg1 = (FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXModel > *)jarg1; 
  arg2 = (FBXImporterUnmanaged::FBXVector3 *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "FBXImporterUnmanaged::FBXVector3 const & type is null", 0);
    return ;
  } 
  (*arg1)->SetScale((FBXImporterUnmanaged::FBXVector3 const &)*arg2);
}


SWIGEXPORT void SWIGSTDCALL CSharp_FBXModelPtr_SetGeometryTranslation(void * jarg1, void * jarg2) {
  FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXModel > *arg1 = (FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXModel > *) 0 ;
  FBXImporterUnmanaged::FBXVector3 *arg2 = 0 ;
  
  arg1 = (FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXModel > *)jarg1; 
  arg2 = (FBXImporterUnmanaged::FBXVector3 *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "FBXImporterUnmanaged::FBXVector3 const & type is null", 0);
    return ;
  } 
  (*arg1)->SetGeometryTranslation((FBXImporterUnmanaged::FBXVector3 const &)*arg2);
}


SWIGEXPORT void SWIGSTDCALL CSharp_FBXModelPtr_SetGeometryRotation(void * jarg1, void * jarg2) {
  FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXModel > *arg1 = (FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXModel > *) 0 ;
  FBXImporterUnmanaged::FBXVector3 *arg2 = 0 ;
  
  arg1 = (FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXModel > *)jarg1; 
  arg2 = (FBXImporterUnmanaged::FBXVector3 *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "FBXImporterUnmanaged::FBXVector3 const & type is null", 0);
    return ;
  } 
  (*arg1)->SetGeometryRotation((FBXImporterUnmanaged::FBXVector3 const &)*arg2);
}


SWIGEXPORT void SWIGSTDCALL CSharp_FBXModelPtr_SetGeometryScale(void * jarg1, void * jarg2) {
  FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXModel > *arg1 = (FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXModel > *) 0 ;
  FBXImporterUnmanaged::FBXVector3 *arg2 = 0 ;
  
  arg1 = (FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXModel > *)jarg1; 
  arg2 = (FBXImporterUnmanaged::FBXVector3 *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "FBXImporterUnmanaged::FBXVector3 const & type is null", 0);
    return ;
  } 
  (*arg1)->SetGeometryScale((FBXImporterUnmanaged::FBXVector3 const &)*arg2);
}


SWIGEXPORT void SWIGSTDCALL CSharp_FBXModelPtr_AddVertex(void * jarg1, void * jarg2) {
  FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXModel > *arg1 = (FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXModel > *) 0 ;
  FBXImporterUnmanaged::FBXVector3 *arg2 = 0 ;
  
  arg1 = (FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXModel > *)jarg1; 
  arg2 = (FBXImporterUnmanaged::FBXVector3 *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "FBXImporterUnmanaged::FBXVector3 const & type is null", 0);
    return ;
  } 
  (*arg1)->AddVertex((FBXImporterUnmanaged::FBXVector3 const &)*arg2);
}


SWIGEXPORT void SWIGSTDCALL CSharp_FBXModelPtr_AddIndex(void * jarg1, int jarg2, int jarg3) {
  FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXModel > *arg1 = (FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXModel > *) 0 ;
  int arg2 ;
  int arg3 ;
  
  arg1 = (FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXModel > *)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  (*arg1)->AddIndex(arg2,arg3);
}


SWIGEXPORT void SWIGSTDCALL CSharp_FBXModelPtr_AddColor(void * jarg1, void * jarg2) {
  FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXModel > *arg1 = (FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXModel > *) 0 ;
  FBXImporterUnmanaged::FBXColor *arg2 = 0 ;
  
  arg1 = (FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXModel > *)jarg1; 
  arg2 = (FBXImporterUnmanaged::FBXColor *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "FBXImporterUnmanaged::FBXColor const & type is null", 0);
    return ;
  } 
  (*arg1)->AddColor((FBXImporterUnmanaged::FBXColor const &)*arg2);
}


SWIGEXPORT void SWIGSTDCALL CSharp_FBXModelPtr_AddUV(void * jarg1, int jarg2, void * jarg3) {
  FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXModel > *arg1 = (FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXModel > *) 0 ;
  int arg2 ;
  FBXImporterUnmanaged::FBXVector2 *arg3 = 0 ;
  
  arg1 = (FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXModel > *)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (FBXImporterUnmanaged::FBXVector2 *)jarg3;
  if (!arg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "FBXImporterUnmanaged::FBXVector2 const & type is null", 0);
    return ;
  } 
  (*arg1)->AddUV(arg2,(FBXImporterUnmanaged::FBXVector2 const &)*arg3);
}


SWIGEXPORT void SWIGSTDCALL CSharp_FBXModelPtr_AddNormal(void * jarg1, void * jarg2) {
  FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXModel > *arg1 = (FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXModel > *) 0 ;
  FBXImporterUnmanaged::FBXVector3 *arg2 = 0 ;
  
  arg1 = (FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXModel > *)jarg1; 
  arg2 = (FBXImporterUnmanaged::FBXVector3 *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "FBXImporterUnmanaged::FBXVector3 const & type is null", 0);
    return ;
  } 
  (*arg1)->AddNormal((FBXImporterUnmanaged::FBXVector3 const &)*arg2);
}


SWIGEXPORT void SWIGSTDCALL CSharp_FBXModelPtr_AddTangent(void * jarg1, void * jarg2) {
  FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXModel > *arg1 = (FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXModel > *) 0 ;
  FBXImporterUnmanaged::FBXVector4 *arg2 = 0 ;
  
  arg1 = (FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXModel > *)jarg1; 
  arg2 = (FBXImporterUnmanaged::FBXVector4 *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "FBXImporterUnmanaged::FBXVector4 const & type is null", 0);
    return ;
  } 
  (*arg1)->AddTangent((FBXImporterUnmanaged::FBXVector4 const &)*arg2);
}


SWIGEXPORT void SWIGSTDCALL CSharp_FBXModelPtr_AddBinormal(void * jarg1, void * jarg2) {
  FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXModel > *arg1 = (FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXModel > *) 0 ;
  FBXImporterUnmanaged::FBXVector4 *arg2 = 0 ;
  
  arg1 = (FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXModel > *)jarg1; 
  arg2 = (FBXImporterUnmanaged::FBXVector4 *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "FBXImporterUnmanaged::FBXVector4 const & type is null", 0);
    return ;
  } 
  (*arg1)->AddBinormal((FBXImporterUnmanaged::FBXVector4 const &)*arg2);
}


SWIGEXPORT void SWIGSTDCALL CSharp_FBXModelPtr_AddMaterial(void * jarg1, void * jarg2) {
  FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXModel > *arg1 = (FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXModel > *) 0 ;
  FBXImporterUnmanaged::FBXMaterialPtr *arg2 = 0 ;
  
  arg1 = (FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXModel > *)jarg1; 
  arg2 = (FBXImporterUnmanaged::FBXMaterialPtr *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "FBXImporterUnmanaged::FBXMaterialPtr const & type is null", 0);
    return ;
  } 
  (*arg1)->AddMaterial((FBXImporterUnmanaged::FBXMaterialPtr const &)*arg2);
}


SWIGEXPORT void SWIGSTDCALL CSharp_FBXModelPtr_SetVertex(void * jarg1, int jarg2, void * jarg3) {
  FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXModel > *arg1 = (FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXModel > *) 0 ;
  int arg2 ;
  FBXImporterUnmanaged::FBXVector3 *arg3 = 0 ;
  
  arg1 = (FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXModel > *)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (FBXImporterUnmanaged::FBXVector3 *)jarg3;
  if (!arg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "FBXImporterUnmanaged::FBXVector3 const & type is null", 0);
    return ;
  } 
  (*arg1)->SetVertex(arg2,(FBXImporterUnmanaged::FBXVector3 const &)*arg3);
}


SWIGEXPORT void SWIGSTDCALL CSharp_FBXModelPtr_SetColor(void * jarg1, int jarg2, void * jarg3) {
  FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXModel > *arg1 = (FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXModel > *) 0 ;
  int arg2 ;
  FBXImporterUnmanaged::FBXColor *arg3 = 0 ;
  
  arg1 = (FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXModel > *)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (FBXImporterUnmanaged::FBXColor *)jarg3;
  if (!arg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "FBXImporterUnmanaged::FBXColor const & type is null", 0);
    return ;
  } 
  (*arg1)->SetColor(arg2,(FBXImporterUnmanaged::FBXColor const &)*arg3);
}


SWIGEXPORT void SWIGSTDCALL CSharp_FBXModelPtr_SetUVLayer(void * jarg1, int jarg2) {
  FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXModel > *arg1 = (FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXModel > *) 0 ;
  int arg2 ;
  
  arg1 = (FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXModel > *)jarg1; 
  arg2 = (int)jarg2; 
  (*arg1)->SetUVLayer(arg2);
}


SWIGEXPORT void SWIGSTDCALL CSharp_FBXModelPtr_SetUV(void * jarg1, int jarg2, int jarg3, void * jarg4) {
  FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXModel > *arg1 = (FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXModel > *) 0 ;
  int arg2 ;
  int arg3 ;
  FBXImporterUnmanaged::FBXVector2 arg4 ;
  FBXImporterUnmanaged::FBXVector2 const *argp4 ;
  
  arg1 = (FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXModel > *)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  argp4 = (FBXImporterUnmanaged::FBXVector2 *)jarg4; 
  if (!argp4) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "Attempt to dereference null FBXImporterUnmanaged::FBXVector2 const", 0);
    return ;
  }
  arg4 = *argp4; 
  (*arg1)->SetUV(arg2,arg3,arg4);
}


SWIGEXPORT void SWIGSTDCALL CSharp_FBXModelPtr_SetNormal(void * jarg1, int jarg2, void * jarg3) {
  FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXModel > *arg1 = (FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXModel > *) 0 ;
  int arg2 ;
  FBXImporterUnmanaged::FBXVector3 *arg3 = 0 ;
  
  arg1 = (FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXModel > *)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (FBXImporterUnmanaged::FBXVector3 *)jarg3;
  if (!arg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "FBXImporterUnmanaged::FBXVector3 const & type is null", 0);
    return ;
  } 
  (*arg1)->SetNormal(arg2,(FBXImporterUnmanaged::FBXVector3 const &)*arg3);
}


SWIGEXPORT void SWIGSTDCALL CSharp_FBXModelPtr_SetTangent(void * jarg1, int jarg2, void * jarg3) {
  FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXModel > *arg1 = (FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXModel > *) 0 ;
  int arg2 ;
  FBXImporterUnmanaged::FBXVector4 *arg3 = 0 ;
  
  arg1 = (FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXModel > *)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (FBXImporterUnmanaged::FBXVector4 *)jarg3;
  if (!arg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "FBXImporterUnmanaged::FBXVector4 const & type is null", 0);
    return ;
  } 
  (*arg1)->SetTangent(arg2,(FBXImporterUnmanaged::FBXVector4 const &)*arg3);
}


SWIGEXPORT void SWIGSTDCALL CSharp_FBXModelPtr_SetBinormal(void * jarg1, int jarg2, void * jarg3) {
  FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXModel > *arg1 = (FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXModel > *) 0 ;
  int arg2 ;
  FBXImporterUnmanaged::FBXVector4 *arg3 = 0 ;
  
  arg1 = (FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXModel > *)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (FBXImporterUnmanaged::FBXVector4 *)jarg3;
  if (!arg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "FBXImporterUnmanaged::FBXVector4 const & type is null", 0);
    return ;
  } 
  (*arg1)->SetBinormal(arg2,(FBXImporterUnmanaged::FBXVector4 const &)*arg3);
}


SWIGEXPORT void SWIGSTDCALL CSharp_FBXModelPtr_SetIndexMap(void * jarg1, int jarg2, int jarg3) {
  FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXModel > *arg1 = (FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXModel > *) 0 ;
  int arg2 ;
  int arg3 ;
  
  arg1 = (FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXModel > *)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  (*arg1)->SetIndexMap(arg2,arg3);
}


SWIGEXPORT void SWIGSTDCALL CSharp_FBXModelPtr_SetMaterial(void * jarg1, int jarg2, void * jarg3) {
  FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXModel > *arg1 = (FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXModel > *) 0 ;
  int arg2 ;
  FBXImporterUnmanaged::FBXMaterialPtr arg3 ;
  FBXImporterUnmanaged::FBXMaterialPtr *argp3 ;
  
  arg1 = (FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXModel > *)jarg1; 
  arg2 = (int)jarg2; 
  argp3 = (FBXImporterUnmanaged::FBXMaterialPtr *)jarg3; 
  if (!argp3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "Attempt to dereference null FBXImporterUnmanaged::FBXMaterialPtr", 0);
    return ;
  }
  arg3 = *argp3; 
  (*arg1)->SetMaterial(arg2,arg3);
}


SWIGEXPORT void SWIGSTDCALL CSharp_FBXModelPtr_AddMaterialPolygons(void * jarg1, int jarg2, int jarg3) {
  FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXModel > *arg1 = (FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXModel > *) 0 ;
  int arg2 ;
  int arg3 ;
  
  arg1 = (FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXModel > *)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  (*arg1)->AddMaterialPolygons(arg2,arg3);
}


SWIGEXPORT void * SWIGSTDCALL CSharp_FBXModelPtr_GetPivotRotation(void * jarg1) {
  void * jresult ;
  FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXModel > *arg1 = (FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXModel > *) 0 ;
  FBXImporterUnmanaged::FBXVector3 result;
  
  arg1 = (FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXModel > *)jarg1; 
  result = (*arg1)->GetPivotRotation();
  jresult = new FBXImporterUnmanaged::FBXVector3((const FBXImporterUnmanaged::FBXVector3 &)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_FBXModelPtr_GetRotationOffset(void * jarg1) {
  void * jresult ;
  FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXModel > *arg1 = (FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXModel > *) 0 ;
  FBXImporterUnmanaged::FBXVector3 result;
  
  arg1 = (FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXModel > *)jarg1; 
  result = (*arg1)->GetRotationOffset();
  jresult = new FBXImporterUnmanaged::FBXVector3((const FBXImporterUnmanaged::FBXVector3 &)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_FBXModelPtr_GetPreRotation(void * jarg1) {
  void * jresult ;
  FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXModel > *arg1 = (FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXModel > *) 0 ;
  FBXImporterUnmanaged::FBXVector3 result;
  
  arg1 = (FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXModel > *)jarg1; 
  result = (*arg1)->GetPreRotation();
  jresult = new FBXImporterUnmanaged::FBXVector3((const FBXImporterUnmanaged::FBXVector3 &)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_FBXModelPtr_GetPostRotation(void * jarg1) {
  void * jresult ;
  FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXModel > *arg1 = (FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXModel > *) 0 ;
  FBXImporterUnmanaged::FBXVector3 result;
  
  arg1 = (FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXModel > *)jarg1; 
  result = (*arg1)->GetPostRotation();
  jresult = new FBXImporterUnmanaged::FBXVector3((const FBXImporterUnmanaged::FBXVector3 &)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_FBXModelPtr_GetPivotScale(void * jarg1) {
  void * jresult ;
  FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXModel > *arg1 = (FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXModel > *) 0 ;
  FBXImporterUnmanaged::FBXVector3 result;
  
  arg1 = (FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXModel > *)jarg1; 
  result = (*arg1)->GetPivotScale();
  jresult = new FBXImporterUnmanaged::FBXVector3((const FBXImporterUnmanaged::FBXVector3 &)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_FBXModelPtr_GetScalingOffset(void * jarg1) {
  void * jresult ;
  FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXModel > *arg1 = (FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXModel > *) 0 ;
  FBXImporterUnmanaged::FBXVector3 result;
  
  arg1 = (FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXModel > *)jarg1; 
  result = (*arg1)->GetScalingOffset();
  jresult = new FBXImporterUnmanaged::FBXVector3((const FBXImporterUnmanaged::FBXVector3 &)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_FBXModelPtr_GetTranslation(void * jarg1) {
  void * jresult ;
  FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXModel > *arg1 = (FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXModel > *) 0 ;
  FBXImporterUnmanaged::FBXVector3 result;
  
  arg1 = (FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXModel > *)jarg1; 
  result = (*arg1)->GetTranslation();
  jresult = new FBXImporterUnmanaged::FBXVector3((const FBXImporterUnmanaged::FBXVector3 &)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_FBXModelPtr_GetRotation(void * jarg1) {
  void * jresult ;
  FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXModel > *arg1 = (FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXModel > *) 0 ;
  FBXImporterUnmanaged::FBXVector3 result;
  
  arg1 = (FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXModel > *)jarg1; 
  result = (*arg1)->GetRotation();
  jresult = new FBXImporterUnmanaged::FBXVector3((const FBXImporterUnmanaged::FBXVector3 &)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_FBXModelPtr_GetScale(void * jarg1) {
  void * jresult ;
  FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXModel > *arg1 = (FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXModel > *) 0 ;
  FBXImporterUnmanaged::FBXVector3 result;
  
  arg1 = (FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXModel > *)jarg1; 
  result = (*arg1)->GetScale();
  jresult = new FBXImporterUnmanaged::FBXVector3((const FBXImporterUnmanaged::FBXVector3 &)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_FBXModelPtr_GetGeometryTranslation(void * jarg1) {
  void * jresult ;
  FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXModel > *arg1 = (FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXModel > *) 0 ;
  FBXImporterUnmanaged::FBXVector3 result;
  
  arg1 = (FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXModel > *)jarg1; 
  result = (*arg1)->GetGeometryTranslation();
  jresult = new FBXImporterUnmanaged::FBXVector3((const FBXImporterUnmanaged::FBXVector3 &)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_FBXModelPtr_GetGeometryRotation(void * jarg1) {
  void * jresult ;
  FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXModel > *arg1 = (FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXModel > *) 0 ;
  FBXImporterUnmanaged::FBXVector3 result;
  
  arg1 = (FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXModel > *)jarg1; 
  result = (*arg1)->GetGeometryRotation();
  jresult = new FBXImporterUnmanaged::FBXVector3((const FBXImporterUnmanaged::FBXVector3 &)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_FBXModelPtr_GetGeometryScale(void * jarg1) {
  void * jresult ;
  FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXModel > *arg1 = (FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXModel > *) 0 ;
  FBXImporterUnmanaged::FBXVector3 result;
  
  arg1 = (FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXModel > *)jarg1; 
  result = (*arg1)->GetGeometryScale();
  jresult = new FBXImporterUnmanaged::FBXVector3((const FBXImporterUnmanaged::FBXVector3 &)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_FBXModelPtr_GetVertex(void * jarg1, int jarg2) {
  void * jresult ;
  FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXModel > *arg1 = (FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXModel > *) 0 ;
  int arg2 ;
  FBXImporterUnmanaged::FBXVector3 result;
  
  arg1 = (FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXModel > *)jarg1; 
  arg2 = (int)jarg2; 
  result = (*arg1)->GetVertex(arg2);
  jresult = new FBXImporterUnmanaged::FBXVector3((const FBXImporterUnmanaged::FBXVector3 &)result); 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_FBXModelPtr_GetIndex(void * jarg1, int jarg2, int jarg3) {
  int jresult ;
  FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXModel > *arg1 = (FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXModel > *) 0 ;
  int arg2 ;
  int arg3 ;
  int result;
  
  arg1 = (FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXModel > *)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  result = (int)(*arg1)->GetIndex(arg2,arg3);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_FBXModelPtr_GetColor(void * jarg1, int jarg2) {
  void * jresult ;
  FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXModel > *arg1 = (FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXModel > *) 0 ;
  int arg2 ;
  FBXImporterUnmanaged::FBXColor result;
  
  arg1 = (FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXModel > *)jarg1; 
  arg2 = (int)jarg2; 
  result = (*arg1)->GetColor(arg2);
  jresult = new FBXImporterUnmanaged::FBXColor((const FBXImporterUnmanaged::FBXColor &)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_FBXModelPtr_GetUV(void * jarg1, int jarg2, int jarg3) {
  void * jresult ;
  FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXModel > *arg1 = (FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXModel > *) 0 ;
  int arg2 ;
  int arg3 ;
  FBXImporterUnmanaged::FBXVector2 result;
  
  arg1 = (FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXModel > *)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  result = (*arg1)->GetUV(arg2,arg3);
  jresult = new FBXImporterUnmanaged::FBXVector2((const FBXImporterUnmanaged::FBXVector2 &)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_FBXModelPtr_GetNormal(void * jarg1, int jarg2) {
  void * jresult ;
  FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXModel > *arg1 = (FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXModel > *) 0 ;
  int arg2 ;
  FBXImporterUnmanaged::FBXVector3 result;
  
  arg1 = (FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXModel > *)jarg1; 
  arg2 = (int)jarg2; 
  result = (*arg1)->GetNormal(arg2);
  jresult = new FBXImporterUnmanaged::FBXVector3((const FBXImporterUnmanaged::FBXVector3 &)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_FBXModelPtr_GetTangent(void * jarg1, int jarg2) {
  void * jresult ;
  FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXModel > *arg1 = (FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXModel > *) 0 ;
  int arg2 ;
  FBXImporterUnmanaged::FBXVector4 result;
  
  arg1 = (FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXModel > *)jarg1; 
  arg2 = (int)jarg2; 
  result = (*arg1)->GetTangent(arg2);
  jresult = new FBXImporterUnmanaged::FBXVector4((const FBXImporterUnmanaged::FBXVector4 &)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_FBXModelPtr_GetBinormal(void * jarg1, int jarg2) {
  void * jresult ;
  FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXModel > *arg1 = (FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXModel > *) 0 ;
  int arg2 ;
  FBXImporterUnmanaged::FBXVector4 result;
  
  arg1 = (FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXModel > *)jarg1; 
  arg2 = (int)jarg2; 
  result = (*arg1)->GetBinormal(arg2);
  jresult = new FBXImporterUnmanaged::FBXVector4((const FBXImporterUnmanaged::FBXVector4 &)result); 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_FBXModelPtr_GetIndexMapCount(void * jarg1, int jarg2) {
  int jresult ;
  FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXModel > *arg1 = (FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXModel > *) 0 ;
  int arg2 ;
  int result;
  
  arg1 = (FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXModel > *)jarg1; 
  arg2 = (int)jarg2; 
  result = (int)(*arg1)->GetIndexMapCount(arg2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_FBXModelPtr_GetIndexMap(void * jarg1, int jarg2, int jarg3) {
  int jresult ;
  FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXModel > *arg1 = (FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXModel > *) 0 ;
  int arg2 ;
  int arg3 ;
  int result;
  
  arg1 = (FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXModel > *)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  result = (int)(*arg1)->GetIndexMap(arg2,arg3);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_FBXModelPtr_GetMaterial(void * jarg1, int jarg2) {
  void * jresult ;
  FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXModel > *arg1 = (FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXModel > *) 0 ;
  int arg2 ;
  FBXImporterUnmanaged::FBXMaterialPtr result;
  
  arg1 = (FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXModel > *)jarg1; 
  arg2 = (int)jarg2; 
  result = (*arg1)->GetMaterial(arg2);
  jresult = new FBXImporterUnmanaged::FBXMaterialPtr((const FBXImporterUnmanaged::FBXMaterialPtr &)result); 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_FBXModelPtr_GetMaterialPolygonCount(void * jarg1, int jarg2) {
  int jresult ;
  FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXModel > *arg1 = (FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXModel > *) 0 ;
  int arg2 ;
  int result;
  
  arg1 = (FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXModel > *)jarg1; 
  arg2 = (int)jarg2; 
  result = (int)(*arg1)->GetMaterialPolygonCount(arg2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_FBXModelPtr_GetMaterialPolygon(void * jarg1, int jarg2, int jarg3) {
  int jresult ;
  FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXModel > *arg1 = (FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXModel > *) 0 ;
  int arg2 ;
  int arg3 ;
  int result;
  
  arg1 = (FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXModel > *)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  result = (int)(*arg1)->GetMaterialPolygon(arg2,arg3);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_FBXModelPtr_GetVertexCount(void * jarg1) {
  int jresult ;
  FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXModel > *arg1 = (FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXModel > *) 0 ;
  int result;
  
  arg1 = (FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXModel > *)jarg1; 
  result = (int)(*arg1)->GetVertexCount();
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_FBXModelPtr_GetIndiceCount(void * jarg1, int jarg2) {
  int jresult ;
  FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXModel > *arg1 = (FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXModel > *) 0 ;
  int arg2 ;
  int result;
  
  arg1 = (FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXModel > *)jarg1; 
  arg2 = (int)jarg2; 
  result = (int)(*arg1)->GetIndiceCount(arg2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_FBXModelPtr_GetColorCount(void * jarg1) {
  int jresult ;
  FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXModel > *arg1 = (FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXModel > *) 0 ;
  int result;
  
  arg1 = (FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXModel > *)jarg1; 
  result = (int)(*arg1)->GetColorCount();
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_FBXModelPtr_GetUVLayerCount(void * jarg1) {
  int jresult ;
  FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXModel > *arg1 = (FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXModel > *) 0 ;
  int result;
  
  arg1 = (FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXModel > *)jarg1; 
  result = (int)(*arg1)->GetUVLayerCount();
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_FBXModelPtr_GetUVCount(void * jarg1, int jarg2) {
  int jresult ;
  FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXModel > *arg1 = (FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXModel > *) 0 ;
  int arg2 ;
  int result;
  
  arg1 = (FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXModel > *)jarg1; 
  arg2 = (int)jarg2; 
  result = (int)(*arg1)->GetUVCount(arg2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_FBXModelPtr_GetNormalCount(void * jarg1) {
  int jresult ;
  FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXModel > *arg1 = (FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXModel > *) 0 ;
  int result;
  
  arg1 = (FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXModel > *)jarg1; 
  result = (int)(*arg1)->GetNormalCount();
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_FBXModelPtr_GetTangentCount(void * jarg1) {
  int jresult ;
  FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXModel > *arg1 = (FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXModel > *) 0 ;
  int result;
  
  arg1 = (FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXModel > *)jarg1; 
  result = (int)(*arg1)->GetTangentCount();
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_FBXModelPtr_GetBinormalCount(void * jarg1) {
  int jresult ;
  FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXModel > *arg1 = (FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXModel > *) 0 ;
  int result;
  
  arg1 = (FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXModel > *)jarg1; 
  result = (int)(*arg1)->GetBinormalCount();
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_FBXModelPtr_GetMaterialCount(void * jarg1) {
  int jresult ;
  FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXModel > *arg1 = (FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXModel > *) 0 ;
  int result;
  
  arg1 = (FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXModel > *)jarg1; 
  result = (int)(*arg1)->GetMaterialCount();
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_FBXModelPtr_addReference(void * jarg1) {
  FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXModel > *arg1 = (FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXModel > *) 0 ;
  
  arg1 = (FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXModel > *)jarg1; 
  (*arg1)->addReference();
}


SWIGEXPORT void SWIGSTDCALL CSharp_FBXModelPtr_removeReference(void * jarg1) {
  FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXModel > *arg1 = (FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXModel > *) 0 ;
  
  arg1 = (FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXModel > *)jarg1; 
  (*arg1)->removeReference();
}


SWIGEXPORT int SWIGSTDCALL CSharp_FBXModelPtr_getReferenceCount(void * jarg1) {
  int jresult ;
  FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXModel > *arg1 = (FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXModel > *) 0 ;
  int result;
  
  arg1 = (FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXModel > *)jarg1; 
  result = (int)(*arg1)->getReferenceCount();
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_FBXGlobalSettings_unitScaleFactor_set(void * jarg1, float jarg2) {
  FBXImporterUnmanaged::FBXGlobalSettings *arg1 = (FBXImporterUnmanaged::FBXGlobalSettings *) 0 ;
  float arg2 ;
  
  arg1 = (FBXImporterUnmanaged::FBXGlobalSettings *)jarg1; 
  arg2 = (float)jarg2; 
  if (arg1) (arg1)->unitScaleFactor = arg2;
}


SWIGEXPORT float SWIGSTDCALL CSharp_FBXGlobalSettings_unitScaleFactor_get(void * jarg1) {
  float jresult ;
  FBXImporterUnmanaged::FBXGlobalSettings *arg1 = (FBXImporterUnmanaged::FBXGlobalSettings *) 0 ;
  float result;
  
  arg1 = (FBXImporterUnmanaged::FBXGlobalSettings *)jarg1; 
  result = (float) ((arg1)->unitScaleFactor);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_FBXGlobalSettings_originalScaleFactor_set(void * jarg1, float jarg2) {
  FBXImporterUnmanaged::FBXGlobalSettings *arg1 = (FBXImporterUnmanaged::FBXGlobalSettings *) 0 ;
  float arg2 ;
  
  arg1 = (FBXImporterUnmanaged::FBXGlobalSettings *)jarg1; 
  arg2 = (float)jarg2; 
  if (arg1) (arg1)->originalScaleFactor = arg2;
}


SWIGEXPORT float SWIGSTDCALL CSharp_FBXGlobalSettings_originalScaleFactor_get(void * jarg1) {
  float jresult ;
  FBXImporterUnmanaged::FBXGlobalSettings *arg1 = (FBXImporterUnmanaged::FBXGlobalSettings *) 0 ;
  float result;
  
  arg1 = (FBXImporterUnmanaged::FBXGlobalSettings *)jarg1; 
  result = (float) ((arg1)->originalScaleFactor);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_FBXGlobalSettings_upVector_set(void * jarg1, int jarg2) {
  FBXImporterUnmanaged::FBXGlobalSettings *arg1 = (FBXImporterUnmanaged::FBXGlobalSettings *) 0 ;
  FBXImporterUnmanaged::FBXGlobalSettings::UpVector arg2 ;
  
  arg1 = (FBXImporterUnmanaged::FBXGlobalSettings *)jarg1; 
  arg2 = (FBXImporterUnmanaged::FBXGlobalSettings::UpVector)jarg2; 
  if (arg1) (arg1)->upVector = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_FBXGlobalSettings_upVector_get(void * jarg1) {
  int jresult ;
  FBXImporterUnmanaged::FBXGlobalSettings *arg1 = (FBXImporterUnmanaged::FBXGlobalSettings *) 0 ;
  FBXImporterUnmanaged::FBXGlobalSettings::UpVector result;
  
  arg1 = (FBXImporterUnmanaged::FBXGlobalSettings *)jarg1; 
  result = (FBXImporterUnmanaged::FBXGlobalSettings::UpVector) ((arg1)->upVector);
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_FBXGlobalSettings_originalUpVector_set(void * jarg1, int jarg2) {
  FBXImporterUnmanaged::FBXGlobalSettings *arg1 = (FBXImporterUnmanaged::FBXGlobalSettings *) 0 ;
  FBXImporterUnmanaged::FBXGlobalSettings::UpVector arg2 ;
  
  arg1 = (FBXImporterUnmanaged::FBXGlobalSettings *)jarg1; 
  arg2 = (FBXImporterUnmanaged::FBXGlobalSettings::UpVector)jarg2; 
  if (arg1) (arg1)->originalUpVector = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_FBXGlobalSettings_originalUpVector_get(void * jarg1) {
  int jresult ;
  FBXImporterUnmanaged::FBXGlobalSettings *arg1 = (FBXImporterUnmanaged::FBXGlobalSettings *) 0 ;
  FBXImporterUnmanaged::FBXGlobalSettings::UpVector result;
  
  arg1 = (FBXImporterUnmanaged::FBXGlobalSettings *)jarg1; 
  result = (FBXImporterUnmanaged::FBXGlobalSettings::UpVector) ((arg1)->originalUpVector);
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_FBXGlobalSettings_frontVector_set(void * jarg1, int jarg2) {
  FBXImporterUnmanaged::FBXGlobalSettings *arg1 = (FBXImporterUnmanaged::FBXGlobalSettings *) 0 ;
  FBXImporterUnmanaged::FBXGlobalSettings::FrontVector arg2 ;
  
  arg1 = (FBXImporterUnmanaged::FBXGlobalSettings *)jarg1; 
  arg2 = (FBXImporterUnmanaged::FBXGlobalSettings::FrontVector)jarg2; 
  if (arg1) (arg1)->frontVector = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_FBXGlobalSettings_frontVector_get(void * jarg1) {
  int jresult ;
  FBXImporterUnmanaged::FBXGlobalSettings *arg1 = (FBXImporterUnmanaged::FBXGlobalSettings *) 0 ;
  FBXImporterUnmanaged::FBXGlobalSettings::FrontVector result;
  
  arg1 = (FBXImporterUnmanaged::FBXGlobalSettings *)jarg1; 
  result = (FBXImporterUnmanaged::FBXGlobalSettings::FrontVector) ((arg1)->frontVector);
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_FBXGlobalSettings_coordinateSystem_set(void * jarg1, int jarg2) {
  FBXImporterUnmanaged::FBXGlobalSettings *arg1 = (FBXImporterUnmanaged::FBXGlobalSettings *) 0 ;
  FBXImporterUnmanaged::FBXGlobalSettings::CoordinateSystem arg2 ;
  
  arg1 = (FBXImporterUnmanaged::FBXGlobalSettings *)jarg1; 
  arg2 = (FBXImporterUnmanaged::FBXGlobalSettings::CoordinateSystem)jarg2; 
  if (arg1) (arg1)->coordinateSystem = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_FBXGlobalSettings_coordinateSystem_get(void * jarg1) {
  int jresult ;
  FBXImporterUnmanaged::FBXGlobalSettings *arg1 = (FBXImporterUnmanaged::FBXGlobalSettings *) 0 ;
  FBXImporterUnmanaged::FBXGlobalSettings::CoordinateSystem result;
  
  arg1 = (FBXImporterUnmanaged::FBXGlobalSettings *)jarg1; 
  result = (FBXImporterUnmanaged::FBXGlobalSettings::CoordinateSystem) ((arg1)->coordinateSystem);
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_FBXGlobalSettings_Create() {
  void * jresult ;
  FBXImporterUnmanaged::FBXGlobalSettingsPtr result;
  
  result = FBXImporterUnmanaged::FBXGlobalSettings::Create();
  jresult = new FBXImporterUnmanaged::FBXGlobalSettingsPtr((const FBXImporterUnmanaged::FBXGlobalSettingsPtr &)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_FBXGlobalSettings() {
  void * jresult ;
  FBXImporterUnmanaged::FBXGlobalSettings *result = 0 ;
  
  result = (FBXImporterUnmanaged::FBXGlobalSettings *)new FBXImporterUnmanaged::FBXGlobalSettings();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_FBXGlobalSettings(void * jarg1) {
  FBXImporterUnmanaged::FBXGlobalSettings *arg1 = (FBXImporterUnmanaged::FBXGlobalSettings *) 0 ;
  
  arg1 = (FBXImporterUnmanaged::FBXGlobalSettings *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_FBXGlobalSettings_SetUnitScaleFactor(void * jarg1, float jarg2) {
  FBXImporterUnmanaged::FBXGlobalSettings *arg1 = (FBXImporterUnmanaged::FBXGlobalSettings *) 0 ;
  float arg2 ;
  
  arg1 = (FBXImporterUnmanaged::FBXGlobalSettings *)jarg1; 
  arg2 = (float)jarg2; 
  (arg1)->SetUnitScaleFactor(arg2);
}


SWIGEXPORT void SWIGSTDCALL CSharp_FBXGlobalSettings_SetOriginalUnitScaleFactor(void * jarg1, float jarg2) {
  FBXImporterUnmanaged::FBXGlobalSettings *arg1 = (FBXImporterUnmanaged::FBXGlobalSettings *) 0 ;
  float arg2 ;
  
  arg1 = (FBXImporterUnmanaged::FBXGlobalSettings *)jarg1; 
  arg2 = (float)jarg2; 
  (arg1)->SetOriginalUnitScaleFactor(arg2);
}


SWIGEXPORT void SWIGSTDCALL CSharp_FBXGlobalSettings_SetUpVector(void * jarg1, int jarg2) {
  FBXImporterUnmanaged::FBXGlobalSettings *arg1 = (FBXImporterUnmanaged::FBXGlobalSettings *) 0 ;
  FBXImporterUnmanaged::FBXGlobalSettings::UpVector arg2 ;
  
  arg1 = (FBXImporterUnmanaged::FBXGlobalSettings *)jarg1; 
  arg2 = (FBXImporterUnmanaged::FBXGlobalSettings::UpVector)jarg2; 
  (arg1)->SetUpVector(arg2);
}


SWIGEXPORT void SWIGSTDCALL CSharp_FBXGlobalSettings_SetOriginalUpVector(void * jarg1, int jarg2) {
  FBXImporterUnmanaged::FBXGlobalSettings *arg1 = (FBXImporterUnmanaged::FBXGlobalSettings *) 0 ;
  FBXImporterUnmanaged::FBXGlobalSettings::UpVector arg2 ;
  
  arg1 = (FBXImporterUnmanaged::FBXGlobalSettings *)jarg1; 
  arg2 = (FBXImporterUnmanaged::FBXGlobalSettings::UpVector)jarg2; 
  (arg1)->SetOriginalUpVector(arg2);
}


SWIGEXPORT void SWIGSTDCALL CSharp_FBXGlobalSettings_SetFrontVector(void * jarg1, int jarg2) {
  FBXImporterUnmanaged::FBXGlobalSettings *arg1 = (FBXImporterUnmanaged::FBXGlobalSettings *) 0 ;
  FBXImporterUnmanaged::FBXGlobalSettings::FrontVector arg2 ;
  
  arg1 = (FBXImporterUnmanaged::FBXGlobalSettings *)jarg1; 
  arg2 = (FBXImporterUnmanaged::FBXGlobalSettings::FrontVector)jarg2; 
  (arg1)->SetFrontVector(arg2);
}


SWIGEXPORT void SWIGSTDCALL CSharp_FBXGlobalSettings_SetCoordinateSystem(void * jarg1, int jarg2) {
  FBXImporterUnmanaged::FBXGlobalSettings *arg1 = (FBXImporterUnmanaged::FBXGlobalSettings *) 0 ;
  FBXImporterUnmanaged::FBXGlobalSettings::CoordinateSystem arg2 ;
  
  arg1 = (FBXImporterUnmanaged::FBXGlobalSettings *)jarg1; 
  arg2 = (FBXImporterUnmanaged::FBXGlobalSettings::CoordinateSystem)jarg2; 
  (arg1)->SetCoordinateSystem(arg2);
}


SWIGEXPORT float SWIGSTDCALL CSharp_FBXGlobalSettings_GetUnitScaleFactor(void * jarg1) {
  float jresult ;
  FBXImporterUnmanaged::FBXGlobalSettings *arg1 = (FBXImporterUnmanaged::FBXGlobalSettings *) 0 ;
  float result;
  
  arg1 = (FBXImporterUnmanaged::FBXGlobalSettings *)jarg1; 
  result = (float)((FBXImporterUnmanaged::FBXGlobalSettings const *)arg1)->GetUnitScaleFactor();
  jresult = result; 
  return jresult;
}


SWIGEXPORT float SWIGSTDCALL CSharp_FBXGlobalSettings_GetOriginalUnitScaleFactor(void * jarg1) {
  float jresult ;
  FBXImporterUnmanaged::FBXGlobalSettings *arg1 = (FBXImporterUnmanaged::FBXGlobalSettings *) 0 ;
  float result;
  
  arg1 = (FBXImporterUnmanaged::FBXGlobalSettings *)jarg1; 
  result = (float)((FBXImporterUnmanaged::FBXGlobalSettings const *)arg1)->GetOriginalUnitScaleFactor();
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_FBXGlobalSettings_GetUpVector(void * jarg1) {
  int jresult ;
  FBXImporterUnmanaged::FBXGlobalSettings *arg1 = (FBXImporterUnmanaged::FBXGlobalSettings *) 0 ;
  FBXImporterUnmanaged::FBXGlobalSettings::UpVector result;
  
  arg1 = (FBXImporterUnmanaged::FBXGlobalSettings *)jarg1; 
  result = (FBXImporterUnmanaged::FBXGlobalSettings::UpVector)((FBXImporterUnmanaged::FBXGlobalSettings const *)arg1)->GetUpVector();
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_FBXGlobalSettings_GetOriginalUpVector(void * jarg1) {
  int jresult ;
  FBXImporterUnmanaged::FBXGlobalSettings *arg1 = (FBXImporterUnmanaged::FBXGlobalSettings *) 0 ;
  FBXImporterUnmanaged::FBXGlobalSettings::UpVector result;
  
  arg1 = (FBXImporterUnmanaged::FBXGlobalSettings *)jarg1; 
  result = (FBXImporterUnmanaged::FBXGlobalSettings::UpVector)((FBXImporterUnmanaged::FBXGlobalSettings const *)arg1)->GetOriginalUpVector();
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_FBXGlobalSettings_GetFrontVector(void * jarg1) {
  int jresult ;
  FBXImporterUnmanaged::FBXGlobalSettings *arg1 = (FBXImporterUnmanaged::FBXGlobalSettings *) 0 ;
  FBXImporterUnmanaged::FBXGlobalSettings::FrontVector result;
  
  arg1 = (FBXImporterUnmanaged::FBXGlobalSettings *)jarg1; 
  result = (FBXImporterUnmanaged::FBXGlobalSettings::FrontVector)((FBXImporterUnmanaged::FBXGlobalSettings const *)arg1)->GetFrontVector();
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_FBXGlobalSettings_GetCoordinateSystem(void * jarg1) {
  int jresult ;
  FBXImporterUnmanaged::FBXGlobalSettings *arg1 = (FBXImporterUnmanaged::FBXGlobalSettings *) 0 ;
  FBXImporterUnmanaged::FBXGlobalSettings::CoordinateSystem result;
  
  arg1 = (FBXImporterUnmanaged::FBXGlobalSettings *)jarg1; 
  result = (FBXImporterUnmanaged::FBXGlobalSettings::CoordinateSystem)((FBXImporterUnmanaged::FBXGlobalSettings const *)arg1)->GetCoordinateSystem();
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_FBXGlobalSettingsPtr__SWIG_0() {
  void * jresult ;
  FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXGlobalSettings > *result = 0 ;
  
  result = (FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXGlobalSettings > *)new FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXGlobalSettings >();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_FBXGlobalSettingsPtr__SWIG_1(void * jarg1) {
  void * jresult ;
  FBXImporterUnmanaged::FBXGlobalSettings *arg1 = (FBXImporterUnmanaged::FBXGlobalSettings *) 0 ;
  FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXGlobalSettings > *result = 0 ;
  
  arg1 = (FBXImporterUnmanaged::FBXGlobalSettings *)jarg1; 
  result = (FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXGlobalSettings > *)new FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXGlobalSettings >(arg1);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_FBXGlobalSettingsPtr__SWIG_2(void * jarg1) {
  void * jresult ;
  FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXGlobalSettings > *arg1 = 0 ;
  FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXGlobalSettings > *result = 0 ;
  
  arg1 = (FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXGlobalSettings > *)jarg1;
  if (!arg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXGlobalSettings > const & type is null", 0);
    return 0;
  } 
  result = (FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXGlobalSettings > *)new FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXGlobalSettings >((FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXGlobalSettings > const &)*arg1);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_FBXGlobalSettingsPtr(void * jarg1) {
  FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXGlobalSettings > *arg1 = (FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXGlobalSettings > *) 0 ;
  
  arg1 = (FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXGlobalSettings > *)jarg1; 
  delete arg1;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_FBXGlobalSettingsPtr_get(void * jarg1) {
  void * jresult ;
  FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXGlobalSettings > *arg1 = (FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXGlobalSettings > *) 0 ;
  FBXImporterUnmanaged::FBXGlobalSettings *result = 0 ;
  
  arg1 = (FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXGlobalSettings > *)jarg1; 
  result = (FBXImporterUnmanaged::FBXGlobalSettings *)((FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXGlobalSettings > const *)arg1)->get();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_FBXGlobalSettingsPtr___deref__(void * jarg1) {
  void * jresult ;
  FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXGlobalSettings > *arg1 = (FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXGlobalSettings > *) 0 ;
  FBXImporterUnmanaged::FBXGlobalSettings *result = 0 ;
  
  arg1 = (FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXGlobalSettings > *)jarg1; 
  result = (FBXImporterUnmanaged::FBXGlobalSettings *)((FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXGlobalSettings > const *)arg1)->operator ->();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_FBXGlobalSettingsPtr___ref__(void * jarg1) {
  void * jresult ;
  FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXGlobalSettings > *arg1 = (FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXGlobalSettings > *) 0 ;
  FBXImporterUnmanaged::FBXGlobalSettings *result = 0 ;
  
  arg1 = (FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXGlobalSettings > *)jarg1; 
  result = (FBXImporterUnmanaged::FBXGlobalSettings *) &((FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXGlobalSettings > const *)arg1)->operator *();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_FBXGlobalSettingsPtr_IsNull(void * jarg1) {
  unsigned int jresult ;
  FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXGlobalSettings > *arg1 = (FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXGlobalSettings > *) 0 ;
  bool result;
  
  arg1 = (FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXGlobalSettings > *)jarg1; 
  result = (bool)((FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXGlobalSettings > const *)arg1)->IsNull();
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_FBXGlobalSettingsPtr_Null_set(void * jarg1) {
  FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXGlobalSettings > *arg1 = (FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXGlobalSettings > *) 0 ;
  
  arg1 = (FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXGlobalSettings > *)jarg1; 
  FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXGlobalSettings >::Null = *arg1;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_FBXGlobalSettingsPtr_Null_get() {
  void * jresult ;
  FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXGlobalSettings > *result = 0 ;
  
  result = (FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXGlobalSettings > *)&FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXGlobalSettings >::Null;
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_FBXGlobalSettingsPtr_unitScaleFactor_set(void * jarg1, float jarg2) {
  FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXGlobalSettings > *arg1 = (FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXGlobalSettings > *) 0 ;
  float arg2 ;
  
  arg1 = (FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXGlobalSettings > *)jarg1; 
  arg2 = (float)jarg2; 
  if (arg1) (*arg1)->unitScaleFactor = arg2;
}


SWIGEXPORT float SWIGSTDCALL CSharp_FBXGlobalSettingsPtr_unitScaleFactor_get(void * jarg1) {
  float jresult ;
  FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXGlobalSettings > *arg1 = (FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXGlobalSettings > *) 0 ;
  float result;
  
  arg1 = (FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXGlobalSettings > *)jarg1; 
  result = (float) ((*arg1)->unitScaleFactor);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_FBXGlobalSettingsPtr_originalScaleFactor_set(void * jarg1, float jarg2) {
  FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXGlobalSettings > *arg1 = (FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXGlobalSettings > *) 0 ;
  float arg2 ;
  
  arg1 = (FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXGlobalSettings > *)jarg1; 
  arg2 = (float)jarg2; 
  if (arg1) (*arg1)->originalScaleFactor = arg2;
}


SWIGEXPORT float SWIGSTDCALL CSharp_FBXGlobalSettingsPtr_originalScaleFactor_get(void * jarg1) {
  float jresult ;
  FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXGlobalSettings > *arg1 = (FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXGlobalSettings > *) 0 ;
  float result;
  
  arg1 = (FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXGlobalSettings > *)jarg1; 
  result = (float) ((*arg1)->originalScaleFactor);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_FBXGlobalSettingsPtr_upVector_set(void * jarg1, int jarg2) {
  FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXGlobalSettings > *arg1 = (FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXGlobalSettings > *) 0 ;
  FBXImporterUnmanaged::FBXGlobalSettings::UpVector arg2 ;
  
  arg1 = (FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXGlobalSettings > *)jarg1; 
  arg2 = (FBXImporterUnmanaged::FBXGlobalSettings::UpVector)jarg2; 
  if (arg1) (*arg1)->upVector = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_FBXGlobalSettingsPtr_upVector_get(void * jarg1) {
  int jresult ;
  FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXGlobalSettings > *arg1 = (FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXGlobalSettings > *) 0 ;
  FBXImporterUnmanaged::FBXGlobalSettings::UpVector result;
  
  arg1 = (FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXGlobalSettings > *)jarg1; 
  result = (FBXImporterUnmanaged::FBXGlobalSettings::UpVector) ((*arg1)->upVector);
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_FBXGlobalSettingsPtr_originalUpVector_set(void * jarg1, int jarg2) {
  FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXGlobalSettings > *arg1 = (FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXGlobalSettings > *) 0 ;
  FBXImporterUnmanaged::FBXGlobalSettings::UpVector arg2 ;
  
  arg1 = (FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXGlobalSettings > *)jarg1; 
  arg2 = (FBXImporterUnmanaged::FBXGlobalSettings::UpVector)jarg2; 
  if (arg1) (*arg1)->originalUpVector = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_FBXGlobalSettingsPtr_originalUpVector_get(void * jarg1) {
  int jresult ;
  FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXGlobalSettings > *arg1 = (FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXGlobalSettings > *) 0 ;
  FBXImporterUnmanaged::FBXGlobalSettings::UpVector result;
  
  arg1 = (FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXGlobalSettings > *)jarg1; 
  result = (FBXImporterUnmanaged::FBXGlobalSettings::UpVector) ((*arg1)->originalUpVector);
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_FBXGlobalSettingsPtr_frontVector_set(void * jarg1, int jarg2) {
  FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXGlobalSettings > *arg1 = (FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXGlobalSettings > *) 0 ;
  FBXImporterUnmanaged::FBXGlobalSettings::FrontVector arg2 ;
  
  arg1 = (FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXGlobalSettings > *)jarg1; 
  arg2 = (FBXImporterUnmanaged::FBXGlobalSettings::FrontVector)jarg2; 
  if (arg1) (*arg1)->frontVector = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_FBXGlobalSettingsPtr_frontVector_get(void * jarg1) {
  int jresult ;
  FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXGlobalSettings > *arg1 = (FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXGlobalSettings > *) 0 ;
  FBXImporterUnmanaged::FBXGlobalSettings::FrontVector result;
  
  arg1 = (FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXGlobalSettings > *)jarg1; 
  result = (FBXImporterUnmanaged::FBXGlobalSettings::FrontVector) ((*arg1)->frontVector);
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_FBXGlobalSettingsPtr_coordinateSystem_set(void * jarg1, int jarg2) {
  FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXGlobalSettings > *arg1 = (FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXGlobalSettings > *) 0 ;
  FBXImporterUnmanaged::FBXGlobalSettings::CoordinateSystem arg2 ;
  
  arg1 = (FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXGlobalSettings > *)jarg1; 
  arg2 = (FBXImporterUnmanaged::FBXGlobalSettings::CoordinateSystem)jarg2; 
  if (arg1) (*arg1)->coordinateSystem = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_FBXGlobalSettingsPtr_coordinateSystem_get(void * jarg1) {
  int jresult ;
  FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXGlobalSettings > *arg1 = (FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXGlobalSettings > *) 0 ;
  FBXImporterUnmanaged::FBXGlobalSettings::CoordinateSystem result;
  
  arg1 = (FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXGlobalSettings > *)jarg1; 
  result = (FBXImporterUnmanaged::FBXGlobalSettings::CoordinateSystem) ((*arg1)->coordinateSystem);
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_FBXGlobalSettingsPtr_Create(void * jarg1) {
  void * jresult ;
  FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXGlobalSettings > *arg1 = (FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXGlobalSettings > *) 0 ;
  FBXImporterUnmanaged::FBXGlobalSettingsPtr result;
  
  arg1 = (FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXGlobalSettings > *)jarg1; 
  result = (*arg1)->Create();
  jresult = new FBXImporterUnmanaged::FBXGlobalSettingsPtr((const FBXImporterUnmanaged::FBXGlobalSettingsPtr &)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_FBXGlobalSettingsPtr_SetUnitScaleFactor(void * jarg1, float jarg2) {
  FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXGlobalSettings > *arg1 = (FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXGlobalSettings > *) 0 ;
  float arg2 ;
  
  arg1 = (FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXGlobalSettings > *)jarg1; 
  arg2 = (float)jarg2; 
  (*arg1)->SetUnitScaleFactor(arg2);
}


SWIGEXPORT void SWIGSTDCALL CSharp_FBXGlobalSettingsPtr_SetOriginalUnitScaleFactor(void * jarg1, float jarg2) {
  FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXGlobalSettings > *arg1 = (FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXGlobalSettings > *) 0 ;
  float arg2 ;
  
  arg1 = (FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXGlobalSettings > *)jarg1; 
  arg2 = (float)jarg2; 
  (*arg1)->SetOriginalUnitScaleFactor(arg2);
}


SWIGEXPORT void SWIGSTDCALL CSharp_FBXGlobalSettingsPtr_SetUpVector(void * jarg1, int jarg2) {
  FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXGlobalSettings > *arg1 = (FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXGlobalSettings > *) 0 ;
  FBXImporterUnmanaged::FBXGlobalSettings::UpVector arg2 ;
  
  arg1 = (FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXGlobalSettings > *)jarg1; 
  arg2 = (FBXImporterUnmanaged::FBXGlobalSettings::UpVector)jarg2; 
  (*arg1)->SetUpVector(arg2);
}


SWIGEXPORT void SWIGSTDCALL CSharp_FBXGlobalSettingsPtr_SetOriginalUpVector(void * jarg1, int jarg2) {
  FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXGlobalSettings > *arg1 = (FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXGlobalSettings > *) 0 ;
  FBXImporterUnmanaged::FBXGlobalSettings::UpVector arg2 ;
  
  arg1 = (FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXGlobalSettings > *)jarg1; 
  arg2 = (FBXImporterUnmanaged::FBXGlobalSettings::UpVector)jarg2; 
  (*arg1)->SetOriginalUpVector(arg2);
}


SWIGEXPORT void SWIGSTDCALL CSharp_FBXGlobalSettingsPtr_SetFrontVector(void * jarg1, int jarg2) {
  FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXGlobalSettings > *arg1 = (FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXGlobalSettings > *) 0 ;
  FBXImporterUnmanaged::FBXGlobalSettings::FrontVector arg2 ;
  
  arg1 = (FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXGlobalSettings > *)jarg1; 
  arg2 = (FBXImporterUnmanaged::FBXGlobalSettings::FrontVector)jarg2; 
  (*arg1)->SetFrontVector(arg2);
}


SWIGEXPORT void SWIGSTDCALL CSharp_FBXGlobalSettingsPtr_SetCoordinateSystem(void * jarg1, int jarg2) {
  FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXGlobalSettings > *arg1 = (FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXGlobalSettings > *) 0 ;
  FBXImporterUnmanaged::FBXGlobalSettings::CoordinateSystem arg2 ;
  
  arg1 = (FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXGlobalSettings > *)jarg1; 
  arg2 = (FBXImporterUnmanaged::FBXGlobalSettings::CoordinateSystem)jarg2; 
  (*arg1)->SetCoordinateSystem(arg2);
}


SWIGEXPORT float SWIGSTDCALL CSharp_FBXGlobalSettingsPtr_GetUnitScaleFactor(void * jarg1) {
  float jresult ;
  FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXGlobalSettings > *arg1 = (FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXGlobalSettings > *) 0 ;
  float result;
  
  arg1 = (FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXGlobalSettings > *)jarg1; 
  result = (float)(*arg1)->GetUnitScaleFactor();
  jresult = result; 
  return jresult;
}


SWIGEXPORT float SWIGSTDCALL CSharp_FBXGlobalSettingsPtr_GetOriginalUnitScaleFactor(void * jarg1) {
  float jresult ;
  FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXGlobalSettings > *arg1 = (FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXGlobalSettings > *) 0 ;
  float result;
  
  arg1 = (FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXGlobalSettings > *)jarg1; 
  result = (float)(*arg1)->GetOriginalUnitScaleFactor();
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_FBXGlobalSettingsPtr_GetUpVector(void * jarg1) {
  int jresult ;
  FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXGlobalSettings > *arg1 = (FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXGlobalSettings > *) 0 ;
  FBXImporterUnmanaged::FBXGlobalSettings::UpVector result;
  
  arg1 = (FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXGlobalSettings > *)jarg1; 
  result = (FBXImporterUnmanaged::FBXGlobalSettings::UpVector)(*arg1)->GetUpVector();
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_FBXGlobalSettingsPtr_GetOriginalUpVector(void * jarg1) {
  int jresult ;
  FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXGlobalSettings > *arg1 = (FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXGlobalSettings > *) 0 ;
  FBXImporterUnmanaged::FBXGlobalSettings::UpVector result;
  
  arg1 = (FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXGlobalSettings > *)jarg1; 
  result = (FBXImporterUnmanaged::FBXGlobalSettings::UpVector)(*arg1)->GetOriginalUpVector();
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_FBXGlobalSettingsPtr_GetFrontVector(void * jarg1) {
  int jresult ;
  FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXGlobalSettings > *arg1 = (FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXGlobalSettings > *) 0 ;
  FBXImporterUnmanaged::FBXGlobalSettings::FrontVector result;
  
  arg1 = (FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXGlobalSettings > *)jarg1; 
  result = (FBXImporterUnmanaged::FBXGlobalSettings::FrontVector)(*arg1)->GetFrontVector();
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_FBXGlobalSettingsPtr_GetCoordinateSystem(void * jarg1) {
  int jresult ;
  FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXGlobalSettings > *arg1 = (FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXGlobalSettings > *) 0 ;
  FBXImporterUnmanaged::FBXGlobalSettings::CoordinateSystem result;
  
  arg1 = (FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXGlobalSettings > *)jarg1; 
  result = (FBXImporterUnmanaged::FBXGlobalSettings::CoordinateSystem)(*arg1)->GetCoordinateSystem();
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_FBXGlobalSettingsPtr_addReference(void * jarg1) {
  FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXGlobalSettings > *arg1 = (FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXGlobalSettings > *) 0 ;
  
  arg1 = (FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXGlobalSettings > *)jarg1; 
  (*arg1)->addReference();
}


SWIGEXPORT void SWIGSTDCALL CSharp_FBXGlobalSettingsPtr_removeReference(void * jarg1) {
  FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXGlobalSettings > *arg1 = (FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXGlobalSettings > *) 0 ;
  
  arg1 = (FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXGlobalSettings > *)jarg1; 
  (*arg1)->removeReference();
}


SWIGEXPORT int SWIGSTDCALL CSharp_FBXGlobalSettingsPtr_getReferenceCount(void * jarg1) {
  int jresult ;
  FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXGlobalSettings > *arg1 = (FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXGlobalSettings > *) 0 ;
  int result;
  
  arg1 = (FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXGlobalSettings > *)jarg1; 
  result = (int)(*arg1)->getReferenceCount();
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_FBXScene_Create() {
  void * jresult ;
  FBXImporterUnmanaged::FBXScenePtr result;
  
  result = FBXImporterUnmanaged::FBXScene::Create();
  jresult = new FBXImporterUnmanaged::FBXScenePtr((const FBXImporterUnmanaged::FBXScenePtr &)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_FBXScene() {
  void * jresult ;
  FBXImporterUnmanaged::FBXScene *result = 0 ;
  
  result = (FBXImporterUnmanaged::FBXScene *)new FBXImporterUnmanaged::FBXScene();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_FBXScene(void * jarg1) {
  FBXImporterUnmanaged::FBXScene *arg1 = (FBXImporterUnmanaged::FBXScene *) 0 ;
  
  arg1 = (FBXImporterUnmanaged::FBXScene *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_FBXScene_SetModel(void * jarg1, void * jarg2) {
  FBXImporterUnmanaged::FBXScene *arg1 = (FBXImporterUnmanaged::FBXScene *) 0 ;
  FBXImporterUnmanaged::FBXModelPtr arg2 ;
  FBXImporterUnmanaged::FBXModelPtr *argp2 ;
  
  arg1 = (FBXImporterUnmanaged::FBXScene *)jarg1; 
  argp2 = (FBXImporterUnmanaged::FBXModelPtr *)jarg2; 
  if (!argp2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "Attempt to dereference null FBXImporterUnmanaged::FBXModelPtr", 0);
    return ;
  }
  arg2 = *argp2; 
  (arg1)->SetModel(arg2);
}


SWIGEXPORT void SWIGSTDCALL CSharp_FBXScene_SetGlobalSettings(void * jarg1, void * jarg2) {
  FBXImporterUnmanaged::FBXScene *arg1 = (FBXImporterUnmanaged::FBXScene *) 0 ;
  FBXImporterUnmanaged::FBXGlobalSettingsPtr arg2 ;
  FBXImporterUnmanaged::FBXGlobalSettingsPtr *argp2 ;
  
  arg1 = (FBXImporterUnmanaged::FBXScene *)jarg1; 
  argp2 = (FBXImporterUnmanaged::FBXGlobalSettingsPtr *)jarg2; 
  if (!argp2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "Attempt to dereference null FBXImporterUnmanaged::FBXGlobalSettingsPtr", 0);
    return ;
  }
  arg2 = *argp2; 
  (arg1)->SetGlobalSettings(arg2);
}


SWIGEXPORT void * SWIGSTDCALL CSharp_FBXScene_GetModel(void * jarg1) {
  void * jresult ;
  FBXImporterUnmanaged::FBXScene *arg1 = (FBXImporterUnmanaged::FBXScene *) 0 ;
  FBXImporterUnmanaged::FBXModelPtr result;
  
  arg1 = (FBXImporterUnmanaged::FBXScene *)jarg1; 
  result = ((FBXImporterUnmanaged::FBXScene const *)arg1)->GetModel();
  jresult = new FBXImporterUnmanaged::FBXModelPtr((const FBXImporterUnmanaged::FBXModelPtr &)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_FBXScene_GetGlobalSettings(void * jarg1) {
  void * jresult ;
  FBXImporterUnmanaged::FBXScene *arg1 = (FBXImporterUnmanaged::FBXScene *) 0 ;
  FBXImporterUnmanaged::FBXGlobalSettingsPtr result;
  
  arg1 = (FBXImporterUnmanaged::FBXScene *)jarg1; 
  result = ((FBXImporterUnmanaged::FBXScene const *)arg1)->GetGlobalSettings();
  jresult = new FBXImporterUnmanaged::FBXGlobalSettingsPtr((const FBXImporterUnmanaged::FBXGlobalSettingsPtr &)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_FBXScenePtr__SWIG_0() {
  void * jresult ;
  FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXScene > *result = 0 ;
  
  result = (FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXScene > *)new FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXScene >();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_FBXScenePtr__SWIG_1(void * jarg1) {
  void * jresult ;
  FBXImporterUnmanaged::FBXScene *arg1 = (FBXImporterUnmanaged::FBXScene *) 0 ;
  FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXScene > *result = 0 ;
  
  arg1 = (FBXImporterUnmanaged::FBXScene *)jarg1; 
  result = (FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXScene > *)new FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXScene >(arg1);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_FBXScenePtr__SWIG_2(void * jarg1) {
  void * jresult ;
  FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXScene > *arg1 = 0 ;
  FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXScene > *result = 0 ;
  
  arg1 = (FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXScene > *)jarg1;
  if (!arg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXScene > const & type is null", 0);
    return 0;
  } 
  result = (FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXScene > *)new FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXScene >((FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXScene > const &)*arg1);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_FBXScenePtr(void * jarg1) {
  FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXScene > *arg1 = (FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXScene > *) 0 ;
  
  arg1 = (FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXScene > *)jarg1; 
  delete arg1;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_FBXScenePtr_get(void * jarg1) {
  void * jresult ;
  FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXScene > *arg1 = (FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXScene > *) 0 ;
  FBXImporterUnmanaged::FBXScene *result = 0 ;
  
  arg1 = (FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXScene > *)jarg1; 
  result = (FBXImporterUnmanaged::FBXScene *)((FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXScene > const *)arg1)->get();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_FBXScenePtr___deref__(void * jarg1) {
  void * jresult ;
  FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXScene > *arg1 = (FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXScene > *) 0 ;
  FBXImporterUnmanaged::FBXScene *result = 0 ;
  
  arg1 = (FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXScene > *)jarg1; 
  result = (FBXImporterUnmanaged::FBXScene *)((FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXScene > const *)arg1)->operator ->();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_FBXScenePtr___ref__(void * jarg1) {
  void * jresult ;
  FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXScene > *arg1 = (FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXScene > *) 0 ;
  FBXImporterUnmanaged::FBXScene *result = 0 ;
  
  arg1 = (FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXScene > *)jarg1; 
  result = (FBXImporterUnmanaged::FBXScene *) &((FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXScene > const *)arg1)->operator *();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_FBXScenePtr_IsNull(void * jarg1) {
  unsigned int jresult ;
  FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXScene > *arg1 = (FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXScene > *) 0 ;
  bool result;
  
  arg1 = (FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXScene > *)jarg1; 
  result = (bool)((FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXScene > const *)arg1)->IsNull();
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_FBXScenePtr_Null_set(void * jarg1) {
  FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXScene > *arg1 = (FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXScene > *) 0 ;
  
  arg1 = (FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXScene > *)jarg1; 
  FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXScene >::Null = *arg1;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_FBXScenePtr_Null_get() {
  void * jresult ;
  FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXScene > *result = 0 ;
  
  result = (FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXScene > *)&FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXScene >::Null;
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_FBXScenePtr_Create(void * jarg1) {
  void * jresult ;
  FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXScene > *arg1 = (FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXScene > *) 0 ;
  FBXImporterUnmanaged::FBXScenePtr result;
  
  arg1 = (FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXScene > *)jarg1; 
  result = (*arg1)->Create();
  jresult = new FBXImporterUnmanaged::FBXScenePtr((const FBXImporterUnmanaged::FBXScenePtr &)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_FBXScenePtr_SetModel(void * jarg1, void * jarg2) {
  FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXScene > *arg1 = (FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXScene > *) 0 ;
  FBXImporterUnmanaged::FBXModelPtr arg2 ;
  FBXImporterUnmanaged::FBXModelPtr *argp2 ;
  
  arg1 = (FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXScene > *)jarg1; 
  argp2 = (FBXImporterUnmanaged::FBXModelPtr *)jarg2; 
  if (!argp2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "Attempt to dereference null FBXImporterUnmanaged::FBXModelPtr", 0);
    return ;
  }
  arg2 = *argp2; 
  (*arg1)->SetModel(arg2);
}


SWIGEXPORT void SWIGSTDCALL CSharp_FBXScenePtr_SetGlobalSettings(void * jarg1, void * jarg2) {
  FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXScene > *arg1 = (FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXScene > *) 0 ;
  FBXImporterUnmanaged::FBXGlobalSettingsPtr arg2 ;
  FBXImporterUnmanaged::FBXGlobalSettingsPtr *argp2 ;
  
  arg1 = (FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXScene > *)jarg1; 
  argp2 = (FBXImporterUnmanaged::FBXGlobalSettingsPtr *)jarg2; 
  if (!argp2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "Attempt to dereference null FBXImporterUnmanaged::FBXGlobalSettingsPtr", 0);
    return ;
  }
  arg2 = *argp2; 
  (*arg1)->SetGlobalSettings(arg2);
}


SWIGEXPORT void * SWIGSTDCALL CSharp_FBXScenePtr_GetModel(void * jarg1) {
  void * jresult ;
  FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXScene > *arg1 = (FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXScene > *) 0 ;
  FBXImporterUnmanaged::FBXModelPtr result;
  
  arg1 = (FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXScene > *)jarg1; 
  result = (*arg1)->GetModel();
  jresult = new FBXImporterUnmanaged::FBXModelPtr((const FBXImporterUnmanaged::FBXModelPtr &)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_FBXScenePtr_GetGlobalSettings(void * jarg1) {
  void * jresult ;
  FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXScene > *arg1 = (FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXScene > *) 0 ;
  FBXImporterUnmanaged::FBXGlobalSettingsPtr result;
  
  arg1 = (FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXScene > *)jarg1; 
  result = (*arg1)->GetGlobalSettings();
  jresult = new FBXImporterUnmanaged::FBXGlobalSettingsPtr((const FBXImporterUnmanaged::FBXGlobalSettingsPtr &)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_FBXScenePtr_addReference(void * jarg1) {
  FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXScene > *arg1 = (FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXScene > *) 0 ;
  
  arg1 = (FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXScene > *)jarg1; 
  (*arg1)->addReference();
}


SWIGEXPORT void SWIGSTDCALL CSharp_FBXScenePtr_removeReference(void * jarg1) {
  FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXScene > *arg1 = (FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXScene > *) 0 ;
  
  arg1 = (FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXScene > *)jarg1; 
  (*arg1)->removeReference();
}


SWIGEXPORT int SWIGSTDCALL CSharp_FBXScenePtr_getReferenceCount(void * jarg1) {
  int jresult ;
  FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXScene > *arg1 = (FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXScene > *) 0 ;
  int result;
  
  arg1 = (FBXImporterUnmanaged::RCPtr< FBXImporterUnmanaged::FBXScene > *)jarg1; 
  result = (int)(*arg1)->getReferenceCount();
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_FBXImporter() {
  void * jresult ;
  FBXImporterUnmanaged::FBXImporter *result = 0 ;
  
  result = (FBXImporterUnmanaged::FBXImporter *)new FBXImporterUnmanaged::FBXImporter();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_FBXImporter(void * jarg1) {
  FBXImporterUnmanaged::FBXImporter *arg1 = (FBXImporterUnmanaged::FBXImporter *) 0 ;
  
  arg1 = (FBXImporterUnmanaged::FBXImporter *)jarg1; 
  delete arg1;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_FBXImporter_ImportFile(void * jarg1, char * jarg2) {
  void * jresult ;
  FBXImporterUnmanaged::FBXImporter *arg1 = (FBXImporterUnmanaged::FBXImporter *) 0 ;
  char *arg2 = (char *) 0 ;
  FBXImporterUnmanaged::FBXScenePtr result;
  
  arg1 = (FBXImporterUnmanaged::FBXImporter *)jarg1; 
  arg2 = (char *)jarg2; 
  result = (arg1)->ImportFile((char const *)arg2);
  jresult = new FBXImporterUnmanaged::FBXScenePtr((const FBXImporterUnmanaged::FBXScenePtr &)result); 
  return jresult;
}


SWIGEXPORT FBXImporterUnmanaged::RCObject * SWIGSTDCALL CSharp_FBXMaterial_SWIGUpcast(FBXImporterUnmanaged::FBXMaterial *jarg1) {
    return (FBXImporterUnmanaged::RCObject *)jarg1;
}

SWIGEXPORT FBXImporterUnmanaged::RCObject * SWIGSTDCALL CSharp_FBXModel_SWIGUpcast(FBXImporterUnmanaged::FBXModel *jarg1) {
    return (FBXImporterUnmanaged::RCObject *)jarg1;
}

SWIGEXPORT FBXImporterUnmanaged::RCObject * SWIGSTDCALL CSharp_FBXGlobalSettings_SWIGUpcast(FBXImporterUnmanaged::FBXGlobalSettings *jarg1) {
    return (FBXImporterUnmanaged::RCObject *)jarg1;
}

SWIGEXPORT FBXImporterUnmanaged::RCObject * SWIGSTDCALL CSharp_FBXScene_SWIGUpcast(FBXImporterUnmanaged::FBXScene *jarg1) {
    return (FBXImporterUnmanaged::RCObject *)jarg1;
}

#ifdef __cplusplus
}
#endif

