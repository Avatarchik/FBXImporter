//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 3.0.7
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------


public class FBXMaterial : RCObject {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;

  internal FBXMaterial(global::System.IntPtr cPtr, bool cMemoryOwn) : base(FBXImporterUnmanagedPINVOKE.FBXMaterial_SWIGUpcast(cPtr), cMemoryOwn) {
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(FBXMaterial obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  ~FBXMaterial() {
    Dispose();
  }

  public override void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          FBXImporterUnmanagedPINVOKE.delete_FBXMaterial(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
      global::System.GC.SuppressFinalize(this);
      base.Dispose();
    }
  }

  public static FBXMaterialPtr Create() {
    FBXMaterialPtr ret = new FBXMaterialPtr(FBXImporterUnmanagedPINVOKE.FBXMaterial_Create(), true);
    return ret;
  }

  public FBXMaterial() : this(FBXImporterUnmanagedPINVOKE.new_FBXMaterial(), true) {
  }

  public void SetName(string name) {
    FBXImporterUnmanagedPINVOKE.FBXMaterial_SetName(swigCPtr, name);
  }

  public void SetBool(string key, bool value) {
    FBXImporterUnmanagedPINVOKE.FBXMaterial_SetBool(swigCPtr, key, value);
  }

  public void SetInt(string key, int value) {
    FBXImporterUnmanagedPINVOKE.FBXMaterial_SetInt(swigCPtr, key, value);
  }

  public void SetFloat(string key, float value) {
    FBXImporterUnmanagedPINVOKE.FBXMaterial_SetFloat(swigCPtr, key, value);
  }

  public void SetDouble(string key, double value) {
    FBXImporterUnmanagedPINVOKE.FBXMaterial_SetDouble(swigCPtr, key, value);
  }

  public void SetVector2(string key, FBXVector2 value) {
    FBXImporterUnmanagedPINVOKE.FBXMaterial_SetVector2(swigCPtr, key, FBXVector2.getCPtr(value));
    if (FBXImporterUnmanagedPINVOKE.SWIGPendingException.Pending) throw FBXImporterUnmanagedPINVOKE.SWIGPendingException.Retrieve();
  }

  public void SetVector3(string key, FBXVector3 value) {
    FBXImporterUnmanagedPINVOKE.FBXMaterial_SetVector3(swigCPtr, key, FBXVector3.getCPtr(value));
    if (FBXImporterUnmanagedPINVOKE.SWIGPendingException.Pending) throw FBXImporterUnmanagedPINVOKE.SWIGPendingException.Retrieve();
  }

  public void SetVector4(string key, FBXVector4 value) {
    FBXImporterUnmanagedPINVOKE.FBXMaterial_SetVector4(swigCPtr, key, FBXVector4.getCPtr(value));
    if (FBXImporterUnmanagedPINVOKE.SWIGPendingException.Pending) throw FBXImporterUnmanagedPINVOKE.SWIGPendingException.Retrieve();
  }

  public void SetString(string key, string value) {
    FBXImporterUnmanagedPINVOKE.FBXMaterial_SetString(swigCPtr, key, value);
  }

  public void SetColor(string key, FBXColor value) {
    FBXImporterUnmanagedPINVOKE.FBXMaterial_SetColor(swigCPtr, key, FBXColor.getCPtr(value));
    if (FBXImporterUnmanagedPINVOKE.SWIGPendingException.Pending) throw FBXImporterUnmanagedPINVOKE.SWIGPendingException.Retrieve();
  }

  public void SetMatrix4x4(string key, FBXMatrix4x4 value) {
    FBXImporterUnmanagedPINVOKE.FBXMaterial_SetMatrix4x4(swigCPtr, key, FBXMatrix4x4.getCPtr(value));
    if (FBXImporterUnmanagedPINVOKE.SWIGPendingException.Pending) throw FBXImporterUnmanagedPINVOKE.SWIGPendingException.Retrieve();
  }

  public string GetName() {
    string ret = FBXImporterUnmanagedPINVOKE.FBXMaterial_GetName(swigCPtr);
    return ret;
  }

  public bool GetBool(string key, bool defaultValue) {
    bool ret = FBXImporterUnmanagedPINVOKE.FBXMaterial_GetBool__SWIG_0(swigCPtr, key, defaultValue);
    return ret;
  }

  public bool GetBool(string key) {
    bool ret = FBXImporterUnmanagedPINVOKE.FBXMaterial_GetBool__SWIG_1(swigCPtr, key);
    return ret;
  }

  public int GetInt(string key, int defaultValue) {
    int ret = FBXImporterUnmanagedPINVOKE.FBXMaterial_GetInt__SWIG_0(swigCPtr, key, defaultValue);
    return ret;
  }

  public int GetInt(string key) {
    int ret = FBXImporterUnmanagedPINVOKE.FBXMaterial_GetInt__SWIG_1(swigCPtr, key);
    return ret;
  }

  public float GetFloat(string key, float defaultValue) {
    float ret = FBXImporterUnmanagedPINVOKE.FBXMaterial_GetFloat__SWIG_0(swigCPtr, key, defaultValue);
    return ret;
  }

  public float GetFloat(string key) {
    float ret = FBXImporterUnmanagedPINVOKE.FBXMaterial_GetFloat__SWIG_1(swigCPtr, key);
    return ret;
  }

  public double GetDouble(string key, double defaultValue) {
    double ret = FBXImporterUnmanagedPINVOKE.FBXMaterial_GetDouble__SWIG_0(swigCPtr, key, defaultValue);
    return ret;
  }

  public double GetDouble(string key) {
    double ret = FBXImporterUnmanagedPINVOKE.FBXMaterial_GetDouble__SWIG_1(swigCPtr, key);
    return ret;
  }

  public FBXVector2 GetVector2(string key, FBXVector2 defaultValue) {
    FBXVector2 ret = new FBXVector2(FBXImporterUnmanagedPINVOKE.FBXMaterial_GetVector2__SWIG_0(swigCPtr, key, FBXVector2.getCPtr(defaultValue)), true);
    if (FBXImporterUnmanagedPINVOKE.SWIGPendingException.Pending) throw FBXImporterUnmanagedPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public FBXVector2 GetVector2(string key) {
    FBXVector2 ret = new FBXVector2(FBXImporterUnmanagedPINVOKE.FBXMaterial_GetVector2__SWIG_1(swigCPtr, key), true);
    return ret;
  }

  public FBXVector3 GetVector3(string key, FBXVector3 defaultValue) {
    FBXVector3 ret = new FBXVector3(FBXImporterUnmanagedPINVOKE.FBXMaterial_GetVector3__SWIG_0(swigCPtr, key, FBXVector3.getCPtr(defaultValue)), true);
    if (FBXImporterUnmanagedPINVOKE.SWIGPendingException.Pending) throw FBXImporterUnmanagedPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public FBXVector3 GetVector3(string key) {
    FBXVector3 ret = new FBXVector3(FBXImporterUnmanagedPINVOKE.FBXMaterial_GetVector3__SWIG_1(swigCPtr, key), true);
    return ret;
  }

  public FBXVector4 GetVector4(string key, FBXVector4 defaultValue) {
    FBXVector4 ret = new FBXVector4(FBXImporterUnmanagedPINVOKE.FBXMaterial_GetVector4__SWIG_0(swigCPtr, key, FBXVector4.getCPtr(defaultValue)), true);
    if (FBXImporterUnmanagedPINVOKE.SWIGPendingException.Pending) throw FBXImporterUnmanagedPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public FBXVector4 GetVector4(string key) {
    FBXVector4 ret = new FBXVector4(FBXImporterUnmanagedPINVOKE.FBXMaterial_GetVector4__SWIG_1(swigCPtr, key), true);
    return ret;
  }

  public string GetString(string key, string defaultValue) {
    string ret = FBXImporterUnmanagedPINVOKE.FBXMaterial_GetString__SWIG_0(swigCPtr, key, defaultValue);
    return ret;
  }

  public string GetString(string key) {
    string ret = FBXImporterUnmanagedPINVOKE.FBXMaterial_GetString__SWIG_1(swigCPtr, key);
    return ret;
  }

  public FBXColor GetColor(string key, FBXColor defaultValue) {
    FBXColor ret = new FBXColor(FBXImporterUnmanagedPINVOKE.FBXMaterial_GetColor__SWIG_0(swigCPtr, key, FBXColor.getCPtr(defaultValue)), true);
    if (FBXImporterUnmanagedPINVOKE.SWIGPendingException.Pending) throw FBXImporterUnmanagedPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public FBXColor GetColor(string key) {
    FBXColor ret = new FBXColor(FBXImporterUnmanagedPINVOKE.FBXMaterial_GetColor__SWIG_1(swigCPtr, key), true);
    return ret;
  }

  public FBXMatrix4x4 GetMatrix4x4(string key, FBXMatrix4x4 defaultValue) {
    FBXMatrix4x4 ret = new FBXMatrix4x4(FBXImporterUnmanagedPINVOKE.FBXMaterial_GetMatrix4x4__SWIG_0(swigCPtr, key, FBXMatrix4x4.getCPtr(defaultValue)), true);
    if (FBXImporterUnmanagedPINVOKE.SWIGPendingException.Pending) throw FBXImporterUnmanagedPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public FBXMatrix4x4 GetMatrix4x4(string key) {
    FBXMatrix4x4 ret = new FBXMatrix4x4(FBXImporterUnmanagedPINVOKE.FBXMaterial_GetMatrix4x4__SWIG_1(swigCPtr, key), true);
    return ret;
  }

  public bool Exist(string key) {
    bool ret = FBXImporterUnmanagedPINVOKE.FBXMaterial_Exist(swigCPtr, key);
    return ret;
  }

}
