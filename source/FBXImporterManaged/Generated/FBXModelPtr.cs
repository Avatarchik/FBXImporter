//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 3.0.7
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------


public class FBXModelPtr : global::System.IDisposable {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal FBXModelPtr(global::System.IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(FBXModelPtr obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  ~FBXModelPtr() {
    Dispose();
  }

  public virtual void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          FBXImporterUnmanagedPINVOKE.delete_FBXModelPtr(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
      global::System.GC.SuppressFinalize(this);
    }
  }

  public FBXModelPtr() : this(FBXImporterUnmanagedPINVOKE.new_FBXModelPtr__SWIG_0(), true) {
  }

  public FBXModelPtr(FBXModel p) : this(FBXImporterUnmanagedPINVOKE.new_FBXModelPtr__SWIG_1(FBXModel.getCPtr(p)), true) {
  }

  public FBXModelPtr(FBXModelPtr other) : this(FBXImporterUnmanagedPINVOKE.new_FBXModelPtr__SWIG_2(FBXModelPtr.getCPtr(other)), true) {
    if (FBXImporterUnmanagedPINVOKE.SWIGPendingException.Pending) throw FBXImporterUnmanagedPINVOKE.SWIGPendingException.Retrieve();
  }

  public FBXModel get() {
    global::System.IntPtr cPtr = FBXImporterUnmanagedPINVOKE.FBXModelPtr_get(swigCPtr);
    FBXModel ret = (cPtr == global::System.IntPtr.Zero) ? null : new FBXModel(cPtr, false);
    return ret;
  }

  public FBXModel __deref__() {
    global::System.IntPtr cPtr = FBXImporterUnmanagedPINVOKE.FBXModelPtr___deref__(swigCPtr);
    FBXModel ret = (cPtr == global::System.IntPtr.Zero) ? null : new FBXModel(cPtr, false);
    return ret;
  }

  public FBXModel __ref__() {
    FBXModel ret = new FBXModel(FBXImporterUnmanagedPINVOKE.FBXModelPtr___ref__(swigCPtr), false);
    return ret;
  }

  public bool IsNull() {
    bool ret = FBXImporterUnmanagedPINVOKE.FBXModelPtr_IsNull(swigCPtr);
    return ret;
  }

  public static FBXModelPtr Null {
    set {
      FBXImporterUnmanagedPINVOKE.FBXModelPtr_Null_set(FBXModelPtr.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = FBXImporterUnmanagedPINVOKE.FBXModelPtr_Null_get();
      FBXModelPtr ret = (cPtr == global::System.IntPtr.Zero) ? null : new FBXModelPtr(cPtr, false);
      return ret;
    } 
  }

  public FBXModelPtr Create() {
    FBXModelPtr ret = new FBXModelPtr(FBXImporterUnmanagedPINVOKE.FBXModelPtr_Create(swigCPtr), true);
    return ret;
  }

  public void SetName(string name) {
    FBXImporterUnmanagedPINVOKE.FBXModelPtr_SetName(swigCPtr, name);
  }

  public string GetName() {
    string ret = FBXImporterUnmanagedPINVOKE.FBXModelPtr_GetName(swigCPtr);
    return ret;
  }

  public int GetChildCount() {
    int ret = FBXImporterUnmanagedPINVOKE.FBXModelPtr_GetChildCount(swigCPtr);
    return ret;
  }

  public FBXModelPtr GetChild(int index) {
    FBXModelPtr ret = new FBXModelPtr(FBXImporterUnmanagedPINVOKE.FBXModelPtr_GetChild(swigCPtr, index), true);
    return ret;
  }

  public void AddChild(FBXModelPtr child) {
    FBXImporterUnmanagedPINVOKE.FBXModelPtr_AddChild(swigCPtr, FBXModelPtr.getCPtr(child));
    if (FBXImporterUnmanagedPINVOKE.SWIGPendingException.Pending) throw FBXImporterUnmanagedPINVOKE.SWIGPendingException.Retrieve();
  }

  public void ResizeVertex(int count) {
    FBXImporterUnmanagedPINVOKE.FBXModelPtr_ResizeVertex(swigCPtr, count);
  }

  public void ResizeColor(int count) {
    FBXImporterUnmanagedPINVOKE.FBXModelPtr_ResizeColor(swigCPtr, count);
  }

  public void ResizeUV(int layerCount, int count) {
    FBXImporterUnmanagedPINVOKE.FBXModelPtr_ResizeUV(swigCPtr, layerCount, count);
  }

  public void ResizeNormal(int count) {
    FBXImporterUnmanagedPINVOKE.FBXModelPtr_ResizeNormal(swigCPtr, count);
  }

  public void ResizeTangent(int count) {
    FBXImporterUnmanagedPINVOKE.FBXModelPtr_ResizeTangent(swigCPtr, count);
  }

  public void ResizeBinormal(int count) {
    FBXImporterUnmanagedPINVOKE.FBXModelPtr_ResizeBinormal(swigCPtr, count);
  }

  public void ResizeMaterial(int count) {
    FBXImporterUnmanagedPINVOKE.FBXModelPtr_ResizeMaterial(swigCPtr, count);
  }

  public void SetPivotRotation(FBXVector3 value) {
    FBXImporterUnmanagedPINVOKE.FBXModelPtr_SetPivotRotation(swigCPtr, FBXVector3.getCPtr(value));
    if (FBXImporterUnmanagedPINVOKE.SWIGPendingException.Pending) throw FBXImporterUnmanagedPINVOKE.SWIGPendingException.Retrieve();
  }

  public void SetRotationOffset(FBXVector3 value) {
    FBXImporterUnmanagedPINVOKE.FBXModelPtr_SetRotationOffset(swigCPtr, FBXVector3.getCPtr(value));
    if (FBXImporterUnmanagedPINVOKE.SWIGPendingException.Pending) throw FBXImporterUnmanagedPINVOKE.SWIGPendingException.Retrieve();
  }

  public void SetPreRotation(FBXVector3 value) {
    FBXImporterUnmanagedPINVOKE.FBXModelPtr_SetPreRotation(swigCPtr, FBXVector3.getCPtr(value));
    if (FBXImporterUnmanagedPINVOKE.SWIGPendingException.Pending) throw FBXImporterUnmanagedPINVOKE.SWIGPendingException.Retrieve();
  }

  public void SetPostRotation(FBXVector3 value) {
    FBXImporterUnmanagedPINVOKE.FBXModelPtr_SetPostRotation(swigCPtr, FBXVector3.getCPtr(value));
    if (FBXImporterUnmanagedPINVOKE.SWIGPendingException.Pending) throw FBXImporterUnmanagedPINVOKE.SWIGPendingException.Retrieve();
  }

  public void SetPivotScale(FBXVector3 value) {
    FBXImporterUnmanagedPINVOKE.FBXModelPtr_SetPivotScale(swigCPtr, FBXVector3.getCPtr(value));
    if (FBXImporterUnmanagedPINVOKE.SWIGPendingException.Pending) throw FBXImporterUnmanagedPINVOKE.SWIGPendingException.Retrieve();
  }

  public void SetScalingOffset(FBXVector3 value) {
    FBXImporterUnmanagedPINVOKE.FBXModelPtr_SetScalingOffset(swigCPtr, FBXVector3.getCPtr(value));
    if (FBXImporterUnmanagedPINVOKE.SWIGPendingException.Pending) throw FBXImporterUnmanagedPINVOKE.SWIGPendingException.Retrieve();
  }

  public void SetTranslation(FBXVector3 value) {
    FBXImporterUnmanagedPINVOKE.FBXModelPtr_SetTranslation(swigCPtr, FBXVector3.getCPtr(value));
    if (FBXImporterUnmanagedPINVOKE.SWIGPendingException.Pending) throw FBXImporterUnmanagedPINVOKE.SWIGPendingException.Retrieve();
  }

  public void SetRotation(FBXVector3 value) {
    FBXImporterUnmanagedPINVOKE.FBXModelPtr_SetRotation(swigCPtr, FBXVector3.getCPtr(value));
    if (FBXImporterUnmanagedPINVOKE.SWIGPendingException.Pending) throw FBXImporterUnmanagedPINVOKE.SWIGPendingException.Retrieve();
  }

  public void SetScale(FBXVector3 value) {
    FBXImporterUnmanagedPINVOKE.FBXModelPtr_SetScale(swigCPtr, FBXVector3.getCPtr(value));
    if (FBXImporterUnmanagedPINVOKE.SWIGPendingException.Pending) throw FBXImporterUnmanagedPINVOKE.SWIGPendingException.Retrieve();
  }

  public void SetGeometryTranslation(FBXVector3 value) {
    FBXImporterUnmanagedPINVOKE.FBXModelPtr_SetGeometryTranslation(swigCPtr, FBXVector3.getCPtr(value));
    if (FBXImporterUnmanagedPINVOKE.SWIGPendingException.Pending) throw FBXImporterUnmanagedPINVOKE.SWIGPendingException.Retrieve();
  }

  public void SetGeometryRotation(FBXVector3 value) {
    FBXImporterUnmanagedPINVOKE.FBXModelPtr_SetGeometryRotation(swigCPtr, FBXVector3.getCPtr(value));
    if (FBXImporterUnmanagedPINVOKE.SWIGPendingException.Pending) throw FBXImporterUnmanagedPINVOKE.SWIGPendingException.Retrieve();
  }

  public void SetGeometryScale(FBXVector3 value) {
    FBXImporterUnmanagedPINVOKE.FBXModelPtr_SetGeometryScale(swigCPtr, FBXVector3.getCPtr(value));
    if (FBXImporterUnmanagedPINVOKE.SWIGPendingException.Pending) throw FBXImporterUnmanagedPINVOKE.SWIGPendingException.Retrieve();
  }

  public void AddVertex(FBXVector3 value) {
    FBXImporterUnmanagedPINVOKE.FBXModelPtr_AddVertex(swigCPtr, FBXVector3.getCPtr(value));
    if (FBXImporterUnmanagedPINVOKE.SWIGPendingException.Pending) throw FBXImporterUnmanagedPINVOKE.SWIGPendingException.Retrieve();
  }

  public void AddIndex(int subMesh, int value) {
    FBXImporterUnmanagedPINVOKE.FBXModelPtr_AddIndex(swigCPtr, subMesh, value);
  }

  public void AddColor(FBXColor value) {
    FBXImporterUnmanagedPINVOKE.FBXModelPtr_AddColor(swigCPtr, FBXColor.getCPtr(value));
    if (FBXImporterUnmanagedPINVOKE.SWIGPendingException.Pending) throw FBXImporterUnmanagedPINVOKE.SWIGPendingException.Retrieve();
  }

  public void AddUV(int layerIndex, FBXVector2 value) {
    FBXImporterUnmanagedPINVOKE.FBXModelPtr_AddUV(swigCPtr, layerIndex, FBXVector2.getCPtr(value));
    if (FBXImporterUnmanagedPINVOKE.SWIGPendingException.Pending) throw FBXImporterUnmanagedPINVOKE.SWIGPendingException.Retrieve();
  }

  public void AddNormal(FBXVector3 value) {
    FBXImporterUnmanagedPINVOKE.FBXModelPtr_AddNormal(swigCPtr, FBXVector3.getCPtr(value));
    if (FBXImporterUnmanagedPINVOKE.SWIGPendingException.Pending) throw FBXImporterUnmanagedPINVOKE.SWIGPendingException.Retrieve();
  }

  public void AddTangent(FBXVector4 value) {
    FBXImporterUnmanagedPINVOKE.FBXModelPtr_AddTangent(swigCPtr, FBXVector4.getCPtr(value));
    if (FBXImporterUnmanagedPINVOKE.SWIGPendingException.Pending) throw FBXImporterUnmanagedPINVOKE.SWIGPendingException.Retrieve();
  }

  public void AddBinormal(FBXVector4 value) {
    FBXImporterUnmanagedPINVOKE.FBXModelPtr_AddBinormal(swigCPtr, FBXVector4.getCPtr(value));
    if (FBXImporterUnmanagedPINVOKE.SWIGPendingException.Pending) throw FBXImporterUnmanagedPINVOKE.SWIGPendingException.Retrieve();
  }

  public void AddMaterial(FBXMaterialPtr value) {
    FBXImporterUnmanagedPINVOKE.FBXModelPtr_AddMaterial(swigCPtr, FBXMaterialPtr.getCPtr(value));
    if (FBXImporterUnmanagedPINVOKE.SWIGPendingException.Pending) throw FBXImporterUnmanagedPINVOKE.SWIGPendingException.Retrieve();
  }

  public void SetVertex(int index, FBXVector3 value) {
    FBXImporterUnmanagedPINVOKE.FBXModelPtr_SetVertex(swigCPtr, index, FBXVector3.getCPtr(value));
    if (FBXImporterUnmanagedPINVOKE.SWIGPendingException.Pending) throw FBXImporterUnmanagedPINVOKE.SWIGPendingException.Retrieve();
  }

  public void SetColor(int index, FBXColor value) {
    FBXImporterUnmanagedPINVOKE.FBXModelPtr_SetColor(swigCPtr, index, FBXColor.getCPtr(value));
    if (FBXImporterUnmanagedPINVOKE.SWIGPendingException.Pending) throw FBXImporterUnmanagedPINVOKE.SWIGPendingException.Retrieve();
  }

  public void SetUVLayer(int layerIndex) {
    FBXImporterUnmanagedPINVOKE.FBXModelPtr_SetUVLayer(swigCPtr, layerIndex);
  }

  public void SetUV(int layerIndex, int index, FBXVector2 value) {
    FBXImporterUnmanagedPINVOKE.FBXModelPtr_SetUV(swigCPtr, layerIndex, index, FBXVector2.getCPtr(value));
    if (FBXImporterUnmanagedPINVOKE.SWIGPendingException.Pending) throw FBXImporterUnmanagedPINVOKE.SWIGPendingException.Retrieve();
  }

  public void SetNormal(int index, FBXVector3 value) {
    FBXImporterUnmanagedPINVOKE.FBXModelPtr_SetNormal(swigCPtr, index, FBXVector3.getCPtr(value));
    if (FBXImporterUnmanagedPINVOKE.SWIGPendingException.Pending) throw FBXImporterUnmanagedPINVOKE.SWIGPendingException.Retrieve();
  }

  public void SetTangent(int index, FBXVector4 value) {
    FBXImporterUnmanagedPINVOKE.FBXModelPtr_SetTangent(swigCPtr, index, FBXVector4.getCPtr(value));
    if (FBXImporterUnmanagedPINVOKE.SWIGPendingException.Pending) throw FBXImporterUnmanagedPINVOKE.SWIGPendingException.Retrieve();
  }

  public void SetBinormal(int index, FBXVector4 value) {
    FBXImporterUnmanagedPINVOKE.FBXModelPtr_SetBinormal(swigCPtr, index, FBXVector4.getCPtr(value));
    if (FBXImporterUnmanagedPINVOKE.SWIGPendingException.Pending) throw FBXImporterUnmanagedPINVOKE.SWIGPendingException.Retrieve();
  }

  public void SetIndexMap(int iControlPoint, int iVertex) {
    FBXImporterUnmanagedPINVOKE.FBXModelPtr_SetIndexMap(swigCPtr, iControlPoint, iVertex);
  }

  public void SetMaterial(int index, FBXMaterialPtr value) {
    FBXImporterUnmanagedPINVOKE.FBXModelPtr_SetMaterial(swigCPtr, index, FBXMaterialPtr.getCPtr(value));
    if (FBXImporterUnmanagedPINVOKE.SWIGPendingException.Pending) throw FBXImporterUnmanagedPINVOKE.SWIGPendingException.Retrieve();
  }

  public void AddMaterialPolygons(int iMaterial, int iPolygon) {
    FBXImporterUnmanagedPINVOKE.FBXModelPtr_AddMaterialPolygons(swigCPtr, iMaterial, iPolygon);
  }

  public FBXVector3 GetPivotRotation() {
    FBXVector3 ret = new FBXVector3(FBXImporterUnmanagedPINVOKE.FBXModelPtr_GetPivotRotation(swigCPtr), true);
    return ret;
  }

  public FBXVector3 GetRotationOffset() {
    FBXVector3 ret = new FBXVector3(FBXImporterUnmanagedPINVOKE.FBXModelPtr_GetRotationOffset(swigCPtr), true);
    return ret;
  }

  public FBXVector3 GetPreRotation() {
    FBXVector3 ret = new FBXVector3(FBXImporterUnmanagedPINVOKE.FBXModelPtr_GetPreRotation(swigCPtr), true);
    return ret;
  }

  public FBXVector3 GetPostRotation() {
    FBXVector3 ret = new FBXVector3(FBXImporterUnmanagedPINVOKE.FBXModelPtr_GetPostRotation(swigCPtr), true);
    return ret;
  }

  public FBXVector3 GetPivotScale() {
    FBXVector3 ret = new FBXVector3(FBXImporterUnmanagedPINVOKE.FBXModelPtr_GetPivotScale(swigCPtr), true);
    return ret;
  }

  public FBXVector3 GetScalingOffset() {
    FBXVector3 ret = new FBXVector3(FBXImporterUnmanagedPINVOKE.FBXModelPtr_GetScalingOffset(swigCPtr), true);
    return ret;
  }

  public FBXVector3 GetTranslation() {
    FBXVector3 ret = new FBXVector3(FBXImporterUnmanagedPINVOKE.FBXModelPtr_GetTranslation(swigCPtr), true);
    return ret;
  }

  public FBXVector3 GetRotation() {
    FBXVector3 ret = new FBXVector3(FBXImporterUnmanagedPINVOKE.FBXModelPtr_GetRotation(swigCPtr), true);
    return ret;
  }

  public FBXVector3 GetScale() {
    FBXVector3 ret = new FBXVector3(FBXImporterUnmanagedPINVOKE.FBXModelPtr_GetScale(swigCPtr), true);
    return ret;
  }

  public FBXVector3 GetGeometryTranslation() {
    FBXVector3 ret = new FBXVector3(FBXImporterUnmanagedPINVOKE.FBXModelPtr_GetGeometryTranslation(swigCPtr), true);
    return ret;
  }

  public FBXVector3 GetGeometryRotation() {
    FBXVector3 ret = new FBXVector3(FBXImporterUnmanagedPINVOKE.FBXModelPtr_GetGeometryRotation(swigCPtr), true);
    return ret;
  }

  public FBXVector3 GetGeometryScale() {
    FBXVector3 ret = new FBXVector3(FBXImporterUnmanagedPINVOKE.FBXModelPtr_GetGeometryScale(swigCPtr), true);
    return ret;
  }

  public FBXVector3 GetVertex(int index) {
    FBXVector3 ret = new FBXVector3(FBXImporterUnmanagedPINVOKE.FBXModelPtr_GetVertex(swigCPtr, index), true);
    return ret;
  }

  public int GetIndex(int iMaterial, int index) {
    int ret = FBXImporterUnmanagedPINVOKE.FBXModelPtr_GetIndex(swigCPtr, iMaterial, index);
    return ret;
  }

  public FBXColor GetColor(int index) {
    FBXColor ret = new FBXColor(FBXImporterUnmanagedPINVOKE.FBXModelPtr_GetColor(swigCPtr, index), true);
    return ret;
  }

  public FBXVector2 GetUV(int layerIndex, int index) {
    FBXVector2 ret = new FBXVector2(FBXImporterUnmanagedPINVOKE.FBXModelPtr_GetUV(swigCPtr, layerIndex, index), true);
    return ret;
  }

  public FBXVector3 GetNormal(int index) {
    FBXVector3 ret = new FBXVector3(FBXImporterUnmanagedPINVOKE.FBXModelPtr_GetNormal(swigCPtr, index), true);
    return ret;
  }

  public FBXVector4 GetTangent(int index) {
    FBXVector4 ret = new FBXVector4(FBXImporterUnmanagedPINVOKE.FBXModelPtr_GetTangent(swigCPtr, index), true);
    return ret;
  }

  public FBXVector4 GetBinormal(int index) {
    FBXVector4 ret = new FBXVector4(FBXImporterUnmanagedPINVOKE.FBXModelPtr_GetBinormal(swigCPtr, index), true);
    return ret;
  }

  public int GetIndexMapCount(int iControlPoint) {
    int ret = FBXImporterUnmanagedPINVOKE.FBXModelPtr_GetIndexMapCount(swigCPtr, iControlPoint);
    return ret;
  }

  public int GetIndexMap(int iControlPoint, int index) {
    int ret = FBXImporterUnmanagedPINVOKE.FBXModelPtr_GetIndexMap(swigCPtr, iControlPoint, index);
    return ret;
  }

  public FBXMaterialPtr GetMaterial(int index) {
    FBXMaterialPtr ret = new FBXMaterialPtr(FBXImporterUnmanagedPINVOKE.FBXModelPtr_GetMaterial(swigCPtr, index), true);
    return ret;
  }

  public int GetMaterialPolygonCount(int iMaterial) {
    int ret = FBXImporterUnmanagedPINVOKE.FBXModelPtr_GetMaterialPolygonCount(swigCPtr, iMaterial);
    return ret;
  }

  public int GetMaterialPolygon(int iMaterial, int index) {
    int ret = FBXImporterUnmanagedPINVOKE.FBXModelPtr_GetMaterialPolygon(swigCPtr, iMaterial, index);
    return ret;
  }

  public int GetVertexCount() {
    int ret = FBXImporterUnmanagedPINVOKE.FBXModelPtr_GetVertexCount(swigCPtr);
    return ret;
  }

  public int GetIndiceCount(int iMaterial) {
    int ret = FBXImporterUnmanagedPINVOKE.FBXModelPtr_GetIndiceCount(swigCPtr, iMaterial);
    return ret;
  }

  public int GetColorCount() {
    int ret = FBXImporterUnmanagedPINVOKE.FBXModelPtr_GetColorCount(swigCPtr);
    return ret;
  }

  public int GetUVLayerCount() {
    int ret = FBXImporterUnmanagedPINVOKE.FBXModelPtr_GetUVLayerCount(swigCPtr);
    return ret;
  }

  public int GetUVCount(int layerIndex) {
    int ret = FBXImporterUnmanagedPINVOKE.FBXModelPtr_GetUVCount(swigCPtr, layerIndex);
    return ret;
  }

  public int GetNormalCount() {
    int ret = FBXImporterUnmanagedPINVOKE.FBXModelPtr_GetNormalCount(swigCPtr);
    return ret;
  }

  public int GetTangentCount() {
    int ret = FBXImporterUnmanagedPINVOKE.FBXModelPtr_GetTangentCount(swigCPtr);
    return ret;
  }

  public int GetBinormalCount() {
    int ret = FBXImporterUnmanagedPINVOKE.FBXModelPtr_GetBinormalCount(swigCPtr);
    return ret;
  }

  public int GetMaterialCount() {
    int ret = FBXImporterUnmanagedPINVOKE.FBXModelPtr_GetMaterialCount(swigCPtr);
    return ret;
  }

  public void addReference() {
    FBXImporterUnmanagedPINVOKE.FBXModelPtr_addReference(swigCPtr);
  }

  public void removeReference() {
    FBXImporterUnmanagedPINVOKE.FBXModelPtr_removeReference(swigCPtr);
  }

  public int getReferenceCount() {
    int ret = FBXImporterUnmanagedPINVOKE.FBXModelPtr_getReferenceCount(swigCPtr);
    return ret;
  }

}
